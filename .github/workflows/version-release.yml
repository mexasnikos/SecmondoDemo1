name: Auto Version & Release

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository without submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      # Step 2: Bump version and create tag
      - name: Bump version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          tag_prefix: v

      # Step 3: Generate enhanced changelog
      - name: Generate changelog
        id: changelog
        run: |
          git fetch --tags
          PREV_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          # Generate changed files grouped by folder
          if [ -z "$PREV_TAG" ]; then
            git ls-files > files.txt
            git log --pretty=format:"%h|%s" > commits.txt
          else
            git diff --name-only $PREV_TAG HEAD > files.txt
            git log $PREV_TAG..HEAD --pretty=format:"%h|%s" > commits.txt
          fi

          # Group files by folder for release notes
          awk -F/ '{print "- " $1 "/" }' files.txt | sort | uniq > changed_files_grouped.txt

          # Prepare clickable commits
          REPO_URL="https://github.com/${GITHUB_REPOSITORY}/commit"
          awk -F"|" '{print "- [" $2 "]('"$REPO_URL"/"$1"')"}' commits.txt > commits_linked.txt

      # Step 4: Create GitHub Release with grouped files and linked commits
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            Automated release generated by GitHub Actions.

            **Changed files grouped by folder:**
            $(cat changed_files_grouped.txt)

            **Commits included in this release:**
            $(cat commits_linked.txt)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
