{"ast":null,"code":"import _objectSpread from\"C:/Users/laptop-123/TravelInsurance_Demo_2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import'./Quote2.css';// Import API service for database integration\nimport{createQuote,processPayment as apiProcessPayment}from'../services/apiService';// Import Terracotta service for insurance quotes\nimport TerracottaService from'../services/terracottaService';// Import jsPDF dynamically to avoid build issues\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const generatePDF=async(formData,calculateTotalPrice,formatDateToEuropean,policyNumber)=>{try{var _formData$selectedQuo;// Dynamic import of jsPDF\nconst jsPDF=(await import('jspdf')).default;const doc=new jsPDF();const currentDate=new Date().toLocaleDateString('en-GB');// Set up fonts and styles\ndoc.setFontSize(20);doc.text('TRAVEL INSURANCE POLICY',20,20);doc.setFontSize(14);doc.text(\"Policy Number: \".concat(policyNumber),20,35);doc.text(\"Issue Date: \".concat(currentDate),20,45);let yPos=65;// Trip Information Section\ndoc.setFontSize(16);doc.text('TRIP INFORMATION',20,yPos);yPos+=15;doc.setFontSize(12);const tripType=formData.tripType==='single'?'Single Trip Insurance':formData.tripType==='annual'?'Annual Multi-Trip Insurance':formData.tripType==='longstay'?'Long Stay Travel Insurance':'Comprehensive Single Trip Insurance';doc.text(\"Trip Type: \".concat(tripType),20,yPos);yPos+=10;doc.text(\"Country of Residence: \".concat(formData.countryOfResidence),20,yPos);yPos+=10;doc.text(\"Destination: \".concat(formData.destination),20,yPos);yPos+=10;doc.text(\"Departure: \".concat(formatDateToEuropean(formData.startDate)),20,yPos);yPos+=10;doc.text(\"Return: \".concat(formatDateToEuropean(formData.endDate)),20,yPos);yPos+=10;doc.text(\"Travelers: \".concat(formData.numberOfTravelers),20,yPos);yPos+=20;// Traveler Information\ndoc.setFontSize(16);doc.text('TRAVELER INFORMATION',20,yPos);yPos+=15;doc.setFontSize(12);formData.travelers.forEach((traveler,index)=>{if(yPos>250){// New page if needed\ndoc.addPage();yPos=20;}doc.text(\"\".concat(index===0?'Primary Policyholder':\"Traveler \".concat(index+1),\":\"),20,yPos);yPos+=10;doc.text(\"Name: \".concat(traveler.firstName,\" \").concat(traveler.lastName),20,yPos);yPos+=8;doc.text(\"Age: \".concat(traveler.age,\" years old\"),20,yPos);yPos+=8;doc.text(\"Email: \".concat(traveler.email),20,yPos);yPos+=8;if(traveler.phone){doc.text(\"Phone: \".concat(traveler.phone),20,yPos);yPos+=8;}yPos+=10;});// Selected Plan\nif(formData.selectedQuote){if(yPos>180){doc.addPage();yPos=20;}doc.setFontSize(16);doc.text('SELECTED INSURANCE PLAN',20,yPos);yPos+=15;doc.setFontSize(12);doc.text(\"Plan: \".concat(formData.selectedQuote.name),20,yPos);yPos+=10;doc.text(\"Medical: \".concat(formData.selectedQuote.coverage.medical),20,yPos);yPos+=10;doc.text(\"Baggage: \".concat(formData.selectedQuote.coverage.baggage),20,yPos);yPos+=10;doc.text(\"Cancellation: \".concat(formData.selectedQuote.coverage.cancellation),20,yPos);yPos+=15;// Add Included Features\nif(formData.selectedQuote.features&&formData.selectedQuote.features.length>0){doc.text('Included Features:',20,yPos);yPos+=10;formData.selectedQuote.features.forEach(feature=>{if(yPos>270){// Check for page break\ndoc.addPage();yPos=20;}doc.text(\"\\u2022 \".concat(feature),25,yPos);yPos+=8;});yPos+=10;}}// Additional Coverage\nif(formData.additionalPolicies&&formData.additionalPolicies.length>0){if(yPos>220){doc.addPage();yPos=20;}doc.setFontSize(16);doc.text('ADDITIONAL COVERAGE',20,yPos);yPos+=15;doc.setFontSize(12);formData.additionalPolicies.forEach(policy=>{if(yPos>270){// Check for page break\ndoc.addPage();yPos=20;}doc.text(\"\\u2022 \".concat(policy.name,\" - \\u20AC\").concat(policy.price.toFixed(2)),25,yPos);yPos+=8;});yPos+=15;}// Premium Summary\nif(yPos>200){doc.addPage();yPos=20;}doc.setFontSize(16);doc.text('PREMIUM SUMMARY',20,yPos);yPos+=15;doc.setFontSize(12);doc.text(\"Base Premium: \\u20AC\".concat((_formData$selectedQuo=formData.selectedQuote)===null||_formData$selectedQuo===void 0?void 0:_formData$selectedQuo.price),20,yPos);yPos+=10;if(formData.additionalPolicies&&formData.additionalPolicies.length>0){const additional=formData.additionalPolicies.reduce((sum,policy)=>sum+policy.price,0);doc.text(\"Additional Policies: \\u20AC\".concat(additional.toFixed(2)),20,yPos);yPos+=10;}doc.text('Taxes & Fees: Included',20,yPos);yPos+=10;doc.text(\"Total Premium: \\u20AC\".concat(calculateTotalPrice().toFixed(2)),20,yPos);yPos+=20;doc.text('Emergency Contact: +30 6974907500',20,yPos);// Save the PDF\ndoc.save(\"Travel_Insurance_Policy_\".concat(policyNumber,\".pdf\"));}catch(error){console.error('PDF generation failed, falling back to HTML:',error);// Fallback to HTML generation if PDF fails\ngenerateHTMLPolicy(formData,calculateTotalPrice,formatDateToEuropean,policyNumber);}};const generateHTMLPolicy=(formData,calculateTotalPrice,formatDateToEuropean,policyNumber)=>{var _formData$selectedQuo2;const currentDate=new Date().toLocaleDateString('en-GB');const htmlContent=\"\\n<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Travel Insurance Policy - \".concat(policyNumber,\"</title>\\n    <style>\\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\\n        .section { margin-bottom: 25px; }\\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\\n        .info-row { margin: 8px 0; }\\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\\n        @media print { body { margin: 0; } }\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"header\\\">\\n        <h1>TRAVEL INSURANCE POLICY</h1>\\n        <h2>Policy Number: \").concat(policyNumber,\"</h2>\\n        <p>Issue Date: \").concat(currentDate,\"</p>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">TRIP INFORMATION</div>\\n        <div class=\\\"info-row\\\"><strong>Trip Type:</strong> \").concat(formData.tripType==='single'?'Single Trip Insurance':formData.tripType==='annual'?'Annual Multi-Trip Insurance':formData.tripType==='longstay'?'Long Stay Travel Insurance':'Comprehensive Single Trip Insurance',\"</div>\\n        <div class=\\\"info-row\\\"><strong>Country of Residence:</strong> \").concat(formData.countryOfResidence,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Destination:</strong> \").concat(formData.destination,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Departure:</strong> \").concat(formatDateToEuropean(formData.startDate),\"</div>\\n        <div class=\\\"info-row\\\"><strong>Return:</strong> \").concat(formatDateToEuropean(formData.endDate),\"</div>\\n        <div class=\\\"info-row\\\"><strong>Travelers:</strong> \").concat(formData.numberOfTravelers,\"</div>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">TRAVELER INFORMATION</div>\\n        \").concat(formData.travelers.map((traveler,index)=>\"\\n            <div class=\\\"traveler-block\\\">\\n                <strong>\".concat(index===0?'Primary Policyholder':\"Traveler \".concat(index+1),\"</strong>\\n                <div class=\\\"info-row\\\"><strong>Name:</strong> \").concat(traveler.firstName,\" \").concat(traveler.lastName,\"</div>\\n                <div class=\\\"info-row\\\"><strong>Age:</strong> \").concat(traveler.age,\" years old</div>\\n                <div class=\\\"info-row\\\"><strong>Email:</strong> \").concat(traveler.email,\"</div>\\n                \").concat(traveler.phone?\"<div class=\\\"info-row\\\"><strong>Phone:</strong> \".concat(traveler.phone,\"</div>\"):'',\"\\n            </div>\\n        \")).join(''),\"\\n    </div>\\n    \\n    \").concat(formData.selectedQuote?\"\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">SELECTED INSURANCE PLAN</div>\\n        <div class=\\\"info-row\\\"><strong>Plan:</strong> \".concat(formData.selectedQuote.name,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Medical Coverage:</strong> \").concat(formData.selectedQuote.coverage.medical,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Baggage Coverage:</strong> \").concat(formData.selectedQuote.coverage.baggage,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Trip Cancellation:</strong> \").concat(formData.selectedQuote.coverage.cancellation,\"</div>\\n        \\n        \").concat(formData.selectedQuote.features&&formData.selectedQuote.features.length>0?\"\\n        <div style=\\\"margin-top: 15px;\\\">\\n            <strong>Included Features:</strong>\\n            <ul>\\n                \".concat(formData.selectedQuote.features.map(feature=>\"<li>\".concat(feature,\"</li>\")).join(''),\"\\n            </ul>\\n        </div>\\n        \"):'',\"\\n    </div>\\n    \"):'',\"\\n    \\n    \").concat(formData.additionalPolicies&&formData.additionalPolicies.length>0?\"\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">ADDITIONAL COVERAGE</div>\\n        <ul>\\n            \".concat(formData.additionalPolicies.map(policy=>\"<li>\".concat(policy.name,\" - \\u20AC\").concat(policy.price.toFixed(2),\"</li>\")).join(''),\"\\n        </ul>\\n    </div>\\n    \"):'',\"\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">PREMIUM SUMMARY</div>\\n        <div class=\\\"info-row\\\"><strong>Base Premium:</strong> \\u20AC\").concat((_formData$selectedQuo2=formData.selectedQuote)===null||_formData$selectedQuo2===void 0?void 0:_formData$selectedQuo2.price,\"</div>\\n        \").concat(formData.additionalPolicies&&formData.additionalPolicies.length>0?\"\\n        <div class=\\\"info-row\\\"><strong>Additional Policies:</strong> \\u20AC\".concat(formData.additionalPolicies.reduce((sum,policy)=>sum+policy.price,0).toFixed(2),\"</div>\\n        \"):'',\"\\n        <div class=\\\"info-row\\\"><strong>Taxes & Fees:</strong> Included</div>\\n        <div class=\\\"info-row\\\"><strong>Total Premium:</strong> \\u20AC\").concat(calculateTotalPrice().toFixed(2),\"</div>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"info-row\\\"><strong>Emergency Contact:</strong> +30 6974907500</div>\\n        <div class=\\\"info-row\\\" style=\\\"margin-top: 20px; font-style: italic;\\\">\\n            This document serves as proof of travel insurance coverage.\\n        </div>\\n    </div>\\n    \\n    <script>\\n        window.onload = function() { window.print(); };\\n        window.onafterprint = function() { window.close(); };\\n    </script>\\n</body>\\n</html>\");const printWindow=window.open('','_blank','width=800,height=600');if(printWindow){printWindow.document.write(htmlContent);printWindow.document.close();}};// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean=dateString=>{if(!dateString)return'';// Parse the ISO date string directly to avoid timezone issues\nconst[year,month,day]=dateString.split('-');return\"\".concat(day,\"/\").concat(month,\"/\").concat(year);};const calculateAgeFromDateOfBirth=dateOfBirth=>{const birthDate=new Date(dateOfBirth);const today=new Date();let age=today.getFullYear()-birthDate.getFullYear();const monthDiff=today.getMonth()-birthDate.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birthDate.getDate()){age--;}return Math.max(0,age);};const Quote2=_ref=>{let{onNavigate}=_ref;const[currentPhase,setCurrentPhase]=useState(1);const[formData,setFormData]=useState({destination:'',startDate:'',endDate:'',tripType:'single',countryOfResidence:'',numberOfTravelers:1,travelers:[{firstName:'',lastName:'',age:'',email:'',phone:'',vaxId:'',nationality:''}],selectedQuote:null,additionalPolicies:[],paymentMethod:'card',cardNumber:'',expiryDate:'',cvv:'',billingAddress:{street:'',city:'',postalCode:'',country:''}});const[quoteOptions,setQuoteOptions]=useState([]);const[isProcessing,setIsProcessing]=useState(false);const[policyNumber,setPolicyNumber]=useState('');const[terracottaService]=useState(()=>{console.log('Creating TerracottaService instance...');return TerracottaService.getInstance('4072','111427');});const[screeningQuestions,setScreeningQuestions]=useState([]);const[screeningAnswers,setScreeningAnswers]=useState({});const[isLoadingQuotes,setIsLoadingQuotes]=useState(false);const[quoteError,setQuoteError]=useState('');const[availableProducts,setAvailableProducts]=useState([]);const[isLoadingProducts,setIsLoadingProducts]=useState(true);// Policy types state\nconst[availablePolicyTypes,setAvailablePolicyTypes]=useState([]);const[isLoadingPolicyTypes,setIsLoadingPolicyTypes]=useState(false);// Policy type destinations state (Trip Types)\nconst[availablePolicyTypeDestinations,setAvailablePolicyTypeDestinations]=useState([]);const[isLoadingPolicyTypeDestinations,setIsLoadingPolicyTypeDestinations]=useState(false);// Destination categories state\nconst[destinationCategories,setDestinationCategories]=useState([]);const[isLoadingCategories,setIsLoadingCategories]=useState(false);// Help popup state\nconst[showHelpPopup,setShowHelpPopup]=useState(false);const[countriesByCategory,setCountriesByCategory]=useState({});const[isLoadingCountries,setIsLoadingCountries]=useState(false);// Countries of residence state\nconst[countriesOfResidence,setCountriesOfResidence]=useState([]);const[isLoadingCountriesOfResidence,setIsLoadingCountriesOfResidence]=useState(false);const[availableAdditionalPolicies]=useState([{id:'excess-waiver',name:'Excess Waiver',description:'You can avoid paying the policy excess by adding the Excess Waiver option. This means that in the event of a claim, you won\\'t have the excess deducted from the amount you are paid.',price:8.45,icon:'🛡️',category:'Protection'},{id:'cancellation-top-up',name:'Cancellation Top Up',description:'Additional cancellation coverage for enhanced protection against trip cancellation costs.',price:15.50,icon:'❌',category:'Cancellation'},{id:'hazardous-pursuits-cat3',name:'Hazardous Pursuits Category 3',description:'Coverage for adventure sports and activities including skiing, snowboarding, and water sports.',price:12.30,icon:'🏂',category:'Activities'},{id:'hazardous-pursuits-cat4',name:'Hazardous Pursuits Category 4',description:'Coverage for extreme sports including rock climbing, bungee jumping, and skydiving.',price:18.75,icon:'🪂',category:'Activities'},{id:'valuables',name:'Valuables',description:'Enhanced coverage for valuable items including jewelry, electronics, and expensive equipment.',price:22.40,icon:'💎',category:'Protection'},{id:'golfers-extension',name:'Golfers Extension',description:'Specialized coverage for golf equipment, green fees, and golf-related incidents.',price:14.80,icon:'⛳',category:'Sports'},{id:'event-cancellation',name:'Event Cancellation',description:'Coverage for cancellation of prepaid events, concerts, or special occasions during your trip.',price:19.95,icon:'🎫',category:'Events'},{id:'repatriation-home',name:'Repatriation Home For Australians, South Africans, And New Zealanders',description:'Special repatriation coverage for travelers from Australia, South Africa, and New Zealand.',price:25.60,icon:'✈️',category:'Repatriation'}]);useEffect(()=>{window.scrollTo({top:0,behavior:'smooth'});},[]);// Load available Terracotta products on component mount\nuseEffect(()=>{const loadTerracottaProducts=async()=>{try{var _productResponse$Sche;setIsLoadingProducts(true);console.log('Loading Terracotta products...');const productResponse=await terracottaService.getUserProductList();console.log('Terracotta products loaded:',productResponse);console.log(\"\\u2705 Successfully loaded \".concat(((_productResponse$Sche=productResponse.Schemas)===null||_productResponse$Sche===void 0?void 0:_productResponse$Sche.length)||0,\" products for your account\"));setAvailableProducts(productResponse.Schemas||[]);setIsLoadingProducts(false);}catch(error){console.error('Error loading Terracotta products:',error);setIsLoadingProducts(false);// Don't show error to user, just log it - we'll use fallback\n}};loadTerracottaProducts();},[terracottaService]);// Load policy types when products are available\nuseEffect(()=>{const loadPolicyTypes=async()=>{if(availableProducts.length===0)return;try{setIsLoadingPolicyTypes(true);console.log('Loading policy types for available products...');// Load policy types for each product (schema)\nconst allPolicyTypes=[];for(const product of availableProducts){try{console.log(\"Loading policy types for schema \".concat(product.SchemaID,\": \").concat(product.SchemaName));const policyResponse=await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());console.log(\"Policy types for schema \".concat(product.SchemaID,\":\"),policyResponse);// Add schema context to each policy type\nconst policyTypesWithSchema=policyResponse.PolicyTypes.map(policyType=>_objectSpread(_objectSpread({},policyType),{},{SchemaID:product.SchemaID,SchemaName:product.SchemaName}));allPolicyTypes.push(...policyTypesWithSchema);}catch(error){console.error(\"Error loading policy types for schema \".concat(product.SchemaID,\":\"),error);}}// Remove duplicates based on TypePolicyID\nconst uniquePolicyTypes=allPolicyTypes.filter((policyType,index,self)=>index===self.findIndex(p=>p.TypePolicyID===policyType.TypePolicyID));setAvailablePolicyTypes(uniquePolicyTypes);console.log(\"\\u2705 Successfully loaded \".concat(uniquePolicyTypes.length,\" unique policy types\"));setIsLoadingPolicyTypes(false);}catch(error){console.error('Error loading policy types:',error);setIsLoadingPolicyTypes(false);}};loadPolicyTypes();},[availableProducts,terracottaService]);// Load policy types (Trip Types) when products are available\nuseEffect(()=>{const loadPolicyTypes=async()=>{if(availableProducts.length===0)return;try{setIsLoadingPolicyTypeDestinations(true);console.log('Loading policy types for available products...');// Load policy types for each product (schema) - Using schema 717 as specified\nconst allPolicyTypes=[];// Use schema 717 as specified in the requirement\nconst schemaToUse=availableProducts.find(p=>p.SchemaID===717)||availableProducts[0];try{console.log(\"Loading policy types for schema \".concat(schemaToUse.SchemaID,\": \").concat(schemaToUse.SchemaName));const policyTypeResponse=await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());console.log(\"Policy types for schema \".concat(schemaToUse.SchemaID,\":\"),policyTypeResponse);allPolicyTypes.push(...policyTypeResponse.PolicyTypes);}catch(error){console.error(\"Error loading policy types for schema \".concat(schemaToUse.SchemaID,\":\"),error);}setAvailablePolicyTypes(allPolicyTypes);console.log(\"\\u2705 Successfully loaded \".concat(allPolicyTypes.length,\" policy types\"));setIsLoadingPolicyTypeDestinations(false);}catch(error){console.error('Error loading policy types:',error);setIsLoadingPolicyTypeDestinations(false);}};loadPolicyTypes();},[availableProducts,terracottaService]);// Show a brief message when end date is cleared due to start date change\nuseEffect(()=>{if(formData.startDate&&!formData.endDate){// This effect will run when start date exists but end date is empty\n// We could add a toast notification here if needed\n}},[formData.startDate,formData.endDate]);// Load countries of residence on component mount\nuseEffect(()=>{const loadCountriesOfResidence=async()=>{try{setIsLoadingCountriesOfResidence(true);console.log('Loading countries of residence...');const response=await fetch('http://localhost:5002/api/countries');const data=await response.json();if(data.status==='success'){setCountriesOfResidence(data.countries);console.log('✅ Countries of residence loaded:',data.countries.length,'countries');}else{console.error('❌ Failed to load countries of residence:',data.message);}}catch(error){console.error('❌ Error loading countries of residence:',error);}finally{setIsLoadingCountriesOfResidence(false);}};loadCountriesOfResidence();},[]);// Load destination categories on component mount\nuseEffect(()=>{const loadDestinationCategories=async()=>{try{setIsLoadingCategories(true);console.log('Loading destination categories...');const response=await fetch('http://localhost:5002/api/destination-categories');const data=await response.json();if(data.status==='success'){setDestinationCategories(data.categories);console.log('✅ Destination categories loaded:',data.categories);}else{console.error('❌ Failed to load destination categories:',data.message);}}catch(error){console.error('❌ Error loading destination categories:',error);// Set fallback categories if API fails\nsetDestinationCategories(['Europe','Worldwide']);}finally{setIsLoadingCategories(false);}};loadDestinationCategories();},[]);// Load countries for each category when categories are loaded\nuseEffect(()=>{const loadCountriesForCategories=async()=>{if(destinationCategories.length===0)return;try{setIsLoadingCountries(true);const countriesData={};// Load countries for each category\nfor(const category of destinationCategories){try{const response=await fetch(\"http://localhost:5002/api/destination-categories/\".concat(encodeURIComponent(category),\"/countries\"));const data=await response.json();if(data.status==='success'){countriesData[category]=data.countries;}}catch(error){console.error(\"Error loading countries for \".concat(category,\":\"),error);countriesData[category]=[];}}setCountriesByCategory(countriesData);}catch(error){console.error('Error loading countries:',error);}finally{setIsLoadingCountries(false);}};loadCountriesForCategories();},[destinationCategories]);// Generate quotes when component mounts or when form data is complete\nuseEffect(()=>{const generateQuotesIfNeeded=async()=>{// Only generate quotes if we have basic form data and we're in phase 2\nif(currentPhase===2&&quoteOptions.length===0){console.log('🔄 Generating quotes on component load...');try{const options=await generateQuoteOptions();setQuoteOptions(options);}catch(error){console.error('Error generating quotes:',error);}}};generateQuotesIfNeeded();},[currentPhase]);// REMOVED: Auto-loading sample quotes - now using real SOAP response\n// useEffect(() => {\n//   if (currentPhase === 2) {\n//     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n//     const sampleQuotes = generateSampleSOAPQuotes();\n//     setQuoteOptions(sampleQuotes);\n//     setIsLoadingQuotes(false);\n//   }\n// }, [currentPhase]);\nconst generateQuoteOptions=async()=>{setIsLoadingQuotes(true);setQuoteError('');try{var _response$quoteResult;console.log('🚀 Getting real quotes from Terracotta SOAP API...');console.log('Form data:',formData);// Make a single SOAP request to get all available quotes\nconst terracottaRequest=TerracottaService.convertToTerracottaFormat(formData);console.log('SOAP Request:',terracottaRequest);// Get quotes from Terracotta SOAP API\nconst response=await terracottaService.provideQuotation(terracottaRequest);console.log('SOAP Response:',response);console.log('📊 SOAP Response Message:',response.Message);console.log('📊 Quote Results Count:',((_response$quoteResult=response.quoteResults)===null||_response$quoteResult===void 0?void 0:_response$quoteResult.length)||0);if(response.quoteResults&&response.quoteResults.length>0){console.log('📊 Processing SOAP results:',response.quoteResults);// Convert SOAP response directly to QuoteOption format\nconst realQuotes=response.quoteResults.map((result,index)=>{console.log(\"Processing quote \".concat(index+1,\":\"),result);return{id:\"soap-\".concat(result.QuoteID),name:\"\".concat(result.schemaName,\" - \").concat(result.policytypeName||result.typePolicyName),type:result.isBestBuy===1?'premium':result.GrossPrice>100?'standard':'basic',price:result.GrossPrice||0,coverage:{medical:result.coverLevel>0?\"\\u20AC\".concat((result.coverLevel*1000000).toLocaleString()):'€2,000,000',baggage:'€1,000',// This would ideally come from SOAP response\ncancellation:'€2,000',// This would ideally come from SOAP response\nactivities:['Standard activities','Adventure sports']},features:['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection',...(result.isAnnual===1?['Annual Multi-Trip Coverage']:[]),...(result.isBestBuy===1?['Best Buy Option']:[]),...(result.maxDaysPerTrip>0?[\"Up to \".concat(result.maxDaysPerTrip,\" days per trip\")]:[])],// Real SOAP response data\nterracottaQuoteId:result.QuoteID,schemaName:result.schemaName,policytypeName:result.policytypeName,policyTypeName:result.typePolicyName||result.policytypeName,typePolicyName:result.typePolicyName||result.policytypeName,summaryOfCoverUrl:result.SI,policyWordingUrl:result.PW,currency:result.currency,ipt:result.IPT,// Complete SOAP response fields\nschemaID:result.SchemaID,destinationCategory:result.destinationName,tripType:formData.tripType,residenceName:result.residenceName,destinationName:result.destinationName,packageName:result.packageName,typePackageName:result.typePackageName,isAnnual:result.isAnnual,isBestBuy:result.isBestBuy,isBestBuyText:result.isBestBuyText,maxDaysPerTrip:result.maxDaysPerTrip,coverLevel:result.coverLevel,discount:result.Discount,iconURL:result.IconURL,helpFile:result.HelpFile,policytypeShortName:result.policytypeShortName,// Additional SOAP fields\nkeyFactsUrl:result.KF,policyTypeID:result.PolicyTypeID,destinationID:result.DestinationID,packageID:result.PackageID,screeningPremium:result.screeningPremium,ipRate:result.IPTRate,netUW:result.netUW,wbComm:result.wbComm,agentComm:result.agentComm,SummaryCovers:result.SummaryCovers||[]};});console.log(\"\\u2705 Received \".concat(realQuotes.length,\" real quotes from Terracotta SOAP API\"));// Sort by IPT (highest first) and take top 3\nconst sortedByIPT=realQuotes.sort((a,b)=>{const iptA=a.ipt||0;const iptB=b.ipt||0;return iptB-iptA;// Descending order (highest IPT first)\n});const top3Quotes=sortedByIPT.slice(0,3);// Sort the top 3 by price (ascending - least expensive to most expensive)\nconst sortedByPrice=top3Quotes.sort((a,b)=>a.price-b.price);console.log(\"\\uD83D\\uDCCA Filtered to top 3 quotes with highest IPT, sorted by price:\",sortedByPrice.map(q=>({name:q.name,price:q.price,ipt:q.ipt})));setIsLoadingQuotes(false);return sortedByPrice;}else{console.log('⚠️ No quotes in SOAP response, using sample data');console.log('⚠️ Response message:',response.Message);console.log('⚠️ This might be due to:');console.log('   - Incorrect API credentials');console.log('   - Invalid parameter values');console.log('   - API restrictions or downtime');console.log('   - Date range issues (past dates)');setIsLoadingQuotes(false);return generateSampleSOAPQuotes();}}catch(error){console.error('❌ Error getting real SOAP quotes:',error);setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');setIsLoadingQuotes(false);// Fallback to sample SOAP response data\nconsole.log('🔄 Using sample SOAP response data');return generateSampleSOAPQuotes();}};// Generate sample quotes using your SOAP response data\nconst generateSampleSOAPQuotes=()=>{const allSampleQuotes=[{id:'soap-12345',name:'TravelSafe Basic 2024 - Single Trip Travel Insurance',type:'premium',// Best buy\nprice:72.60,coverage:{medical:'€5,000,000',// Cover level 5\nbaggage:'€1,000',cancellation:'€2,000',activities:['Standard activities','Adventure sports']},features:['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection','Best Buy Option','Up to 90 days per trip'],// Real SOAP response data from QuoteID 12345\nterracottaQuoteId:'12345',schemaName:'TravelSafe Basic 2024',policyTypeName:'Single Trip Travel Insurance',typePolicyName:'Single Trip Travel Insurance',summaryOfCoverUrl:'https://terracotta.example.com/summary/12345.pdf',policyWordingUrl:'https://terracotta.example.com/wording/12345.pdf',currency:'EUR',ipt:12.60,// Complete SOAP response fields\nschemaID:683,destinationCategory:'Europe',tripType:formData.tripType,residenceName:'Greece',destinationName:'Europe',packageName:'TravelSafe Standard',typePackageName:'Standard Package',isAnnual:0,isBestBuy:1,isBestBuyText:'Best Value Option',maxDaysPerTrip:90,coverLevel:5,discount:0.00,iconURL:'https://terracotta.example.com/icons/basic.png',helpFile:'https://terracotta.example.com/help/12345.html',policytypeShortName:'Single Trip',// Additional SOAP fields\nkeyFactsUrl:'https://terracotta.example.com/keyfacts/12345.pdf',policyTypeID:1,destinationID:2,packageID:1,screeningPremium:0.00,ipRate:21.00,netUW:60.00,wbComm:5.40,agentComm:7.20},{id:'soap-12346',name:'TravelSafe Premium 2024 - Single Trip Travel Insurance',type:'standard',price:108.90,coverage:{medical:'€10,000,000',// Cover level 10\nbaggage:'€1,000',cancellation:'€2,000',activities:['Standard activities','Adventure sports']},features:['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection','Up to 120 days per trip'],// Real SOAP response data from QuoteID 12346\nterracottaQuoteId:'12346',schemaName:'TravelSafe Premium 2024',policyTypeName:'Single Trip Travel Insurance',typePolicyName:'Single Trip Travel Insurance',summaryOfCoverUrl:'https://terracotta.example.com/summary/12346.pdf',policyWordingUrl:'https://terracotta.example.com/wording/12346.pdf',currency:'EUR',ipt:18.90,// Complete SOAP response fields\nschemaID:717,destinationCategory:'Europe',tripType:formData.tripType,residenceName:'Greece',destinationName:'Europe',packageName:'TravelSafe Premium',typePackageName:'Premium Package',isAnnual:0,isBestBuy:0,isBestBuyText:'',maxDaysPerTrip:120,coverLevel:10,discount:0.00,iconURL:'https://terracotta.example.com/icons/premium.png',helpFile:'https://terracotta.example.com/help/12346.html',policytypeShortName:'Single Trip',// Additional SOAP fields\nkeyFactsUrl:'https://terracotta.example.com/keyfacts/12346.pdf',policyTypeID:1,destinationID:2,packageID:2,screeningPremium:0.00,ipRate:21.00,netUW:90.00,wbComm:8.10,agentComm:10.80}];// Sort by IPT (highest first) and take top 3\nconst sortedByIPT=allSampleQuotes.sort((a,b)=>{const iptA=a.ipt||0;const iptB=b.ipt||0;return iptB-iptA;// Descending order (highest IPT first)\n});const top3=sortedByIPT.slice(0,3);// Sort the top 3 by price (ascending - least expensive to most expensive)\nreturn top3.sort((a,b)=>a.price-b.price);};// Helper function to calculate coverage levels using real SOAP data\nconst calculateRealCoverageLevels=(result,destination,tripType)=>{// Use real data from SOAP response when available, fallback to calculated values\nconst baseMedical=result.coverLevel>0?\"\\u20AC\".concat((result.coverLevel*1000000).toLocaleString()):tripType==='annual'?'€5,000,000':'€2,000,000';const baseBaggage='€1,000';// This would ideally come from SOAP response\nconst baseCancellation='€2,000';// This would ideally come from SOAP response\n// Enhance coverage based on destination category and SOAP data\nlet medicalMultiplier=1;let baggageMultiplier=1;let cancellationMultiplier=1;if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){medicalMultiplier=2;baggageMultiplier=1.5;cancellationMultiplier=2;}else if(destination.toLowerCase().includes('europe')){medicalMultiplier=1.5;baggageMultiplier=1.2;cancellationMultiplier=1.5;}// Use SOAP cover level if available\nif(result.coverLevel>0){medicalMultiplier=1;// Use the real cover level from SOAP\n}return{medical:result.coverLevel>0?baseMedical:\"\\u20AC\".concat((parseInt(baseMedical.replace(/[€,]/g,''))*medicalMultiplier).toLocaleString()),baggage:\"\\u20AC\".concat((parseInt(baseBaggage.replace(/[€,]/g,''))*baggageMultiplier).toLocaleString()),cancellation:\"\\u20AC\".concat((parseInt(baseCancellation.replace(/[€,]/g,''))*cancellationMultiplier).toLocaleString()),activities:generateActivitiesForDestination(destination)};};// Helper function to generate features using real SOAP data\nconst generateFeaturesFromSOAPData=(result,destination,tripType)=>{const baseFeatures=['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection'];const soapFeatures=[];const destinationFeatures=[];// Add features based on SOAP response data\nif(result.isAnnual===1){soapFeatures.push('Annual Multi-Trip Coverage','Unlimited Trips','Annual Policy Benefits');}if(result.isBestBuy===1){soapFeatures.push('Best Buy Policy',result.isBestBuyText||'Recommended Option');}if(result.maxDaysPerTrip>0){soapFeatures.push(\"Up to \".concat(result.maxDaysPerTrip,\" days per trip\"));}if(result.discount>0){soapFeatures.push(\"\".concat(result.discount,\"% Discount Applied\"));}// Add destination-specific features\nif(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){destinationFeatures.push('Worldwide Medical Coverage','Emergency Repatriation','High-Risk Activity Coverage');}else if(destination.toLowerCase().includes('europe')){destinationFeatures.push('EU Medical Card Coverage','Schengen Zone Protection');}if(tripType==='comprehensive'){destinationFeatures.push('Enhanced Coverage','Adventure Sports','Winter Sports','Business Travel');}return[...baseFeatures,...soapFeatures,...destinationFeatures];};// Helper function to calculate coverage levels based on destination and trip type (fallback)\nconst calculateCoverageLevels=(destination,tripType,price)=>{const baseMedical=tripType==='annual'?'€5,000,000':tripType==='longstay'?'€3,000,000':'€2,000,000';const baseBaggage='€1,000';const baseCancellation='€2,000';// Enhance coverage based on destination category\nlet medicalMultiplier=1;let baggageMultiplier=1;let cancellationMultiplier=1;if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){medicalMultiplier=2;baggageMultiplier=1.5;cancellationMultiplier=2;}else if(destination.toLowerCase().includes('europe')){medicalMultiplier=1.5;baggageMultiplier=1.2;cancellationMultiplier=1.5;}// Enhance based on price level\nif(price>200){medicalMultiplier*=2;baggageMultiplier*=2;cancellationMultiplier*=2;}else if(price>100){medicalMultiplier*=1.5;baggageMultiplier*=1.5;cancellationMultiplier*=1.5;}return{medical:\"\\u20AC\".concat((parseInt(baseMedical.replace(/[€,]/g,''))*medicalMultiplier).toLocaleString()),baggage:\"\\u20AC\".concat((parseInt(baseBaggage.replace(/[€,]/g,''))*baggageMultiplier).toLocaleString()),cancellation:\"\\u20AC\".concat((parseInt(baseCancellation.replace(/[€,]/g,''))*cancellationMultiplier).toLocaleString()),activities:generateActivitiesForDestination(destination)};};// Helper function to determine quote type based on price and index\nconst determineQuoteType=(price,index)=>{if(price<50)return'basic';if(price<150)return'standard';return'premium';};// Helper function to generate features based on destination and trip type\nconst generateFeaturesForDestination=(destination,tripType)=>{const baseFeatures=['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection'];const destinationFeatures=[];if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){destinationFeatures.push('Worldwide Medical Coverage','Emergency Repatriation','High-Risk Activity Coverage');}else if(destination.toLowerCase().includes('europe')){destinationFeatures.push('EU Medical Card Coverage','Schengen Zone Protection');}if(tripType==='annual'){destinationFeatures.push('Multiple Trip Coverage','Annual Policy Benefits','Unlimited Trips');}else if(tripType==='longstay'){destinationFeatures.push('Extended Stay Coverage','Long Term Medical','Extended Baggage Protection','Long Stay Benefits');}else if(tripType==='comprehensive'){destinationFeatures.push('Enhanced Coverage','Adventure Sports','Winter Sports','Business Travel');}return[...baseFeatures,...destinationFeatures];};// Helper function to generate activities based on destination\nconst generateActivitiesForDestination=destination=>{const baseActivities=['Standard activities'];if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){return['Standard activities','Adventure sports','Extreme sports','Water sports','Winter sports'];}else if(destination.toLowerCase().includes('europe')){return['Standard activities','Adventure sports','Winter sports'];}return baseActivities;};// Enhanced mock quote generation that simulates Terracotta-style data\nconst generateEnhancedMockQuoteOptions=()=>{const days=formData.startDate&&formData.endDate?Math.ceil((new Date(formData.endDate).getTime()-new Date(formData.startDate).getTime())/(1000*3600*24)):7;let basePrice=formData.tripType==='annual'?99:formData.tripType==='longstay'?60:40;const dailyRate=formData.tripType==='annual'?0:formData.tripType==='longstay'?3:5;const tripMultiplier=formData.tripType==='comprehensive'?1.5:formData.tripType==='longstay'?1.2:1;// Generate multiple mock quotes based on available schemas\nconst mockQuotes=[];// Create quotes for each available schema if we have them, otherwise use defaults\nconst schemasToUse=availableProducts.length>0?availableProducts:[{SchemaID:683,SchemaName:'TravelSafe Basic'},{SchemaID:717,SchemaName:'TravelSafe Premium'}];schemasToUse.forEach((schema,index)=>{const price=Math.round((basePrice+days*dailyRate+index*30)*formData.numberOfTravelers*tripMultiplier);const coverage=calculateCoverageLevels(formData.destination,formData.tripType,price);const features=generateFeaturesForDestination(formData.destination,formData.tripType);const quoteType=determineQuoteType(price,index);mockQuotes.push({id:\"mock-\".concat(schema.SchemaID,\"-\").concat(index),name:\"\".concat(schema.SchemaName,\" - \").concat(formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip'),type:quoteType,price:price,coverage:coverage,features:features,// Terracotta specific fields (mock)\nterracottaQuoteId:\"mock-\".concat(schema.SchemaID,\"-\").concat(Date.now()),schemaName:schema.SchemaName,policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/mock.pdf',policyWordingUrl:'https://terracotta.example.com/wording/mock.pdf',currency:'EUR',ipt:Math.round(price*0.21),// 21% IPT\n// Additional metadata\nschemaID:schema.SchemaID,destinationCategory:formData.destination,tripType:formData.tripType});});return mockQuotes;};// Legacy mock quotes (kept for backward compatibility)\nconst generateLegacyMockQuoteOptions=()=>{const days=formData.startDate&&formData.endDate?Math.ceil((new Date(formData.endDate).getTime()-new Date(formData.startDate).getTime())/(1000*3600*24)):7;let basePrice=formData.tripType==='annual'?99:formData.tripType==='longstay'?60:40;const dailyRate=formData.tripType==='annual'?0:formData.tripType==='longstay'?3:5;const tripMultiplier=formData.tripType==='comprehensive'?1.5:formData.tripType==='longstay'?1.2:1;const options=[{id:'terracotta-basic',name:'Terracotta TravelSafe Basic',type:'basic',price:Math.round((basePrice+days*dailyRate)*formData.numberOfTravelers*tripMultiplier),coverage:{medical:formData.tripType==='annual'?'€5,000,000':'€2,000,000',baggage:'€1,000',cancellation:'€2,000',activities:['Standard activities']},features:['Emergency Medical Coverage','Trip Cancellation','Baggage Protection','24/7 Assistance'],// Terracotta-specific fields (simulated)\nterracottaQuoteId:\"TC-\".concat(Date.now(),\"-001\"),schemaName:'TravelSafe Basic',policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/basic.pdf',policyWordingUrl:'https://terracotta.example.com/wording/basic.pdf',currency:'EUR',ipt:15.50},{id:'terracotta-standard',name:'Terracotta TravelSafe Standard',type:'standard',price:Math.round((basePrice+days*dailyRate)*1.3*formData.numberOfTravelers*tripMultiplier),coverage:{medical:formData.tripType==='annual'?'€10,000,000':'€5,000,000',baggage:'€2,500',cancellation:'€5,000',activities:['Standard activities','Adventure sports']},features:['Enhanced Medical Coverage','Trip Cancellation & Curtailment','Enhanced Baggage Protection','Adventure Sports Coverage','24/7 Assistance','Travel Delay Compensation'],// Terracotta-specific fields (simulated)\nterracottaQuoteId:\"TC-\".concat(Date.now(),\"-002\"),schemaName:'TravelSafe Standard',policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/standard.pdf',policyWordingUrl:'https://terracotta.example.com/wording/standard.pdf',currency:'EUR',ipt:22.75},{id:'terracotta-premium',name:'Terracotta TravelSafe Premium',type:'premium',price:Math.round((basePrice+days*dailyRate)*1.8*formData.numberOfTravelers*tripMultiplier),coverage:{medical:formData.tripType==='annual'?'€10,000,000':'€10,000,000',baggage:'€5,000',cancellation:'€10,000',activities:['All activities','Extreme sports','Winter sports']},features:['Maximum Medical Coverage','Comprehensive Trip Protection','Premium Baggage Coverage','All Sports & Activities','24/7 VIP Assistance','Travel Delay & Missed Connections','Personal Liability Coverage','Emergency Cash Advance'],// Terracotta-specific fields (simulated)\nterracottaQuoteId:\"TC-\".concat(Date.now(),\"-003\"),schemaName:'TravelSafe Premium',policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/premium.pdf',policyWordingUrl:'https://terracotta.example.com/wording/premium.pdf',currency:'EUR',ipt:35.00}];return options;};// Custom Date Picker Component\nconst CustomDatePicker=_ref2=>{let{id,value,onChange,placeholder,required,minDate}=_ref2;const[isOpen,setIsOpen]=useState(false);const[currentDate,setCurrentDate]=useState(()=>{// Initialize with selected date if available, otherwise current date\nreturn value?new Date(value):new Date();});const pickerRef=useRef(null);useEffect(()=>{const handleClickOutside=event=>{if(pickerRef.current&&!pickerRef.current.contains(event.target)){setIsOpen(false);}};if(isOpen){document.addEventListener('mousedown',handleClickOutside);}return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[isOpen]);// Update current date when value changes to show the correct month\nuseEffect(()=>{if(value){setCurrentDate(new Date(value));}},[value]);// Helper function to check if a date is valid (not in past and not before minDate)\nconst isDateValid=date=>{const today=new Date();today.setHours(0,0,0,0);// Reset time to start of day for accurate comparison\n// Reset the input date to start of day for accurate comparison\nconst inputDate=new Date(date);inputDate.setHours(0,0,0,0);// Check if date is in the past\nif(inputDate<today){return false;}// Check if date is before minimum date\nif(minDate){const minDateObj=new Date(minDate);minDateObj.setHours(0,0,0,0);if(inputDate<minDateObj){return false;}}return true;};const generateCalendar=()=>{const year=currentDate.getFullYear();const month=currentDate.getMonth();const firstDay=new Date(year,month,1);const lastDay=new Date(year,month+1,0);const daysInMonth=lastDay.getDate();const startingDayOfWeek=firstDay.getDay();const days=[];// Add empty cells for days before the first day of the month\nfor(let i=0;i<startingDayOfWeek;i++){days.push(/*#__PURE__*/_jsx(\"div\",{className:\"calendar-day empty\"},\"empty-\".concat(i)));}// Add days of the month\nfor(let day=1;day<=daysInMonth;day++){const date=new Date(year,month,day);// Create ISO string manually to avoid timezone issues\nconst dateString=\"\".concat(year,\"-\").concat((month+1).toString().padStart(2,'0'),\"-\").concat(day.toString().padStart(2,'0'));const isSelected=value===dateString;const isToday=new Date().toDateString()===date.toDateString();const isValid=isDateValid(date);days.push(/*#__PURE__*/_jsx(\"div\",{className:\"calendar-day \".concat(isSelected?'selected':'',\" \").concat(isToday?'today':'',\" \").concat(!isValid?'disabled':''),onClick:()=>{if(isValid){onChange(dateString);setIsOpen(false);}},style:{cursor:isValid?'pointer':'not-allowed',opacity:isValid?1:0.4},children:day},day));}return days;};const navigateMonth=direction=>{setCurrentDate(new Date(currentDate.getFullYear(),currentDate.getMonth()+direction,1));};const monthNames=['January','February','March','April','May','June','July','August','September','October','November','December'];return/*#__PURE__*/_jsxs(\"div\",{className:\"custom-date-picker\",ref:pickerRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-input-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:id,value:value?formatDateToEuropean(value):'',onChange:e=>{const formattedValue=formatDateInput(e.target.value);const isoDate=formattedValue.length===10?convertToISO(formattedValue):'';// Validate that the date is valid (not in past and not before minDate)\nif(isoDate){const inputDate=new Date(isoDate);if(!isDateValid(inputDate)){// Don't update the value if it's an invalid date\nreturn;}}onChange(isoDate);},placeholder:placeholder,title:minDate?\"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\":\"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\",pattern:\"\\\\d{2}/\\\\d{2}/\\\\d{4}\",maxLength:10,required:required}),/*#__PURE__*/_jsx(\"span\",{className:\"date-icon clickable\",onClick:()=>setIsOpen(!isOpen),title:\"Open calendar\",children:\"\\uD83D\\uDCC5\"})]}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-popup\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-header\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"calendar-nav-btn\",onClick:()=>navigateMonth(-1),children:\"\\u2039\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"calendar-month-year\",children:[monthNames[currentDate.getMonth()],\" \",currentDate.getFullYear()]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"calendar-nav-btn\",onClick:()=>navigateMonth(1),children:\"\\u203A\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"calendar-weekdays\",children:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].map(day=>/*#__PURE__*/_jsx(\"div\",{className:\"calendar-weekday\",children:day},day))}),/*#__PURE__*/_jsx(\"div\",{className:\"calendar-days\",children:generateCalendar()})]})]});};const handleInputChange=(field,value)=>{setFormData(prev=>{const newData=_objectSpread(_objectSpread({},prev),{},{[field]:value});// If start date is changed, clear end date if it's now invalid\nif(field==='startDate'&&value&&prev.endDate){const startDate=new Date(value);const endDate=new Date(prev.endDate);startDate.setDate(startDate.getDate()+1);// Add 1 day to start date\n// If end date is before or equal to start date, clear it\nif(endDate<=startDate){newData.endDate='';}}return newData;});};const handleTravelerChange=(index,field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{travelers:prev.travelers.map((traveler,i)=>i===index?_objectSpread(_objectSpread({},traveler),{},{[field]:value}):traveler)}));};const handleNumberOfTravelersChange=count=>{setFormData(prev=>{const travelers=[...prev.travelers];if(count>travelers.length){// Add new travelers\nfor(let i=travelers.length;i<count;i++){travelers.push({firstName:'',lastName:'',age:'',email:'',phone:'',vaxId:'',nationality:''});}}else if(count<travelers.length){// Remove travelers\ntravelers.splice(count);}return _objectSpread(_objectSpread({},prev),{},{numberOfTravelers:count,travelers});});};const handleBillingAddressChange=(field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{billingAddress:_objectSpread(_objectSpread({},prev.billingAddress),{},{[field]:value})}));};// Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\nconst convertToISO=ddmmyyyy=>{if(!ddmmyyyy||ddmmyyyy.length!==10)return'';const[day,month,year]=ddmmyyyy.split('/');// Create date in local timezone to avoid timezone issues\nconst date=new Date(parseInt(year),parseInt(month)-1,parseInt(day));return date.toISOString().split('T')[0];};// Helper function to format input as DD/MM/YYYY\nconst formatDateInput=value=>{// Remove all non-digits\nconst digits=value.replace(/\\D/g,'');// Format as DD/MM/YYYY\nif(digits.length>=8){return\"\".concat(digits.slice(0,2),\"/\").concat(digits.slice(2,4),\"/\").concat(digits.slice(4,8));}else if(digits.length>=4){return\"\".concat(digits.slice(0,2),\"/\").concat(digits.slice(2,4),\"/\").concat(digits.slice(4));}else if(digits.length>=2){return\"\".concat(digits.slice(0,2),\"/\").concat(digits.slice(2));}return digits;};const nextPhase=async()=>{if(currentPhase===1){// Generate quotes when moving from phase 1 to 2\ntry{console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');console.log('📋 Current Form Data:',JSON.stringify(formData,null,2));const options=await generateQuoteOptions();console.log('✅ Quote options received:',options);console.log('📊 Number of quotes:',options.length);setQuoteOptions(options);// Automatically pre-select the Essential plan\nconst essentialPlan=options.find(option=>{var _option$name,_option$policytypeNam;return((_option$name=option.name)===null||_option$name===void 0?void 0:_option$name.toLowerCase().includes('essential'))||((_option$policytypeNam=option.policytypeName)===null||_option$policytypeNam===void 0?void 0:_option$policytypeNam.toLowerCase().includes('essential'));});if(essentialPlan){console.log('✅ Auto-selected Essential plan:',essentialPlan);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedQuote:essentialPlan}));}else{console.log('⚠️ No Essential plan found, selecting first available quote');if(options.length>0){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedQuote:options[0]}));}}}catch(error){console.error('❌ CRITICAL ERROR generating quotes:',error);console.error('Error details:',error instanceof Error?error.message:String(error));console.error('Error stack:',error instanceof Error?error.stack:'No stack trace');setQuoteError('Failed to generate quotes. Please try again.');return;// Don't proceed to next phase if quotes failed\n}}if(currentPhase===5){var _formData$selectedQuo3;// Fetch screening questions when moving from phase 5 to 6\nif((_formData$selectedQuo3=formData.selectedQuote)!==null&&_formData$selectedQuo3!==void 0&&_formData$selectedQuo3.terracottaQuoteId){try{const screeningResponse=await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);setScreeningQuestions(screeningResponse.screeningQuestions||[]);}catch(error){console.error('Error fetching screening questions:',error);// Use mock screening questions to demonstrate the feature\nsetScreeningQuestions([{questionNumber:1,question:\"Do you have any pre-existing medical conditions that require ongoing treatment?\",yesMessage:\"Please note that pre-existing conditions may not be covered under this policy. Additional medical screening may be required.\",noMessage:\"Thank you. No additional medical information is required.\",yesAction:\"MEDICAL_SCREENING\",noAction:\"CONTINUE\",yesActionText:\"Medical screening required\",noActionText:\"Continue with application\"},{questionNumber:2,question:\"Are you currently taking any prescribed medication?\",yesMessage:\"Please ensure you have sufficient medication for your trip and carry a copy of your prescription.\",noMessage:\"Thank you. No additional medication information is required.\",yesAction:\"MEDICATION_CHECK\",noAction:\"CONTINUE\",yesActionText:\"Medication verification required\",noActionText:\"Continue with application\"}]);}}}if(currentPhase<8){setCurrentPhase(prev=>prev+1);window.scrollTo(0,0);}};const prevPhase=()=>{if(currentPhase>1){setCurrentPhase(prev=>prev-1);window.scrollTo(0,0);}};const selectQuote=quote=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedQuote:quote}));};const addAdditionalPolicy=policy=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{additionalPolicies:[...prev.additionalPolicies,policy]}));};const removeAdditionalPolicy=policyId=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{additionalPolicies:prev.additionalPolicies.filter(p=>p.id!==policyId)}));};const calculateTotalPrice=()=>{var _formData$selectedQuo4;const basePrice=((_formData$selectedQuo4=formData.selectedQuote)===null||_formData$selectedQuo4===void 0?void 0:_formData$selectedQuo4.price)||0;const additionalPrice=formData.additionalPolicies.reduce((sum,policy)=>sum+policy.price,0);return basePrice+additionalPrice;};const generatePolicyPDF=async()=>{await generatePDF(formData,calculateTotalPrice,formatDateToEuropean,policyNumber||\"TI-\".concat(Date.now().toString().slice(-8)));};const downloadPolicyPDF=()=>{generatePolicyPDF();};const processPayment=async()=>{setIsProcessing(true);try{// First save the quote to database\nconst quoteData={destination:formData.destination,countryOfResidence:formData.countryOfResidence,startDate:formData.startDate,endDate:formData.endDate,tripType:formData.tripType,numberOfTravelers:formData.numberOfTravelers,travelers:formData.travelers,selectedQuote:formData.selectedQuote,additionalPolicies:formData.additionalPolicies,totalAmount:calculateTotalPrice()};// console.log('Saving quote to database...', quoteData);\n// console.log('Quote data JSON string:', JSON.stringify(quoteData));\nconst quoteResponse=await createQuote(quoteData);if(quoteResponse.status==='success'&&quoteResponse.data){var _formData$selectedQuo5;const quoteId=quoteResponse.data.quoteId;// Convert screening answers to Terracotta format\nconst terracottaScreeningAnswers=Object.entries(screeningAnswers).map(_ref3=>{let[questionNumber,answer]=_ref3;return{questionNumber:parseInt(questionNumber),answer:answer};});// Save policy details with Terracotta\nif((_formData$selectedQuo5=formData.selectedQuote)!==null&&_formData$selectedQuo5!==void 0&&_formData$selectedQuo5.terracottaQuoteId){try{const savePolicyResponse=await terracottaService.savePolicyDetails({userID:'4072',userCode:'111427',quoteID:formData.selectedQuote.terracottaQuoteId,screeningQuestionAnswers:terracottaScreeningAnswers});if(savePolicyResponse.policySaved==='Yes'){setPolicyNumber(savePolicyResponse.policyID);setIsProcessing(false);nextPhase();// Move to documents phase\nreturn;}else{throw new Error(savePolicyResponse.Message||'Failed to save policy with Terracotta');}}catch(terracottaError){console.error('Terracotta policy save error:',terracottaError);// Fall through to regular payment processing\n}}// Fallback to regular payment processing if Terracotta fails\nconst paymentData={quoteId:quoteId,paymentMethod:formData.paymentMethod,cardNumber:formData.cardNumber,// Note: In production, this should be tokenized\nexpiryDate:formData.expiryDate,cvv:formData.cvv,billingAddress:formData.billingAddress,amount:calculateTotalPrice()};const paymentResponse=await apiProcessPayment(paymentData);if(paymentResponse.status==='success'){var _paymentResponse$data;if((_paymentResponse$data=paymentResponse.data)!==null&&_paymentResponse$data!==void 0&&_paymentResponse$data.policyNumber){setPolicyNumber(paymentResponse.data.policyNumber);}setIsProcessing(false);nextPhase();// Move to documents phase\n}else{throw new Error(paymentResponse.message||'Payment failed');}}else{throw new Error(quoteResponse.message||'Failed to save quote');}}catch(error){console.error('Payment processing error:',error);setIsProcessing(false);alert('Payment processing failed. Please try again. Error: '+(error instanceof Error?error.message:'Unknown error'));}};const isPhaseValid=phase=>{switch(phase){case 1:return!!(formData.destination&&formData.startDate&&formData.endDate&&formData.tripType&&formData.countryOfResidence&&formData.travelers.every(t=>t.firstName&&t.lastName&&t.age&&t.email));case 2:return!!formData.selectedQuote;case 3:return true;// Additional policies phase is always valid (optional)\ncase 4:return true;// Summary phase is always valid\ncase 5:return true;// Confirmation phase is always valid\ncase 6:// Screening questions phase - all questions must be answered\nreturn screeningQuestions.length===0||Object.keys(screeningAnswers).length===screeningQuestions.length;case 7:const paymentValid=!!(formData.cardNumber&&formData.expiryDate&&formData.cvv&&formData.billingAddress.street&&formData.billingAddress.city&&formData.billingAddress.postalCode&&formData.billingAddress.country);return paymentValid;case 8:return true;// Documents phase is always valid\ndefault:return false;}};const renderPhase1=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Trip Details & Traveler Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Trip Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"tripType\",children:[\"Trip Type\",/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.8em',color:'#666',marginLeft:'5px'},children:isLoadingPolicyTypeDestinations?'(Loading...)':\"(\".concat(availablePolicyTypes.length,\" types available)\")})]}),/*#__PURE__*/_jsxs(\"select\",{id:\"tripType\",value:formData.tripType,onChange:e=>handleInputChange('tripType',e.target.value),required:true,disabled:isLoadingPolicyTypeDestinations,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:isLoadingPolicyTypeDestinations?'Loading trip types...':'Select trip type'}),availablePolicyTypes.map(policyType=>{// Map policy type names to trip type values\nlet tripTypeValue='single';const name=policyType.TypePolicyName.toLowerCase();if(name.includes('annual')){tripTypeValue='annual';}else if(name.includes('comprehensive')){tripTypeValue='comprehensive';}else if(name.includes('longstay')||name.includes('long stay')){tripTypeValue='longstay';}return/*#__PURE__*/_jsx(\"option\",{value:tripTypeValue,children:policyType.TypePolicyName},policyType.TypePolicyID);}),!isLoadingPolicyTypeDestinations&&availablePolicyTypes.length===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"single\",children:\"Regular Single Trip Insurance\"}),/*#__PURE__*/_jsx(\"option\",{value:\"annual\",children:\"Annual Multi-Trip Travel Insurance\"}),/*#__PURE__*/_jsx(\"option\",{value:\"comprehensive\",children:\"Comprehensive Single Trip Insurance\"}),/*#__PURE__*/_jsx(\"option\",{value:\"longstay\",children:\"Long Stay Travel Insurance\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"countryOfResidence\",children:\"Country of Residence\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"countryOfResidence\",value:formData.countryOfResidence,onChange:e=>handleInputChange('countryOfResidence',e.target.value),required:true,disabled:isLoadingCountriesOfResidence,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:isLoadingCountriesOfResidence?'Loading countries...':'Select your country of residence'}),countriesOfResidence.map(country=>/*#__PURE__*/_jsx(\"option\",{value:country.country_name,children:country.country_name},country.country_id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"destination\",children:[\"Destination Category\",/*#__PURE__*/_jsx(\"span\",{className:\"help-icon\",onClick:()=>setShowHelpPopup(true),title:\"Click to see all countries by category\",children:\"(?)\"})]}),/*#__PURE__*/_jsxs(\"select\",{id:\"destination\",value:formData.destination,onChange:e=>handleInputChange('destination',e.target.value),required:true,disabled:isLoadingCategories,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:isLoadingCategories?'Loading categories...':'Select destination category'}),destinationCategories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"startDate\",children:[\"Departure Date \",/*#__PURE__*/_jsx(\"span\",{className:\"date-format-hint\",children:\"(DD/MM/YYYY)\"})]}),/*#__PURE__*/_jsx(CustomDatePicker,{id:\"startDate\",value:formData.startDate,onChange:value=>handleInputChange('startDate',value),placeholder:\"DD/MM/YYYY\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"endDate\",children:[\"Return Date \",/*#__PURE__*/_jsx(\"span\",{className:\"date-format-hint\",children:\"(DD/MM/YYYY)\"})]}),/*#__PURE__*/_jsx(CustomDatePicker,{id:\"endDate\",value:formData.endDate,onChange:value=>handleInputChange('endDate',value),placeholder:\"DD/MM/YYYY\",required:true,minDate:formData.startDate?(()=>{// Set minimum date to start date + 1 day\nconst startDate=new Date(formData.startDate);startDate.setDate(startDate.getDate()+1);return startDate.toISOString().split('T')[0];})():undefined})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"numberOfTravelers\",children:\"Number of Travelers\"}),/*#__PURE__*/_jsx(\"select\",{id:\"numberOfTravelers\",value:formData.numberOfTravelers,onChange:e=>handleNumberOfTravelersChange(parseInt(e.target.value)),children:[1,2,3,4,5,6,7,8].map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[num,\" Traveler\",num>1?'s':'']},num))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Traveler Information\"}),formData.travelers.map((traveler,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"traveler-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Traveler \",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title-\".concat(index),children:\"Title\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"title-\".concat(index),value:traveler.title||'Mr',onChange:e=>handleTravelerChange(index,'title',e.target.value),title:\"Select the traveler's title\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Mr\",children:\"Mr\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mrs\",children:\"Mrs\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Miss\",children:\"Miss\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Ms\",children:\"Ms\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Dr\",children:\"Dr\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Prof\",children:\"Prof\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"firstName-\".concat(index),children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"firstName-\".concat(index),value:traveler.firstName,onChange:e=>handleTravelerChange(index,'firstName',e.target.value),placeholder:\"Enter first name\",title:\"Enter the traveler's first name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lastName-\".concat(index),children:\"Last Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"lastName-\".concat(index),value:traveler.lastName,onChange:e=>handleTravelerChange(index,'lastName',e.target.value),placeholder:\"Enter last name\",title:\"Enter the traveler's last name\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dateOfBirth-\".concat(index),children:\"Date of Birth\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"dateOfBirth-\".concat(index),value:traveler.dateOfBirth||'',onChange:e=>{const dateOfBirth=e.target.value;// Auto-calculate age from date of birth\nif(dateOfBirth){const age=calculateAgeFromDateOfBirth(dateOfBirth);handleTravelerChange(index,'dateOfBirth',dateOfBirth);handleTravelerChange(index,'age',age.toString());}else{handleTravelerChange(index,'dateOfBirth',dateOfBirth);}},title:\"Enter the traveler's date of birth (age will be calculated automatically)\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"age-\".concat(index),children:\"Age (Auto-calculated)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"age-\".concat(index),value:traveler.age,onChange:e=>handleTravelerChange(index,'age',e.target.value),placeholder:\"Enter age\",title:\"Age will be calculated from date of birth, but you can override it manually\",min:\"1\",max:\"120\",required:true,readOnly:!!traveler.dateOfBirth,style:{backgroundColor:traveler.dateOfBirth?'#f5f5f5':'white'}}),traveler.dateOfBirth&&/*#__PURE__*/_jsx(\"small\",{style:{color:'#666',fontSize:'0.8em'},children:\"Age calculated from date of birth\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email-\".concat(index),children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email-\".concat(index),value:traveler.email,onChange:e=>handleTravelerChange(index,'email',e.target.value),placeholder:\"Enter email address\",title:\"Enter the traveler's email address\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone-\".concat(index),children:\"Phone\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone-\".concat(index),value:traveler.phone,onChange:e=>handleTravelerChange(index,'phone',e.target.value),placeholder:\"+30 123 456 7890\",title:\"Enter the traveler's phone number\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"vaxId-\".concat(index),children:\"VAX ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"vaxId-\".concat(index),value:traveler.vaxId,onChange:e=>handleTravelerChange(index,'vaxId',e.target.value),placeholder:\"Enter VAX ID\",title:\"Enter the traveler's VAX ID (optional)\"})]})]},index))]})]});const renderPhase2=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'40px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'2.2em',color:'#333',margin:'0 0 10px 0',fontWeight:'bold',fontFamily:'sans-serif'},children:\"Choose Your Insurance Plan\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'1.1em',color:'#666',margin:'0',fontWeight:'400'},children:\"Select the coverage that best fits your travel needs.\"})]}),isLoadingQuotes&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading insurance quotes from Terracotta...\"})}),quoteError&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u26A0\\uFE0F \",quoteError]}),/*#__PURE__*/_jsx(\"p\",{children:\"Using fallback quotes for demonstration.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quote-options\",style:{display:'flex',flexDirection:'row',justifyContent:'center',gap:'20px',marginTop:'20px',overflowX:'auto',padding:'20px 0',maxWidth:'100%'},children:quoteOptions.length>0?quoteOptions.map(option=>{var _formData$selectedQuo6,_formData$selectedQuo7,_formData$selectedQuo8,_formData$selectedQuo1,_formData$selectedQuo12;return/*#__PURE__*/_jsxs(\"div\",{className:\"quote-option \".concat(((_formData$selectedQuo6=formData.selectedQuote)===null||_formData$selectedQuo6===void 0?void 0:_formData$selectedQuo6.id)===option.id?'selected':''),onClick:()=>selectQuote(option),style:{background:'white',border:((_formData$selectedQuo7=formData.selectedQuote)===null||_formData$selectedQuo7===void 0?void 0:_formData$selectedQuo7.id)===option.id?'2px solid #1976d2':'1px solid #e0e0e0',borderRadius:'8px',padding:'24px',cursor:'pointer',transition:'all 0.3s ease',boxShadow:((_formData$selectedQuo8=formData.selectedQuote)===null||_formData$selectedQuo8===void 0?void 0:_formData$selectedQuo8.id)===option.id?'0 4px 12px rgba(25, 118, 210, 0.15)':'0 2px 8px rgba(0,0,0,0.1)',position:'relative',minWidth:'320px',maxWidth:'320px',flexShrink:0},onMouseEnter:e=>{var _formData$selectedQuo9;if(((_formData$selectedQuo9=formData.selectedQuote)===null||_formData$selectedQuo9===void 0?void 0:_formData$selectedQuo9.id)!==option.id){e.currentTarget.style.boxShadow='0 4px 16px rgba(0,0,0,0.15)';e.currentTarget.style.borderColor='#1976d2';}},onMouseLeave:e=>{var _formData$selectedQuo0;if(((_formData$selectedQuo0=formData.selectedQuote)===null||_formData$selectedQuo0===void 0?void 0:_formData$selectedQuo0.id)!==option.id){e.currentTarget.style.boxShadow='0 2px 8px rgba(0,0,0,0.1)';e.currentTarget.style.borderColor='#e0e0e0';}},children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 8px 0',fontSize:'1.3em',color:'#1976d2',fontWeight:'bold'},children:option.policytypeName||option.policyTypeName||option.name}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0 0 12px 0',fontSize:'0.9em',color:'#666'},children:option.packageName||option.typePackageName}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'16px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'2em',fontWeight:'bold',color:'#333',lineHeight:'1'},children:[option.currency||'€',option.price]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9em',color:'#666',marginTop:'4px'},children:\"per trip\"})]})]}),option.isBestBuy===1&&option.isBestBuyText&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px',background:'#e8f5e8',border:'1px solid #4caf50',borderRadius:'6px',padding:'8px',fontSize:'0.85em',color:'#2e7d32',textAlign:'center',fontWeight:'bold'},children:[\"\\u2728 \",option.isBestBuyText,\" \\u2728\"]}),option.SummaryCovers&&option.SummaryCovers.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{fontSize:'1em',fontWeight:'bold',marginBottom:'12px',color:'#333'},children:\"Coverage Details\"}),option.SummaryCovers.map((cover,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px',padding:'8px',background:'#f8f9fa',borderRadius:'4px',fontSize:'0.85em'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold',color:'#1976d2',marginBottom:'4px'},children:cover.name}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9em'},children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Limit:\"}),\" \",cover.Limit]})})]},index))]}),/*#__PURE__*/_jsx(\"button\",{style:{width:'100%',padding:'12px',backgroundColor:((_formData$selectedQuo1=formData.selectedQuote)===null||_formData$selectedQuo1===void 0?void 0:_formData$selectedQuo1.id)===option.id?'#ff6b35':'#1976d2',color:'white',border:'none',borderRadius:'4px',fontSize:'0.95em',fontWeight:'bold',cursor:'pointer',transition:'background-color 0.3s ease',textTransform:'uppercase'},onMouseEnter:e=>{var _formData$selectedQuo10;e.currentTarget.style.backgroundColor=((_formData$selectedQuo10=formData.selectedQuote)===null||_formData$selectedQuo10===void 0?void 0:_formData$selectedQuo10.id)===option.id?'#e55a2b':'#1565c0';},onMouseLeave:e=>{var _formData$selectedQuo11;e.currentTarget.style.backgroundColor=((_formData$selectedQuo11=formData.selectedQuote)===null||_formData$selectedQuo11===void 0?void 0:_formData$selectedQuo11.id)===option.id?'#ff6b35':'#1976d2';},children:((_formData$selectedQuo12=formData.selectedQuote)===null||_formData$selectedQuo12===void 0?void 0:_formData$selectedQuo12.id)===option.id?'SELECTED':'SELECT PLAN'})]},option.id);}):/*#__PURE__*/_jsx(\"div\",{style:{gridColumn:'1 / -1',textAlign:'center',padding:'40px',color:'#666'},children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading SOAP quotes...\"})})})]});const renderPhase3=()=>{var _formData$selectedQuo13,_formData$selectedQuo14;return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enhance Your Coverage\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add optional coverage for extra protection during your trip.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"selected-plan-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"current-plan\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Selected Plan\"}),formData.selectedQuote&&/*#__PURE__*/_jsxs(\"div\",{className:\"plan-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"plan-name\",children:formData.selectedQuote.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"plan-price\",children:[\"\\u20AC\",formData.selectedQuote.price]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"additional-policies\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Optional Coverage Add-ons\"}),/*#__PURE__*/_jsx(\"div\",{className:\"policies-grid\",children:availableAdditionalPolicies.map(policy=>{const isSelected=formData.additionalPolicies.some(p=>p.id===policy.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"policy-card \".concat(isSelected?'selected':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"policy-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"policy-icon\",children:policy.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"policy-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:policy.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"policy-price\",children:[\"\\u20AC\",policy.price.toFixed(2)]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"policy-btn \".concat(isSelected?'remove':'add'),onClick:()=>isSelected?removeAdditionalPolicy(policy.id):addAdditionalPolicy(policy),children:isSelected?'REMOVE':'ADD'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"policy-description\",children:[/*#__PURE__*/_jsx(\"p\",{children:policy.description}),policy.id==='excess-waiver'&&/*#__PURE__*/_jsx(\"button\",{className:\"find-out-more\",onClick:()=>alert('More information about Excess Waiver coverage will be available soon.'),\"aria-label\":\"Learn more about Excess Waiver coverage\",title:\"Get more information about Excess Waiver coverage\",type:\"button\",children:\"Find out more\"})]})]},policy.id);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"total-summary-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"base-plan\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Base Plan: \",(_formData$selectedQuo13=formData.selectedQuote)===null||_formData$selectedQuo13===void 0?void 0:_formData$selectedQuo13.name]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u20AC\",(_formData$selectedQuo14=formData.selectedQuote)===null||_formData$selectedQuo14===void 0?void 0:_formData$selectedQuo14.price]})]}),formData.additionalPolicies.map(policy=>/*#__PURE__*/_jsxs(\"div\",{className:\"additional-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:policy.name}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u20AC\",policy.price.toFixed(2)]})]},policy.id)),/*#__PURE__*/_jsxs(\"div\",{className:\"total-line\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Total Premium:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-amount\",children:[\"\\u20AC\",calculateTotalPrice().toFixed(2)]})]})]})})]});};const renderPhase4=()=>{var _formData$selectedQuo15;const calculateTripDuration=()=>{if(formData.startDate&&formData.endDate){const start=new Date(formData.startDate);const end=new Date(formData.endDate);const days=Math.ceil((end.getTime()-start.getTime())/(1000*3600*24));return days;}return 0;};return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Review Your Details\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please carefully review all information below. You can go back to make changes if needed.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"professional-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDF0D Trip Overview\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Insurance Type:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formData.tripType==='single'?'Single Trip Insurance':formData.tripType==='annual'?'Annual Multi-Trip Insurance':formData.tripType==='longstay'?'Long Stay Travel Insurance':'Comprehensive Single Trip Insurance'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Country of Residence:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formData.countryOfResidence})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Destination:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formData.destination})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Departure Date:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formatDateToEuropean(formData.startDate)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Return Date:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formatDateToEuropean(formData.endDate)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Trip Duration:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[calculateTripDuration(),\" days\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Number of Travelers:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[formData.numberOfTravelers,\" \",formData.numberOfTravelers===1?'person':'people']})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDC65 Traveler Information\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:formData.travelers.map((traveler,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"traveler-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"traveler-header\",children:/*#__PURE__*/_jsxs(\"h4\",{children:[\"Primary \",index===0?'Policyholder':\"Traveler \".concat(index+1)]})}),/*#__PURE__*/_jsx(\"div\",{className:\"traveler-details\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"detail-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Full Name:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"detail-value\",children:[traveler.firstName,\" \",traveler.lastName]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Age:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"detail-value\",children:[traveler.age,\" years old\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Email Address:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value\",children:traveler.email})]}),traveler.phone&&/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"Phone Number:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value\",children:traveler.phone})]}),traveler.vaxId&&/*#__PURE__*/_jsxs(\"div\",{className:\"detail-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-label\",children:\"VAX ID:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"detail-value\",children:traveler.vaxId})]})]})})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDEE1\\uFE0F Selected Insurance Plan\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:formData.selectedQuote&&/*#__PURE__*/_jsxs(\"div\",{className:\"plan-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"plan-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:formData.selectedQuote.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"plan-price\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"price-label\",children:\"Total Premium:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"price-value\",children:[\"\\u20AC\",calculateTotalPrice().toFixed(2)]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-overview\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Coverage Limits\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-icon\",children:\"\\uD83C\\uDFE5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-type\",children:\"Medical Emergency\"}),/*#__PURE__*/_jsx(\"span\",{className:\"coverage-amount\",children:formData.selectedQuote.coverage.medical})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-icon\",children:\"\\uD83E\\uDDF3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-type\",children:\"Baggage Protection\"}),/*#__PURE__*/_jsx(\"span\",{className:\"coverage-amount\",children:formData.selectedQuote.coverage.baggage})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-icon\",children:\"\\u274C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-type\",children:\"Trip Cancellation\"}),/*#__PURE__*/_jsx(\"span\",{className:\"coverage-amount\",children:formData.selectedQuote.coverage.cancellation})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"features-overview\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Included Benefits\"}),/*#__PURE__*/_jsx(\"div\",{className:\"features-grid\",children:formData.selectedQuote.features.map((feature,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"feature-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"feature-check\",children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"span\",{className:\"feature-text\",children:feature})]},index))})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-card total-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"total-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Base Premium:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-value\",children:[\"\\u20AC\",(_formData$selectedQuo15=formData.selectedQuote)===null||_formData$selectedQuo15===void 0?void 0:_formData$selectedQuo15.price]})]}),formData.additionalPolicies.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Additional Policies:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-value\",children:[\"\\u20AC\",formData.additionalPolicies.reduce((sum,policy)=>sum+policy.price,0).toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Taxes & Fees:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"total-value\",children:\"Included\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row final-total\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Total Amount:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-value\",children:[\"\\u20AC\",calculateTotalPrice().toFixed(2)]})]})]})})})]})]});};const renderPhase5=()=>{var _formData$selectedQuo16;return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Confirmation\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please confirm that all details are correct before proceeding to payment.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Trip:\"}),\" \",formData.destination,\" (\",formatDateToEuropean(formData.startDate),\" to \",formatDateToEuropean(formData.endDate),\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Country of Residence:\"}),\" \",formData.countryOfResidence]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Travelers:\"}),\" \",formData.numberOfTravelers,\" person\",formData.numberOfTravelers>1?'s':'']}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Plan:\"}),\" \",(_formData$selectedQuo16=formData.selectedQuote)===null||_formData$selectedQuo16===void 0?void 0:_formData$selectedQuo16.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item total\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Amount:\"}),\" \\u20AC\",calculateTotalPrice().toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"terms-section\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",required:true}),/*#__PURE__*/_jsxs(\"span\",{children:[\"I agree to the \",/*#__PURE__*/_jsx(\"button\",{className:\"link-button\",onClick:()=>onNavigate===null||onNavigate===void 0?void 0:onNavigate('privacy'),style:{background:'none',border:'none',color:'#0077b6',textDecoration:'underline',cursor:'pointer'},children:\"Terms and Conditions\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",required:true}),/*#__PURE__*/_jsxs(\"span\",{children:[\"I agree to the \",/*#__PURE__*/_jsx(\"button\",{className:\"link-button\",onClick:()=>onNavigate===null||onNavigate===void 0?void 0:onNavigate('privacy'),style:{background:'none',border:'none',color:'#0077b6',textDecoration:'underline',cursor:'pointer'},children:\"Privacy Policy\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\"}),/*#__PURE__*/_jsx(\"span\",{children:\"I would like to receive marketing emails about travel insurance offers\"})]})]})]});};const renderPhase6=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Screening Questions\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please answer the following questions to complete your insurance application.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"screening-questions\",children:screeningQuestions.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-questions\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No screening questions required for this policy.\"})}):screeningQuestions.map((question,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"screening-question\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Question \",question.questionNumber]}),/*#__PURE__*/_jsx(\"p\",{className:\"question-text\",children:question.question}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-options\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"radio-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"question-\".concat(question.questionNumber),value:\"yes\",checked:screeningAnswers[question.questionNumber]==='yes',onChange:e=>setScreeningAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[question.questionNumber]:'yes'}))}),/*#__PURE__*/_jsx(\"span\",{children:\"Yes\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"radio-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"question-\".concat(question.questionNumber),value:\"no\",checked:screeningAnswers[question.questionNumber]==='no',onChange:e=>setScreeningAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[question.questionNumber]:'no'}))}),/*#__PURE__*/_jsx(\"span\",{children:\"No\"})]})]}),screeningAnswers[question.questionNumber]&&/*#__PURE__*/_jsx(\"div\",{className:\"answer-message \".concat(screeningAnswers[question.questionNumber]),children:/*#__PURE__*/_jsx(\"p\",{children:screeningAnswers[question.questionNumber]==='yes'?question.yesMessage:question.noMessage})})]},question.questionNumber))})]});const renderPhase7=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment Details\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter your payment information to complete your purchase.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"payment-methods\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-method-info\",children:/*#__PURE__*/_jsx(\"p\",{children:\"We accept all major credit and debit cards for secure payment processing.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Card Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cardNumber\",children:\"Card Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"cardNumber\",value:formData.cardNumber,onChange:e=>handleInputChange('cardNumber',e.target.value),placeholder:\"1234 5678 9012 3456\",title:\"Enter your 16-digit card number\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expiryDate\",children:\"Expiry Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"expiryDate\",value:formData.expiryDate,onChange:e=>handleInputChange('expiryDate',e.target.value),placeholder:\"MM/YY\",title:\"Enter card expiry date in MM/YY format\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cvv\",children:\"CVV\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"cvv\",value:formData.cvv,onChange:e=>handleInputChange('cvv',e.target.value),placeholder:\"123\",title:\"Enter the 3-digit CVV code from the back of your card\",required:true})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"billing-address\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Billing Address\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",value:formData.billingAddress.street,onChange:e=>handleBillingAddressChange('street',e.target.value),placeholder:\"Enter street address\",title:\"Enter your billing street address\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",value:formData.billingAddress.city,onChange:e=>handleBillingAddressChange('city',e.target.value),placeholder:\"Enter city\",title:\"Enter your billing city\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postalCode\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postalCode\",value:formData.billingAddress.postalCode,onChange:e=>handleBillingAddressChange('postalCode',e.target.value),placeholder:\"Enter postal code\",title:\"Enter your billing postal code\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"country\",value:formData.billingAddress.country,onChange:e=>handleBillingAddressChange('country',e.target.value),placeholder:\"Enter country\",title:\"Enter your billing country\",required:true})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-summary\",children:/*#__PURE__*/_jsx(\"div\",{className:\"summary-item\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Total Amount: \\u20AC\",calculateTotalPrice().toFixed(2)]})})})]});const renderPhase8=()=>{var _formData$travelers$,_formData$selectedQuo17,_formData$selectedQuo18;return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDF89 Congratulations!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your travel insurance has been successfully purchased.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"policy-number\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Policy Number:\"}),\" \",policyNumber||\"TI-\".concat(Date.now().toString().slice(-8))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-email\",children:[\"A confirmation email has been sent to \",(_formData$travelers$=formData.travelers[0])===null||_formData$travelers$===void 0?void 0:_formData$travelers$.email]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"documents-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Documents\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"document-links\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:downloadPolicyPDF,className:\"document-link download-btn\",\"aria-label\":\"Download your policy summary as a PDF document\",title:\"Download a PDF copy of your travel insurance policy summary\",type:\"button\",children:\"\\uD83D\\uDCC4 Download Your Policy Summary (PDF)\"}),((_formData$selectedQuo17=formData.selectedQuote)===null||_formData$selectedQuo17===void 0?void 0:_formData$selectedQuo17.summaryOfCoverUrl)&&/*#__PURE__*/_jsx(\"a\",{href:formData.selectedQuote.summaryOfCoverUrl,className:\"document-link\",download:true,children:\"\\uD83D\\uDCC4 Download Summary of Cover\"}),((_formData$selectedQuo18=formData.selectedQuote)===null||_formData$selectedQuo18===void 0?void 0:_formData$selectedQuo18.policyWordingUrl)&&/*#__PURE__*/_jsx(\"a\",{href:formData.selectedQuote.policyWordingUrl,className:\"document-link\",download:true,children:\"\\uD83D\\uDCCB Download Policy Terms & Conditions\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/Globelink_Wording_EU_V2_07.03.2025.pdf\",className:\"document-link\",download:true,children:\"\\uD83C\\uDD94 Download Insurance Card\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/Globelink_Wording_EU_V2_07.03.2025.pdf\",className:\"document-link\",download:true,children:\"\\uD83D\\uDCDE Emergency Contact Information\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"next-steps\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"What's Next?\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Save your policy documents in a safe place\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Keep the emergency contact numbers with you while traveling\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Download our mobile app for easy access to your policy\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Contact us anytime at +30 6974907500 for assistance\"})]})]})]});};const renderPhaseContent=()=>{switch(currentPhase){case 1:return renderPhase1();case 2:return renderPhase2();case 3:return renderPhase3();case 4:return renderPhase4();case 5:return renderPhase5();case 6:return renderPhase6();case 7:return renderPhase7();case 8:return renderPhase8();default:return renderPhase1();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quote-page\",children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n          @keyframes spin {\\n            0% { transform: rotate(0deg); }\\n            100% { transform: rotate(360deg); }\\n          }\\n        \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Travel Insurance Quote Wizard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wizard-progress\",children:[1,2,3,4,5,6,7,8].map(phase=>/*#__PURE__*/_jsxs(\"div\",{className:\"progress-step \".concat(currentPhase>=phase?'active':'',\" \").concat(currentPhase===phase?'current':''),children:[/*#__PURE__*/_jsx(\"div\",{className:\"step-number\",children:phase}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-label\",children:[phase===1&&'Details',phase===2&&'Quotes',phase===3&&'Add-ons',phase===4&&'Review',phase===5&&'Confirm',phase===6&&'Screening',phase===7&&'Payment',phase===8&&'Documents']})]},phase))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"wizard-content\",children:renderPhaseContent()}),/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-navigation\",children:[currentPhase>1&&currentPhase<8&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:prevPhase,\"aria-label\":\"Go to previous step\",title:\"Go back to the previous step\",type:\"button\",children:\"Previous\"}),currentPhase<7&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:nextPhase,disabled:!isPhaseValid(currentPhase),\"aria-label\":currentPhase===6?'Proceed to payment step':'Go to next step',title:currentPhase===6?'Continue to payment details':'Continue to next step',type:\"button\",children:currentPhase===6?'Proceed to Payment':'Next'}),currentPhase===7&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:processPayment,disabled:!isPhaseValid(currentPhase)||isProcessing,\"aria-label\":isProcessing?'Processing payment, please wait':\"Pay \\u20AC\".concat(calculateTotalPrice().toFixed(2),\" for your travel insurance\"),title:isProcessing?'Payment is being processed, please wait':\"Complete payment of \\u20AC\".concat(calculateTotalPrice().toFixed(2)),type:\"button\",style:{opacity:!isPhaseValid(currentPhase)||isProcessing?0.5:1,cursor:!isPhaseValid(currentPhase)||isProcessing?'not-allowed':'pointer'},children:isProcessing?'Processing Payment...':\"Pay \\u20AC\".concat(calculateTotalPrice().toFixed(2))})}),currentPhase===8&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>window.location.href='/',\"aria-label\":\"Return to homepage\",title:\"Go back to the main homepage\",type:\"button\",children:\"Return to Homepage\"})]})]}),showHelpPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-overlay\",onClick:()=>setShowHelpPopup(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Destination Categories & Countries\"}),/*#__PURE__*/_jsx(\"button\",{className:\"help-popup-close\",onClick:()=>setShowHelpPopup(false),\"aria-label\":\"Close help popup\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-content\",children:isLoadingCountries?/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:\"Loading countries...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"categories-container\",children:Object.entries(countriesByCategory).map(_ref4=>{let[category,countries]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"category-section\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"category-title\",children:category}),/*#__PURE__*/_jsx(\"div\",{className:\"countries-grid\",children:countries.map(country=>/*#__PURE__*/_jsx(\"span\",{className:\"country-item\",children:country},country))}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-count\",children:[countries.length,\" countries\"]})]},category);})})})]})})]});};export default Quote2;","map":{"version":3,"names":["React","useState","useEffect","useRef","createQuote","processPayment","apiProcessPayment","TerracottaService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","generatePDF","formData","calculateTotalPrice","formatDateToEuropean","policyNumber","_formData$selectedQuo","jsPDF","default","doc","currentDate","Date","toLocaleDateString","setFontSize","text","concat","yPos","tripType","countryOfResidence","destination","startDate","endDate","numberOfTravelers","travelers","forEach","traveler","index","addPage","firstName","lastName","age","email","phone","selectedQuote","name","coverage","medical","baggage","cancellation","features","length","feature","additionalPolicies","policy","price","toFixed","additional","reduce","sum","save","error","console","generateHTMLPolicy","_formData$selectedQuo2","htmlContent","map","join","printWindow","window","open","document","write","close","dateString","year","month","day","split","calculateAgeFromDateOfBirth","dateOfBirth","birthDate","today","getFullYear","monthDiff","getMonth","getDate","Math","max","Quote2","_ref","onNavigate","currentPhase","setCurrentPhase","setFormData","vaxId","nationality","paymentMethod","cardNumber","expiryDate","cvv","billingAddress","street","city","postalCode","country","quoteOptions","setQuoteOptions","isProcessing","setIsProcessing","setPolicyNumber","terracottaService","log","getInstance","screeningQuestions","setScreeningQuestions","screeningAnswers","setScreeningAnswers","isLoadingQuotes","setIsLoadingQuotes","quoteError","setQuoteError","availableProducts","setAvailableProducts","isLoadingProducts","setIsLoadingProducts","availablePolicyTypes","setAvailablePolicyTypes","isLoadingPolicyTypes","setIsLoadingPolicyTypes","availablePolicyTypeDestinations","setAvailablePolicyTypeDestinations","isLoadingPolicyTypeDestinations","setIsLoadingPolicyTypeDestinations","destinationCategories","setDestinationCategories","isLoadingCategories","setIsLoadingCategories","showHelpPopup","setShowHelpPopup","countriesByCategory","setCountriesByCategory","isLoadingCountries","setIsLoadingCountries","countriesOfResidence","setCountriesOfResidence","isLoadingCountriesOfResidence","setIsLoadingCountriesOfResidence","availableAdditionalPolicies","id","description","icon","category","scrollTo","top","behavior","loadTerracottaProducts","_productResponse$Sche","productResponse","getUserProductList","Schemas","loadPolicyTypes","allPolicyTypes","product","SchemaID","SchemaName","policyResponse","getUserProductTypePolicy","toString","policyTypesWithSchema","PolicyTypes","policyType","_objectSpread","push","uniquePolicyTypes","filter","self","findIndex","p","TypePolicyID","schemaToUse","find","policyTypeResponse","loadCountriesOfResidence","response","fetch","data","json","status","countries","message","loadDestinationCategories","categories","loadCountriesForCategories","countriesData","encodeURIComponent","generateQuotesIfNeeded","options","generateQuoteOptions","_response$quoteResult","terracottaRequest","convertToTerracottaFormat","provideQuotation","Message","quoteResults","realQuotes","result","QuoteID","schemaName","policytypeName","typePolicyName","type","isBestBuy","GrossPrice","coverLevel","toLocaleString","activities","isAnnual","maxDaysPerTrip","terracottaQuoteId","policyTypeName","summaryOfCoverUrl","SI","policyWordingUrl","PW","currency","ipt","IPT","schemaID","destinationCategory","destinationName","residenceName","packageName","typePackageName","isBestBuyText","discount","Discount","iconURL","IconURL","helpFile","HelpFile","policytypeShortName","keyFactsUrl","KF","policyTypeID","PolicyTypeID","destinationID","DestinationID","packageID","PackageID","screeningPremium","ipRate","IPTRate","netUW","wbComm","agentComm","SummaryCovers","sortedByIPT","sort","a","b","iptA","iptB","top3Quotes","slice","sortedByPrice","q","generateSampleSOAPQuotes","allSampleQuotes","top3","calculateRealCoverageLevels","baseMedical","baseBaggage","baseCancellation","medicalMultiplier","baggageMultiplier","cancellationMultiplier","toLowerCase","includes","parseInt","replace","generateActivitiesForDestination","generateFeaturesFromSOAPData","baseFeatures","soapFeatures","destinationFeatures","calculateCoverageLevels","determineQuoteType","generateFeaturesForDestination","baseActivities","generateEnhancedMockQuoteOptions","days","ceil","getTime","basePrice","dailyRate","tripMultiplier","mockQuotes","schemasToUse","schema","round","quoteType","now","generateLegacyMockQuoteOptions","CustomDatePicker","_ref2","value","onChange","placeholder","required","minDate","isOpen","setIsOpen","setCurrentDate","pickerRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","isDateValid","date","setHours","inputDate","minDateObj","generateCalendar","firstDay","lastDay","daysInMonth","startingDayOfWeek","getDay","i","className","padStart","isSelected","isToday","toDateString","isValid","onClick","style","cursor","opacity","children","navigateMonth","direction","monthNames","ref","e","formattedValue","formatDateInput","isoDate","convertToISO","title","pattern","maxLength","handleInputChange","field","prev","newData","setDate","handleTravelerChange","handleNumberOfTravelersChange","count","splice","handleBillingAddressChange","ddmmyyyy","toISOString","digits","nextPhase","JSON","stringify","essentialPlan","option","_option$name","_option$policytypeNam","Error","String","stack","_formData$selectedQuo3","screeningResponse","getScreeningQuestions","questionNumber","question","yesMessage","noMessage","yesAction","noAction","yesActionText","noActionText","prevPhase","selectQuote","quote","addAdditionalPolicy","removeAdditionalPolicy","policyId","_formData$selectedQuo4","additionalPrice","generatePolicyPDF","downloadPolicyPDF","quoteData","totalAmount","quoteResponse","_formData$selectedQuo5","quoteId","terracottaScreeningAnswers","Object","entries","_ref3","answer","savePolicyResponse","savePolicyDetails","userID","userCode","quoteID","screeningQuestionAnswers","policySaved","policyID","terracottaError","paymentData","amount","paymentResponse","_paymentResponse$data","alert","isPhaseValid","phase","every","t","keys","paymentValid","renderPhase1","htmlFor","fontSize","color","marginLeft","disabled","tripTypeValue","TypePolicyName","country_name","country_id","undefined","num","min","readOnly","backgroundColor","renderPhase2","textAlign","marginBottom","margin","fontWeight","fontFamily","display","flexDirection","justifyContent","gap","marginTop","overflowX","padding","maxWidth","_formData$selectedQuo6","_formData$selectedQuo7","_formData$selectedQuo8","_formData$selectedQuo1","_formData$selectedQuo12","background","border","borderRadius","transition","boxShadow","position","minWidth","flexShrink","onMouseEnter","_formData$selectedQuo9","currentTarget","borderColor","onMouseLeave","_formData$selectedQuo0","lineHeight","cover","Limit","width","textTransform","_formData$selectedQuo10","_formData$selectedQuo11","gridColumn","renderPhase3","_formData$selectedQuo13","_formData$selectedQuo14","some","renderPhase4","_formData$selectedQuo15","calculateTripDuration","start","end","renderPhase5","_formData$selectedQuo16","textDecoration","renderPhase6","checked","renderPhase7","renderPhase8","_formData$travelers$","_formData$selectedQuo17","_formData$selectedQuo18","href","download","renderPhaseContent","location","stopPropagation","_ref4"],"sources":["C:/Users/laptop-123/TravelInsurance_Demo_2/src/pages/Quote2.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Quote2.css';\n// Import API service for database integration\nimport { createQuote, processPayment as apiProcessPayment } from '../services/apiService';\n// Import Terracotta service for insurance quotes\nimport TerracottaService, { \n  TerracottaQuoteResponse, \n  TerracottaQuoteResult, \n  TerracottaScreeningQuestionsResponse,\n  TerracottaSavePolicyResponse,\n  TerracottaProductListResponse,\n  TerracottaPolicyType,\n  TerracottaPolicyTypeResponse,\n  TerracottaPolicyTypeDestination,\n  TerracottaPolicyTypeDestinationResponse,\n  SummaryCover\n} from '../services/terracottaService';\n\n// Import jsPDF dynamically to avoid build issues\nconst generatePDF = async (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  try {\n    // Dynamic import of jsPDF\n    const jsPDF = (await import('jspdf')).default;\n    \n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleDateString('en-GB');\n    \n    // Set up fonts and styles\n    doc.setFontSize(20);\n    doc.text('TRAVEL INSURANCE POLICY', 20, 20);\n    \n    doc.setFontSize(14);\n    doc.text(`Policy Number: ${policyNumber}`, 20, 35);\n    doc.text(`Issue Date: ${currentDate}`, 20, 45);\n    \n    let yPos = 65;\n    \n    // Trip Information Section\n    doc.setFontSize(16);\n    doc.text('TRIP INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    const tripType = formData.tripType === 'single' ? 'Single Trip Insurance' : \n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance';\n    \n    doc.text(`Trip Type: ${tripType}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Country of Residence: ${formData.countryOfResidence}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Destination: ${formData.destination}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Departure: ${formatDateToEuropean(formData.startDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Return: ${formatDateToEuropean(formData.endDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Travelers: ${formData.numberOfTravelers}`, 20, yPos);\n    yPos += 20;\n    \n    // Traveler Information\n    doc.setFontSize(16);\n    doc.text('TRAVELER INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    formData.travelers.forEach((traveler: any, index: number) => {\n      if (yPos > 250) { // New page if needed\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.text(`${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}:`, 20, yPos);\n      yPos += 10;\n      doc.text(`Name: ${traveler.firstName} ${traveler.lastName}`, 20, yPos);\n      yPos += 8;\n      doc.text(`Age: ${traveler.age} years old`, 20, yPos);\n      yPos += 8;\n      doc.text(`Email: ${traveler.email}`, 20, yPos);\n      yPos += 8;\n      if (traveler.phone) {\n        doc.text(`Phone: ${traveler.phone}`, 20, yPos);\n        yPos += 8;\n      }\n      yPos += 10;\n    });\n    \n    // Selected Plan\n    if (formData.selectedQuote) {\n      if (yPos > 180) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('SELECTED INSURANCE PLAN', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      doc.text(`Plan: ${formData.selectedQuote.name}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Medical: ${formData.selectedQuote.coverage.medical}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Baggage: ${formData.selectedQuote.coverage.baggage}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Cancellation: ${formData.selectedQuote.coverage.cancellation}`, 20, yPos);\n      yPos += 15;\n      \n      // Add Included Features\n      if (formData.selectedQuote.features && formData.selectedQuote.features.length > 0) {\n        doc.text('Included Features:', 20, yPos);\n        yPos += 10;\n        formData.selectedQuote.features.forEach((feature: string) => {\n          if (yPos > 270) { // Check for page break\n            doc.addPage();\n            yPos = 20;\n          }\n          doc.text(`• ${feature}`, 25, yPos);\n          yPos += 8;\n        });\n        yPos += 10;\n      }\n    }\n    \n    // Additional Coverage\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      if (yPos > 220) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('ADDITIONAL COVERAGE', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      formData.additionalPolicies.forEach((policy: any) => {\n        if (yPos > 270) { // Check for page break\n          doc.addPage();\n          yPos = 20;\n        }\n        doc.text(`• ${policy.name} - €${policy.price.toFixed(2)}`, 25, yPos);\n        yPos += 8;\n      });\n      yPos += 15;\n    }\n    \n    // Premium Summary\n    if (yPos > 200) {\n      doc.addPage();\n      yPos = 20;\n    }\n    \n    doc.setFontSize(16);\n    doc.text('PREMIUM SUMMARY', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    doc.text(`Base Premium: €${formData.selectedQuote?.price}`, 20, yPos);\n    yPos += 10;\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      const additional = formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0);\n      doc.text(`Additional Policies: €${additional.toFixed(2)}`, 20, yPos);\n      yPos += 10;\n    }\n    doc.text('Taxes & Fees: Included', 20, yPos);\n    yPos += 10;\n    doc.text(`Total Premium: €${calculateTotalPrice().toFixed(2)}`, 20, yPos);\n    yPos += 20;\n    \n    doc.text('Emergency Contact: +30 6974907500', 20, yPos);\n    \n    // Save the PDF\n    doc.save(`Travel_Insurance_Policy_${policyNumber}.pdf`);\n    \n  } catch (error) {\n    console.error('PDF generation failed, falling back to HTML:', error);\n    // Fallback to HTML generation if PDF fails\n    generateHTMLPolicy(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  }\n};\n\nconst generateHTMLPolicy = (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  const currentDate = new Date().toLocaleDateString('en-GB');\n  \n  const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Travel Insurance Policy - ${policyNumber}</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\n        .section { margin-bottom: 25px; }\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\n        .info-row { margin: 8px 0; }\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\n        @media print { body { margin: 0; } }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>TRAVEL INSURANCE POLICY</h1>\n        <h2>Policy Number: ${policyNumber}</h2>\n        <p>Issue Date: ${currentDate}</p>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRIP INFORMATION</div>\n        <div class=\"info-row\"><strong>Trip Type:</strong> ${formData.tripType === 'single' ? 'Single Trip Insurance' : \n                        formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                        formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                        'Comprehensive Single Trip Insurance'}</div>\n        <div class=\"info-row\"><strong>Country of Residence:</strong> ${formData.countryOfResidence}</div>\n        <div class=\"info-row\"><strong>Destination:</strong> ${formData.destination}</div>\n        <div class=\"info-row\"><strong>Departure:</strong> ${formatDateToEuropean(formData.startDate)}</div>\n        <div class=\"info-row\"><strong>Return:</strong> ${formatDateToEuropean(formData.endDate)}</div>\n        <div class=\"info-row\"><strong>Travelers:</strong> ${formData.numberOfTravelers}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRAVELER INFORMATION</div>\n        ${formData.travelers.map((traveler: any, index: number) => `\n            <div class=\"traveler-block\">\n                <strong>${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}</strong>\n                <div class=\"info-row\"><strong>Name:</strong> ${traveler.firstName} ${traveler.lastName}</div>\n                <div class=\"info-row\"><strong>Age:</strong> ${traveler.age} years old</div>\n                <div class=\"info-row\"><strong>Email:</strong> ${traveler.email}</div>\n                ${traveler.phone ? `<div class=\"info-row\"><strong>Phone:</strong> ${traveler.phone}</div>` : ''}\n            </div>\n        `).join('')}\n    </div>\n    \n    ${formData.selectedQuote ? `\n    <div class=\"section\">\n        <div class=\"section-title\">SELECTED INSURANCE PLAN</div>\n        <div class=\"info-row\"><strong>Plan:</strong> ${formData.selectedQuote.name}</div>\n        <div class=\"info-row\"><strong>Medical Coverage:</strong> ${formData.selectedQuote.coverage.medical}</div>\n        <div class=\"info-row\"><strong>Baggage Coverage:</strong> ${formData.selectedQuote.coverage.baggage}</div>\n        <div class=\"info-row\"><strong>Trip Cancellation:</strong> ${formData.selectedQuote.coverage.cancellation}</div>\n        \n        ${formData.selectedQuote.features && formData.selectedQuote.features.length > 0 ? `\n        <div style=\"margin-top: 15px;\">\n            <strong>Included Features:</strong>\n            <ul>\n                ${formData.selectedQuote.features.map((feature: string) => `<li>${feature}</li>`).join('')}\n            </ul>\n        </div>\n        ` : ''}\n    </div>\n    ` : ''}\n    \n    ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n    <div class=\"section\">\n        <div class=\"section-title\">ADDITIONAL COVERAGE</div>\n        <ul>\n            ${formData.additionalPolicies.map((policy: any) => `<li>${policy.name} - €${policy.price.toFixed(2)}</li>`).join('')}\n        </ul>\n    </div>\n    ` : ''}\n    \n    <div class=\"section\">\n        <div class=\"section-title\">PREMIUM SUMMARY</div>\n        <div class=\"info-row\"><strong>Base Premium:</strong> €${formData.selectedQuote?.price}</div>\n        ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n        <div class=\"info-row\"><strong>Additional Policies:</strong> €${formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0).toFixed(2)}</div>\n        ` : ''}\n        <div class=\"info-row\"><strong>Taxes & Fees:</strong> Included</div>\n        <div class=\"info-row\"><strong>Total Premium:</strong> €${calculateTotalPrice().toFixed(2)}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"info-row\"><strong>Emergency Contact:</strong> +30 6974907500</div>\n        <div class=\"info-row\" style=\"margin-top: 20px; font-style: italic;\">\n            This document serves as proof of travel insurance coverage.\n        </div>\n    </div>\n    \n    <script>\n        window.onload = function() { window.print(); };\n        window.onafterprint = function() { window.close(); };\n    </script>\n</body>\n</html>`;\n\n  const printWindow = window.open('', '_blank', 'width=800,height=600');\n  if (printWindow) {\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }\n};\n\n// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean = (dateString: string): string => {\n  if (!dateString) return '';\n  // Parse the ISO date string directly to avoid timezone issues\n  const [year, month, day] = dateString.split('-');\n  return `${day}/${month}/${year}`;\n};\n\nconst calculateAgeFromDateOfBirth = (dateOfBirth: string): number => {\n  const birthDate = new Date(dateOfBirth);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  \n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  \n  return Math.max(0, age);\n};\n\ninterface TravelerInfo {\n  firstName: string;\n  lastName: string;\n  age: string;\n  email: string;\n  phone: string;\n  vaxId: string;\n  nationality: string;\n  title?: string;\n  dateOfBirth?: string;\n  gender?: string;\n}\n\ninterface QuoteOption {\n  id: string;\n  name: string;\n  type: 'basic' | 'standard' | 'premium';\n  price: number;\n  coverage: {\n    medical: string;\n    baggage: string;\n    cancellation: string;\n    activities: string[];\n  };\n  features: string[];\n  // Terracotta specific fields\n  terracottaQuoteId?: string;\n  schemaName?: string;\n  policyTypeName?: string;\n  policytypeName?: string; // Raw field from SOAP response\n  summaryOfCoverUrl?: string;\n  policyWordingUrl?: string;\n  currency?: string;\n  ipt?: number;\n  // Enhanced metadata fields\n  schemaID?: number;\n  destinationCategory?: string;\n  tripType?: string;\n  // Enhanced SOAP fields\n  residenceName?: string;\n  destinationName?: string;\n  packageName?: string;\n  typePackageName?: string;\n  isAnnual?: number;\n  isBestBuy?: number;\n  maxDaysPerTrip?: number;\n  coverLevel?: number;\n  discount?: number;\n  iconURL?: string;\n  helpFile?: string;\n  policytypeShortName?: string;\n  // Additional SOAP response fields\n  keyFactsUrl?: string;\n  policyTypeID?: number;\n  destinationID?: number;\n  packageID?: number;\n  screeningPremium?: number;\n  ipRate?: number;\n  netUW?: number;\n  wbComm?: number;\n  agentComm?: number;\n  // Additional fields from SOAP response\n  typePolicyName?: string;\n  isBestBuyText?: string;\n  SummaryCovers?: SummaryCover[];\n}\n\ninterface QuoteFormData {\n  // Trip Details\n  destination: string;\n  startDate: string;\n  endDate: string;\n  tripType: 'single' | 'annual' | 'comprehensive' | 'longstay';\n  countryOfResidence: string;\n  \n  // Traveler Information\n  numberOfTravelers: number;\n  travelers: TravelerInfo[];\n  \n  // Selected Quote\n  selectedQuote: QuoteOption | null;\n  \n  // Additional Policies\n  additionalPolicies: AdditionalPolicy[];\n  \n  // Payment Details\n  paymentMethod: 'card' | 'bank' | 'paypal';\n  cardNumber: string;\n  expiryDate: string;\n  cvv: string;\n  billingAddress: {\n    street: string;\n    city: string;\n    postalCode: string;\n    country: string;\n  };\n}\n\ninterface AdditionalPolicy {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  icon: string;\n  category: string;\n}\n\ntype WizardPhase = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\n\ninterface QuoteProps {\n  onNavigate?: (page: string) => void;\n}\n\nconst Quote2: React.FC<QuoteProps> = ({ onNavigate }) => {\n  const [currentPhase, setCurrentPhase] = useState<WizardPhase>(1);\n  const [formData, setFormData] = useState<QuoteFormData>({\n    destination: '',\n    startDate: '',\n    endDate: '',\n    tripType: 'single',\n    countryOfResidence: '',\n    numberOfTravelers: 1,\n    travelers: [\n      {\n        firstName: '',\n        lastName: '',\n        age: '',\n        email: '',\n        phone: '',\n        vaxId: '',\n        nationality: ''\n      }\n    ],\n    selectedQuote: null,\n    additionalPolicies: [],\n    paymentMethod: 'card',\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    billingAddress: {\n      street: '',\n      city: '',\n      postalCode: '',\n      country: ''\n    }\n  });\n\n  const [quoteOptions, setQuoteOptions] = useState<QuoteOption[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [policyNumber, setPolicyNumber] = useState<string>('');\n  const [terracottaService] = useState<TerracottaService>(() => {\n    console.log('Creating TerracottaService instance...');\n    return TerracottaService.getInstance('4072', '111427');\n  });\n  const [screeningQuestions, setScreeningQuestions] = useState<any[]>([]);\n  const [screeningAnswers, setScreeningAnswers] = useState<{[key: number]: 'yes' | 'no'}>({});\n  const [isLoadingQuotes, setIsLoadingQuotes] = useState(false);\n  const [quoteError, setQuoteError] = useState<string>('');\n  const [availableProducts, setAvailableProducts] = useState<any[]>([]);\n  const [isLoadingProducts, setIsLoadingProducts] = useState(true);\n  \n  // Policy types state\n  const [availablePolicyTypes, setAvailablePolicyTypes] = useState<TerracottaPolicyType[]>([]);\n  const [isLoadingPolicyTypes, setIsLoadingPolicyTypes] = useState(false);\n  \n  // Policy type destinations state (Trip Types)\n  const [availablePolicyTypeDestinations, setAvailablePolicyTypeDestinations] = useState<TerracottaPolicyTypeDestination[]>([]);\n  const [isLoadingPolicyTypeDestinations, setIsLoadingPolicyTypeDestinations] = useState(false);\n  \n  // Destination categories state\n  const [destinationCategories, setDestinationCategories] = useState<string[]>([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n  \n  // Help popup state\n  const [showHelpPopup, setShowHelpPopup] = useState(false);\n  const [countriesByCategory, setCountriesByCategory] = useState<{[key: string]: string[]}>({});\n  const [isLoadingCountries, setIsLoadingCountries] = useState(false);\n  \n  // Countries of residence state\n  const [countriesOfResidence, setCountriesOfResidence] = useState<{country_id: number, country_name: string}[]>([]);\n  const [isLoadingCountriesOfResidence, setIsLoadingCountriesOfResidence] = useState(false);\n  \n  const [availableAdditionalPolicies] = useState<AdditionalPolicy[]>([\n    {\n      id: 'excess-waiver',\n      name: 'Excess Waiver',\n      description: 'You can avoid paying the policy excess by adding the Excess Waiver option. This means that in the event of a claim, you won\\'t have the excess deducted from the amount you are paid.',\n      price: 8.45,\n      icon: '🛡️',\n      category: 'Protection'\n    },\n    {\n      id: 'cancellation-top-up',\n      name: 'Cancellation Top Up',\n      description: 'Additional cancellation coverage for enhanced protection against trip cancellation costs.',\n      price: 15.50,\n      icon: '❌',\n      category: 'Cancellation'\n    },\n    {\n      id: 'hazardous-pursuits-cat3',\n      name: 'Hazardous Pursuits Category 3',\n      description: 'Coverage for adventure sports and activities including skiing, snowboarding, and water sports.',\n      price: 12.30,\n      icon: '🏂',\n      category: 'Activities'\n    },\n    {\n      id: 'hazardous-pursuits-cat4',\n      name: 'Hazardous Pursuits Category 4',\n      description: 'Coverage for extreme sports including rock climbing, bungee jumping, and skydiving.',\n      price: 18.75,\n      icon: '🪂',\n      category: 'Activities'\n    },\n    {\n      id: 'valuables',\n      name: 'Valuables',\n      description: 'Enhanced coverage for valuable items including jewelry, electronics, and expensive equipment.',\n      price: 22.40,\n      icon: '💎',\n      category: 'Protection'\n    },\n    {\n      id: 'golfers-extension',\n      name: 'Golfers Extension',\n      description: 'Specialized coverage for golf equipment, green fees, and golf-related incidents.',\n      price: 14.80,\n      icon: '⛳',\n      category: 'Sports'\n    },\n    {\n      id: 'event-cancellation',\n      name: 'Event Cancellation',\n      description: 'Coverage for cancellation of prepaid events, concerts, or special occasions during your trip.',\n      price: 19.95,\n      icon: '🎫',\n      category: 'Events'\n    },\n    {\n      id: 'repatriation-home',\n      name: 'Repatriation Home For Australians, South Africans, And New Zealanders',\n      description: 'Special repatriation coverage for travelers from Australia, South Africa, and New Zealand.',\n      price: 25.60,\n      icon: '✈️',\n      category: 'Repatriation'\n    }\n  ]);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  // Load available Terracotta products on component mount\n  useEffect(() => {\n    const loadTerracottaProducts = async () => {\n      try {\n        setIsLoadingProducts(true);\n        console.log('Loading Terracotta products...');\n        const productResponse = await terracottaService.getUserProductList();\n        console.log('Terracotta products loaded:', productResponse);\n        console.log(`✅ Successfully loaded ${productResponse.Schemas?.length || 0} products for your account`);\n        setAvailableProducts(productResponse.Schemas || []);\n        setIsLoadingProducts(false);\n      } catch (error) {\n        console.error('Error loading Terracotta products:', error);\n        setIsLoadingProducts(false);\n        // Don't show error to user, just log it - we'll use fallback\n      }\n    };\n\n    loadTerracottaProducts();\n  }, [terracottaService]);\n\n  // Load policy types when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        setIsLoadingPolicyTypes(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema)\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        for (const product of availableProducts) {\n          try {\n            console.log(`Loading policy types for schema ${product.SchemaID}: ${product.SchemaName}`);\n            const policyResponse = await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());\n            console.log(`Policy types for schema ${product.SchemaID}:`, policyResponse);\n            \n            // Add schema context to each policy type\n            const policyTypesWithSchema = policyResponse.PolicyTypes.map(policyType => ({\n              ...policyType,\n              SchemaID: product.SchemaID,\n              SchemaName: product.SchemaName\n            }));\n            \n            allPolicyTypes.push(...policyTypesWithSchema);\n          } catch (error) {\n            console.error(`Error loading policy types for schema ${product.SchemaID}:`, error);\n          }\n        }\n        \n        // Remove duplicates based on TypePolicyID\n        const uniquePolicyTypes = allPolicyTypes.filter((policyType, index, self) => \n          index === self.findIndex(p => p.TypePolicyID === policyType.TypePolicyID)\n        );\n        \n        setAvailablePolicyTypes(uniquePolicyTypes);\n        console.log(`✅ Successfully loaded ${uniquePolicyTypes.length} unique policy types`);\n        setIsLoadingPolicyTypes(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypes(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Load policy types (Trip Types) when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        setIsLoadingPolicyTypeDestinations(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema) - Using schema 717 as specified\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        // Use schema 717 as specified in the requirement\n        const schemaToUse = availableProducts.find(p => p.SchemaID === 717) || availableProducts[0];\n        \n        try {\n          console.log(`Loading policy types for schema ${schemaToUse.SchemaID}: ${schemaToUse.SchemaName}`);\n          const policyTypeResponse = await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());\n          console.log(`Policy types for schema ${schemaToUse.SchemaID}:`, policyTypeResponse);\n          \n          allPolicyTypes.push(...policyTypeResponse.PolicyTypes);\n        } catch (error) {\n          console.error(`Error loading policy types for schema ${schemaToUse.SchemaID}:`, error);\n        }\n        \n        setAvailablePolicyTypes(allPolicyTypes);\n        console.log(`✅ Successfully loaded ${allPolicyTypes.length} policy types`);\n        setIsLoadingPolicyTypeDestinations(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypeDestinations(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Show a brief message when end date is cleared due to start date change\n  useEffect(() => {\n    if (formData.startDate && !formData.endDate) {\n      // This effect will run when start date exists but end date is empty\n      // We could add a toast notification here if needed\n    }\n  }, [formData.startDate, formData.endDate]);\n\n  // Load countries of residence on component mount\n  useEffect(() => {\n    const loadCountriesOfResidence = async () => {\n      try {\n        setIsLoadingCountriesOfResidence(true);\n        console.log('Loading countries of residence...');\n        const response = await fetch('http://localhost:5002/api/countries');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setCountriesOfResidence(data.countries);\n          console.log('✅ Countries of residence loaded:', data.countries.length, 'countries');\n        } else {\n          console.error('❌ Failed to load countries of residence:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries of residence:', error);\n      } finally {\n        setIsLoadingCountriesOfResidence(false);\n      }\n    };\n\n    loadCountriesOfResidence();\n  }, []);\n\n  // Load destination categories on component mount\n  useEffect(() => {\n    const loadDestinationCategories = async () => {\n      try {\n        setIsLoadingCategories(true);\n        console.log('Loading destination categories...');\n        const response = await fetch('http://localhost:5002/api/destination-categories');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setDestinationCategories(data.categories);\n          console.log('✅ Destination categories loaded:', data.categories);\n        } else {\n          console.error('❌ Failed to load destination categories:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading destination categories:', error);\n        // Set fallback categories if API fails\n        setDestinationCategories(['Europe', 'Worldwide']);\n      } finally {\n        setIsLoadingCategories(false);\n      }\n    };\n\n    loadDestinationCategories();\n  }, []);\n\n  // Load countries for each category when categories are loaded\n  useEffect(() => {\n    const loadCountriesForCategories = async () => {\n      if (destinationCategories.length === 0) return;\n      \n      try {\n        setIsLoadingCountries(true);\n        const countriesData: {[key: string]: string[]} = {};\n        \n        // Load countries for each category\n        for (const category of destinationCategories) {\n          try {\n            const response = await fetch(`http://localhost:5002/api/destination-categories/${encodeURIComponent(category)}/countries`);\n            const data = await response.json();\n            \n            if (data.status === 'success') {\n              countriesData[category] = data.countries;\n            }\n          } catch (error) {\n            console.error(`Error loading countries for ${category}:`, error);\n            countriesData[category] = [];\n          }\n        }\n        \n        setCountriesByCategory(countriesData);\n      } catch (error) {\n        console.error('Error loading countries:', error);\n      } finally {\n        setIsLoadingCountries(false);\n      }\n    };\n\n    loadCountriesForCategories();\n  }, [destinationCategories]);\n\n  // Generate quotes when component mounts or when form data is complete\n  useEffect(() => {\n    const generateQuotesIfNeeded = async () => {\n      // Only generate quotes if we have basic form data and we're in phase 2\n      if (currentPhase === 2 && quoteOptions.length === 0) {\n        console.log('🔄 Generating quotes on component load...');\n        try {\n          const options = await generateQuoteOptions();\n          setQuoteOptions(options);\n        } catch (error) {\n          console.error('Error generating quotes:', error);\n        }\n      }\n    };\n\n    generateQuotesIfNeeded();\n  }, [currentPhase]);\n\n  // REMOVED: Auto-loading sample quotes - now using real SOAP response\n  // useEffect(() => {\n  //   if (currentPhase === 2) {\n  //     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n  //     const sampleQuotes = generateSampleSOAPQuotes();\n  //     setQuoteOptions(sampleQuotes);\n  //     setIsLoadingQuotes(false);\n  //   }\n  // }, [currentPhase]);\n\n  const generateQuoteOptions = async (): Promise<QuoteOption[]> => {\n    setIsLoadingQuotes(true);\n    setQuoteError('');\n\n    try {\n      console.log('🚀 Getting real quotes from Terracotta SOAP API...');\n      console.log('Form data:', formData);\n      \n      // Make a single SOAP request to get all available quotes\n      const terracottaRequest = TerracottaService.convertToTerracottaFormat(formData);\n      console.log('SOAP Request:', terracottaRequest);\n      \n      // Get quotes from Terracotta SOAP API\n      const response: TerracottaQuoteResponse = await terracottaService.provideQuotation(terracottaRequest);\n      console.log('SOAP Response:', response);\n      \n      console.log('📊 SOAP Response Message:', response.Message);\n      console.log('📊 Quote Results Count:', response.quoteResults?.length || 0);\n      \n      if (response.quoteResults && response.quoteResults.length > 0) {\n        console.log('📊 Processing SOAP results:', response.quoteResults);\n        // Convert SOAP response directly to QuoteOption format\n        const realQuotes: QuoteOption[] = response.quoteResults.map((result, index) => {\n          console.log(`Processing quote ${index + 1}:`, result);\n          return {\n            id: `soap-${result.QuoteID}`,\n            name: `${result.schemaName} - ${result.policytypeName || result.typePolicyName}`,\n            type: result.isBestBuy === 1 ? 'premium' : result.GrossPrice > 100 ? 'standard' : 'basic',\n            price: result.GrossPrice || 0,\n            coverage: {\n              medical: result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : '€2,000,000',\n              baggage: '€1,000', // This would ideally come from SOAP response\n              cancellation: '€2,000', // This would ideally come from SOAP response\n              activities: ['Standard activities', 'Adventure sports']\n            },\n            features: [\n              '24/7 Emergency Assistance',\n              'Medical Coverage',\n              'Trip Cancellation',\n              'Baggage Protection',\n              ...(result.isAnnual === 1 ? ['Annual Multi-Trip Coverage'] : []),\n              ...(result.isBestBuy === 1 ? ['Best Buy Option'] : []),\n              ...(result.maxDaysPerTrip > 0 ? [`Up to ${result.maxDaysPerTrip} days per trip`] : [])\n            ],\n            // Real SOAP response data\n            terracottaQuoteId: result.QuoteID,\n            schemaName: result.schemaName,\n            policytypeName: result.policytypeName,\n            policyTypeName: result.typePolicyName || result.policytypeName,\n            typePolicyName: result.typePolicyName || result.policytypeName,\n            summaryOfCoverUrl: result.SI,\n            policyWordingUrl: result.PW,\n            currency: result.currency,\n            ipt: result.IPT,\n            // Complete SOAP response fields\n            schemaID: result.SchemaID,\n            destinationCategory: result.destinationName,\n            tripType: formData.tripType,\n            residenceName: result.residenceName,\n            destinationName: result.destinationName,\n            packageName: result.packageName,\n            typePackageName: result.typePackageName,\n            isAnnual: result.isAnnual,\n            isBestBuy: result.isBestBuy,\n            isBestBuyText: result.isBestBuyText,\n            maxDaysPerTrip: result.maxDaysPerTrip,\n            coverLevel: result.coverLevel,\n            discount: result.Discount,\n            iconURL: result.IconURL,\n            helpFile: result.HelpFile,\n            policytypeShortName: result.policytypeShortName,\n            // Additional SOAP fields\n            keyFactsUrl: result.KF,\n            policyTypeID: result.PolicyTypeID,\n            destinationID: result.DestinationID,\n            packageID: result.PackageID,\n            screeningPremium: result.screeningPremium,\n            ipRate: result.IPTRate,\n            netUW: result.netUW,\n            wbComm: result.wbComm,\n            agentComm: result.agentComm,\n            SummaryCovers: result.SummaryCovers || []\n          };\n        });\n        \n        console.log(`✅ Received ${realQuotes.length} real quotes from Terracotta SOAP API`);\n        \n        // Sort by IPT (highest first) and take top 3\n        const sortedByIPT = realQuotes.sort((a, b) => {\n          const iptA = a.ipt || 0;\n          const iptB = b.ipt || 0;\n          return iptB - iptA; // Descending order (highest IPT first)\n        });\n        \n        const top3Quotes = sortedByIPT.slice(0, 3);\n        \n        // Sort the top 3 by price (ascending - least expensive to most expensive)\n        const sortedByPrice = top3Quotes.sort((a, b) => a.price - b.price);\n        \n        console.log(`📊 Filtered to top 3 quotes with highest IPT, sorted by price:`, sortedByPrice.map(q => ({ \n          name: q.name, \n          price: q.price,\n          ipt: q.ipt \n        })));\n        \n        setIsLoadingQuotes(false);\n        return sortedByPrice;\n      } else {\n        console.log('⚠️ No quotes in SOAP response, using sample data');\n        console.log('⚠️ Response message:', response.Message);\n        console.log('⚠️ This might be due to:');\n        console.log('   - Incorrect API credentials');\n        console.log('   - Invalid parameter values');\n        console.log('   - API restrictions or downtime');\n        console.log('   - Date range issues (past dates)');\n        setIsLoadingQuotes(false);\n        return generateSampleSOAPQuotes();\n      }\n      \n    } catch (error) {\n      console.error('❌ Error getting real SOAP quotes:', error);\n      setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');\n      setIsLoadingQuotes(false);\n      \n      // Fallback to sample SOAP response data\n      console.log('🔄 Using sample SOAP response data');\n      return generateSampleSOAPQuotes();\n    }\n  };\n\n  // Generate sample quotes using your SOAP response data\n  const generateSampleSOAPQuotes = (): QuoteOption[] => {\n    const allSampleQuotes: QuoteOption[] = [\n      {\n        id: 'soap-12345',\n        name: 'TravelSafe Basic 2024 - Single Trip Travel Insurance',\n        type: 'premium' as const, // Best buy\n        price: 72.60,\n        coverage: {\n          medical: '€5,000,000', // Cover level 5\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Best Buy Option',\n          'Up to 90 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12345\n        terracottaQuoteId: '12345',\n        schemaName: 'TravelSafe Basic 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12345.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12345.pdf',\n        currency: 'EUR',\n        ipt: 12.60,\n        // Complete SOAP response fields\n        schemaID: 683,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Standard',\n        typePackageName: 'Standard Package',\n        isAnnual: 0,\n        isBestBuy: 1,\n        isBestBuyText: 'Best Value Option',\n        maxDaysPerTrip: 90,\n        coverLevel: 5,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/basic.png',\n        helpFile: 'https://terracotta.example.com/help/12345.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12345.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 1,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 60.00,\n        wbComm: 5.40,\n        agentComm: 7.20\n      },\n      {\n        id: 'soap-12346',\n        name: 'TravelSafe Premium 2024 - Single Trip Travel Insurance',\n        type: 'standard' as const,\n        price: 108.90,\n        coverage: {\n          medical: '€10,000,000', // Cover level 10\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Up to 120 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12346\n        terracottaQuoteId: '12346',\n        schemaName: 'TravelSafe Premium 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12346.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12346.pdf',\n        currency: 'EUR',\n        ipt: 18.90,\n        // Complete SOAP response fields\n        schemaID: 717,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Premium',\n        typePackageName: 'Premium Package',\n        isAnnual: 0,\n        isBestBuy: 0,\n        isBestBuyText: '',\n        maxDaysPerTrip: 120,\n        coverLevel: 10,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/premium.png',\n        helpFile: 'https://terracotta.example.com/help/12346.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12346.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 2,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 90.00,\n        wbComm: 8.10,\n        agentComm: 10.80\n      }\n    ];\n    \n    // Sort by IPT (highest first) and take top 3\n    const sortedByIPT = allSampleQuotes.sort((a, b) => {\n      const iptA = a.ipt || 0;\n      const iptB = b.ipt || 0;\n      return iptB - iptA; // Descending order (highest IPT first)\n    });\n    \n    const top3 = sortedByIPT.slice(0, 3);\n    \n    // Sort the top 3 by price (ascending - least expensive to most expensive)\n    return top3.sort((a, b) => a.price - b.price);\n  };\n\n  // Helper function to calculate coverage levels using real SOAP data\n  const calculateRealCoverageLevels = (result: any, destination: string, tripType: string) => {\n    // Use real data from SOAP response when available, fallback to calculated values\n    const baseMedical = result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : \n                       tripType === 'annual' ? '€5,000,000' : '€2,000,000';\n    \n    const baseBaggage = '€1,000'; // This would ideally come from SOAP response\n    const baseCancellation = '€2,000'; // This would ideally come from SOAP response\n    \n    // Enhance coverage based on destination category and SOAP data\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n    \n    // Use SOAP cover level if available\n    if (result.coverLevel > 0) {\n      medicalMultiplier = 1; // Use the real cover level from SOAP\n    }\n    \n    return {\n      medical: result.coverLevel > 0 ? baseMedical : \n               `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to generate features using real SOAP data\n  const generateFeaturesFromSOAPData = (result: any, destination: string, tripType: string): string[] => {\n    const baseFeatures = [\n      '24/7 Emergency Assistance',\n      'Medical Coverage',\n      'Trip Cancellation',\n      'Baggage Protection'\n    ];\n    \n    const soapFeatures: string[] = [];\n    const destinationFeatures: string[] = [];\n    \n    // Add features based on SOAP response data\n    if (result.isAnnual === 1) {\n      soapFeatures.push('Annual Multi-Trip Coverage', 'Unlimited Trips', 'Annual Policy Benefits');\n    }\n    \n    if (result.isBestBuy === 1) {\n      soapFeatures.push('Best Buy Policy', result.isBestBuyText || 'Recommended Option');\n    }\n    \n    if (result.maxDaysPerTrip > 0) {\n      soapFeatures.push(`Up to ${result.maxDaysPerTrip} days per trip`);\n    }\n    \n    if (result.discount > 0) {\n      soapFeatures.push(`${result.discount}% Discount Applied`);\n    }\n    \n    // Add destination-specific features\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    \n    if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    \n    return [...baseFeatures, ...soapFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to calculate coverage levels based on destination and trip type (fallback)\n  const calculateCoverageLevels = (destination: string, tripType: string, price: number) => {\n    const baseMedical = tripType === 'annual' ? '€5,000,000' : tripType === 'longstay' ? '€3,000,000' : '€2,000,000';\n    const baseBaggage = '€1,000';\n    const baseCancellation = '€2,000';\n    \n    // Enhance coverage based on destination category\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n    \n    // Enhance based on price level\n    if (price > 200) {\n      medicalMultiplier *= 2;\n      baggageMultiplier *= 2;\n      cancellationMultiplier *= 2;\n    } else if (price > 100) {\n      medicalMultiplier *= 1.5;\n      baggageMultiplier *= 1.5;\n      cancellationMultiplier *= 1.5;\n    }\n    \n    return {\n      medical: `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to determine quote type based on price and index\n  const determineQuoteType = (price: number, index: number): 'basic' | 'standard' | 'premium' => {\n    if (price < 50) return 'basic';\n    if (price < 150) return 'standard';\n    return 'premium';\n  };\n\n  // Helper function to generate features based on destination and trip type\n  const generateFeaturesForDestination = (destination: string, tripType: string): string[] => {\n    const baseFeatures = [\n      '24/7 Emergency Assistance',\n      'Medical Coverage',\n      'Trip Cancellation',\n      'Baggage Protection'\n    ];\n    \n    const destinationFeatures: string[] = [];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    \n    if (tripType === 'annual') {\n      destinationFeatures.push('Multiple Trip Coverage', 'Annual Policy Benefits', 'Unlimited Trips');\n    } else if (tripType === 'longstay') {\n      destinationFeatures.push('Extended Stay Coverage', 'Long Term Medical', 'Extended Baggage Protection', 'Long Stay Benefits');\n    } else if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    \n    return [...baseFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to generate activities based on destination\n  const generateActivitiesForDestination = (destination: string): string[] => {\n    const baseActivities = ['Standard activities'];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      return ['Standard activities', 'Adventure sports', 'Extreme sports', 'Water sports', 'Winter sports'];\n    } else if (destination.toLowerCase().includes('europe')) {\n      return ['Standard activities', 'Adventure sports', 'Winter sports'];\n    }\n    \n    return baseActivities;\n  };\n\n  // Enhanced mock quote generation that simulates Terracotta-style data\n  const generateEnhancedMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    // Generate multiple mock quotes based on available schemas\n    const mockQuotes: QuoteOption[] = [];\n    \n    // Create quotes for each available schema if we have them, otherwise use defaults\n    const schemasToUse = availableProducts.length > 0 ? availableProducts : [\n      { SchemaID: 683, SchemaName: 'TravelSafe Basic' },\n      { SchemaID: 717, SchemaName: 'TravelSafe Premium' }\n    ];\n\n    schemasToUse.forEach((schema, index) => {\n      const price = Math.round((basePrice + (days * dailyRate) + (index * 30)) * formData.numberOfTravelers * tripMultiplier);\n      const coverage = calculateCoverageLevels(formData.destination, formData.tripType, price);\n      const features = generateFeaturesForDestination(formData.destination, formData.tripType);\n      const quoteType = determineQuoteType(price, index);\n\n      mockQuotes.push({\n        id: `mock-${schema.SchemaID}-${index}`,\n        name: `${schema.SchemaName} - ${formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip'}`,\n        type: quoteType,\n        price: price,\n        coverage: coverage,\n        features: features,\n        // Terracotta specific fields (mock)\n        terracottaQuoteId: `mock-${schema.SchemaID}-${Date.now()}`,\n        schemaName: schema.SchemaName,\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/mock.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/mock.pdf',\n        currency: 'EUR',\n        ipt: Math.round(price * 0.21), // 21% IPT\n        // Additional metadata\n        schemaID: schema.SchemaID,\n        destinationCategory: formData.destination,\n        tripType: formData.tripType\n      });\n    });\n\n    return mockQuotes;\n  };\n\n  // Legacy mock quotes (kept for backward compatibility)\n  const generateLegacyMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    const options: QuoteOption[] = [\n      {\n        id: 'terracotta-basic',\n        name: 'Terracotta TravelSafe Basic',\n        type: 'basic',\n        price: Math.round((basePrice + (days * dailyRate)) * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€5,000,000' : '€2,000,000',\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities']\n        },\n        features: [\n          'Emergency Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          '24/7 Assistance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-001`,\n        schemaName: 'TravelSafe Basic',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/basic.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/basic.pdf',\n        currency: 'EUR',\n        ipt: 15.50\n      },\n      {\n        id: 'terracotta-standard',\n        name: 'Terracotta TravelSafe Standard',\n        type: 'standard',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.3 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€5,000,000',\n          baggage: '€2,500',\n          cancellation: '€5,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          'Enhanced Medical Coverage',\n          'Trip Cancellation & Curtailment',\n          'Enhanced Baggage Protection',\n          'Adventure Sports Coverage',\n          '24/7 Assistance',\n          'Travel Delay Compensation'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-002`,\n        schemaName: 'TravelSafe Standard',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/standard.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/standard.pdf',\n        currency: 'EUR',\n        ipt: 22.75\n      },\n      {\n        id: 'terracotta-premium',\n        name: 'Terracotta TravelSafe Premium',\n        type: 'premium',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.8 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€10,000,000',\n          baggage: '€5,000',\n          cancellation: '€10,000',\n          activities: ['All activities', 'Extreme sports', 'Winter sports']\n        },\n        features: [\n          'Maximum Medical Coverage',\n          'Comprehensive Trip Protection',\n          'Premium Baggage Coverage',\n          'All Sports & Activities',\n          '24/7 VIP Assistance',\n          'Travel Delay & Missed Connections',\n          'Personal Liability Coverage',\n          'Emergency Cash Advance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-003`,\n        schemaName: 'TravelSafe Premium',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/premium.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/premium.pdf',\n        currency: 'EUR',\n        ipt: 35.00\n      }\n    ];\n\n    return options;\n  };\n\n  // Custom Date Picker Component\n  const CustomDatePicker: React.FC<{\n    id: string;\n    value: string;\n    onChange: (value: string) => void;\n    placeholder: string;\n    required?: boolean;\n    minDate?: string; // ISO date string for minimum selectable date\n  }> = ({ id, value, onChange, placeholder, required, minDate }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentDate, setCurrentDate] = useState(() => {\n      // Initialize with selected date if available, otherwise current date\n      return value ? new Date(value) : new Date();\n    });\n    const pickerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (pickerRef.current && !pickerRef.current.contains(event.target as Node)) {\n          setIsOpen(false);\n        }\n      };\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n      }\n\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [isOpen]);\n\n    // Update current date when value changes to show the correct month\n    useEffect(() => {\n      if (value) {\n        setCurrentDate(new Date(value));\n      }\n    }, [value]);\n\n    // Helper function to check if a date is valid (not in past and not before minDate)\n    const isDateValid = (date: Date): boolean => {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n      \n      // Reset the input date to start of day for accurate comparison\n      const inputDate = new Date(date);\n      inputDate.setHours(0, 0, 0, 0);\n      \n      // Check if date is in the past\n      if (inputDate < today) {\n        return false;\n      }\n      \n      // Check if date is before minimum date\n      if (minDate) {\n        const minDateObj = new Date(minDate);\n        minDateObj.setHours(0, 0, 0, 0);\n        if (inputDate < minDateObj) {\n          return false;\n        }\n      }\n      \n      return true;\n    };\n\n    const generateCalendar = () => {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const days = [];\n      \n      // Add empty cells for days before the first day of the month\n      for (let i = 0; i < startingDayOfWeek; i++) {\n        days.push(<div key={`empty-${i}`} className=\"calendar-day empty\"></div>);\n      }\n\n      // Add days of the month\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = new Date(year, month, day);\n        // Create ISO string manually to avoid timezone issues\n        const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        const isSelected = value === dateString;\n        const isToday = new Date().toDateString() === date.toDateString();\n        const isValid = isDateValid(date);\n\n        days.push(\n          <div\n            key={day}\n            className={`calendar-day ${isSelected ? 'selected' : ''} ${isToday ? 'today' : ''} ${!isValid ? 'disabled' : ''}`}\n            onClick={() => {\n              if (isValid) {\n                onChange(dateString);\n                setIsOpen(false);\n              }\n            }}\n            style={{\n              cursor: isValid ? 'pointer' : 'not-allowed',\n              opacity: isValid ? 1 : 0.4\n            }}\n          >\n            {day}\n          </div>\n        );\n      }\n\n      return days;\n    };\n\n    const navigateMonth = (direction: number) => {\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n    };\n\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    return (\n      <div className=\"custom-date-picker\" ref={pickerRef}>\n        <div className=\"date-input-wrapper\">\n          <input\n            type=\"text\"\n            id={id}\n            value={value ? formatDateToEuropean(value) : ''}\n            onChange={(e) => {\n              const formattedValue = formatDateInput(e.target.value);\n              const isoDate = formattedValue.length === 10 ? convertToISO(formattedValue) : '';\n              \n              // Validate that the date is valid (not in past and not before minDate)\n              if (isoDate) {\n                const inputDate = new Date(isoDate);\n                if (!isDateValid(inputDate)) {\n                  // Don't update the value if it's an invalid date\n                  return;\n                }\n              }\n              \n              onChange(isoDate);\n            }}\n            placeholder={placeholder}\n            title={minDate ? \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\" : \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\"\n            }\n            pattern=\"\\d{2}/\\d{2}/\\d{4}\"\n            maxLength={10}\n            required={required}\n          />\n          <span \n            className=\"date-icon clickable\" \n            onClick={() => setIsOpen(!isOpen)}\n            title=\"Open calendar\"\n          >\n            📅\n          </span>\n        </div>\n        \n        {isOpen && (\n          <div className=\"calendar-popup\">\n            <div className=\"calendar-header\">\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(-1)}\n              >\n                ‹\n              </button>\n              <span className=\"calendar-month-year\">\n                {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\n              </span>\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(1)}\n              >\n                ›\n              </button>\n            </div>\n            <div className=\"calendar-weekdays\">\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                <div key={day} className=\"calendar-weekday\">{day}</div>\n              ))}\n            </div>\n            <div className=\"calendar-days\">\n              {generateCalendar()}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleInputChange = (field: string, value: string | number) => {\n    setFormData(prev => {\n      const newData = {\n        ...prev,\n        [field]: value\n      };\n      \n      // If start date is changed, clear end date if it's now invalid\n      if (field === 'startDate' && value && prev.endDate) {\n        const startDate = new Date(value as string);\n        const endDate = new Date(prev.endDate);\n        startDate.setDate(startDate.getDate() + 1); // Add 1 day to start date\n        \n        // If end date is before or equal to start date, clear it\n        if (endDate <= startDate) {\n          newData.endDate = '';\n        }\n      }\n      \n      return newData;\n    });\n  };\n\n  const handleTravelerChange = (index: number, field: keyof TravelerInfo, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      travelers: prev.travelers.map((traveler, i) => \n        i === index ? { ...traveler, [field]: value } : traveler\n      )\n    }));\n  };\n\n  const handleNumberOfTravelersChange = (count: number) => {\n    setFormData(prev => {\n      const travelers = [...prev.travelers];\n      \n      if (count > travelers.length) {\n        // Add new travelers\n        for (let i = travelers.length; i < count; i++) {\n          travelers.push({\n            firstName: '',\n            lastName: '',\n            age: '',\n            email: '',\n            phone: '',\n            vaxId: '',\n            nationality: ''\n          });\n        }\n      } else if (count < travelers.length) {\n        // Remove travelers\n        travelers.splice(count);\n      }\n      \n      return {\n        ...prev,\n        numberOfTravelers: count,\n        travelers\n      };\n    });\n  };\n\n  const handleBillingAddressChange = (field: keyof QuoteFormData['billingAddress'], value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      billingAddress: {\n        ...prev.billingAddress,\n        [field]: value\n      }\n    }));\n  };\n\n  // Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\n  const convertToISO = (ddmmyyyy: string): string => {\n    if (!ddmmyyyy || ddmmyyyy.length !== 10) return '';\n    const [day, month, year] = ddmmyyyy.split('/');\n    // Create date in local timezone to avoid timezone issues\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n    return date.toISOString().split('T')[0];\n  };\n\n  // Helper function to format input as DD/MM/YYYY\n  const formatDateInput = (value: string): string => {\n    // Remove all non-digits\n    const digits = value.replace(/\\D/g, '');\n    \n    // Format as DD/MM/YYYY\n    if (digits.length >= 8) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4, 8)}`;\n    } else if (digits.length >= 4) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4)}`;\n    } else if (digits.length >= 2) {\n      return `${digits.slice(0, 2)}/${digits.slice(2)}`;\n    }\n    return digits;\n  };\n\n  const nextPhase = async () => {\n    if (currentPhase === 1) {\n      // Generate quotes when moving from phase 1 to 2\n      try {\n        console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');\n        console.log('📋 Current Form Data:', JSON.stringify(formData, null, 2));\n        \n        const options = await generateQuoteOptions();\n        \n        console.log('✅ Quote options received:', options);\n        console.log('📊 Number of quotes:', options.length);\n        \n        setQuoteOptions(options);\n        \n        // Automatically pre-select the Essential plan\n        const essentialPlan = options.find(option => \n          option.name?.toLowerCase().includes('essential') || \n          option.policytypeName?.toLowerCase().includes('essential')\n        );\n        if (essentialPlan) {\n          console.log('✅ Auto-selected Essential plan:', essentialPlan);\n          setFormData(prev => ({\n            ...prev,\n            selectedQuote: essentialPlan\n          }));\n        } else {\n          console.log('⚠️ No Essential plan found, selecting first available quote');\n          if (options.length > 0) {\n            setFormData(prev => ({\n              ...prev,\n              selectedQuote: options[0]\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('❌ CRITICAL ERROR generating quotes:', error);\n        console.error('Error details:', error instanceof Error ? error.message : String(error));\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n        setQuoteError('Failed to generate quotes. Please try again.');\n        return; // Don't proceed to next phase if quotes failed\n      }\n    }\n\n    if (currentPhase === 5) {\n      // Fetch screening questions when moving from phase 5 to 6\n      if (formData.selectedQuote?.terracottaQuoteId) {\n        try {\n          const screeningResponse = await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);\n          setScreeningQuestions(screeningResponse.screeningQuestions || []);\n        } catch (error) {\n          console.error('Error fetching screening questions:', error);\n          // Use mock screening questions to demonstrate the feature\n          setScreeningQuestions([\n            {\n              questionNumber: 1,\n              question: \"Do you have any pre-existing medical conditions that require ongoing treatment?\",\n              yesMessage: \"Please note that pre-existing conditions may not be covered under this policy. Additional medical screening may be required.\",\n              noMessage: \"Thank you. No additional medical information is required.\",\n              yesAction: \"MEDICAL_SCREENING\",\n              noAction: \"CONTINUE\",\n              yesActionText: \"Medical screening required\",\n              noActionText: \"Continue with application\"\n            },\n            {\n              questionNumber: 2,\n              question: \"Are you currently taking any prescribed medication?\",\n              yesMessage: \"Please ensure you have sufficient medication for your trip and carry a copy of your prescription.\",\n              noMessage: \"Thank you. No additional medication information is required.\",\n              yesAction: \"MEDICATION_CHECK\",\n              noAction: \"CONTINUE\",\n              yesActionText: \"Medication verification required\",\n              noActionText: \"Continue with application\"\n            }\n          ]);\n        }\n      }\n    }\n    \n    if (currentPhase < 8) {\n      setCurrentPhase((prev) => (prev + 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const prevPhase = () => {\n    if (currentPhase > 1) {\n      setCurrentPhase((prev) => (prev - 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const selectQuote = (quote: QuoteOption) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedQuote: quote\n    }));\n  };\n\n  const addAdditionalPolicy = (policy: AdditionalPolicy) => {\n    setFormData(prev => ({\n      ...prev,\n      additionalPolicies: [...prev.additionalPolicies, policy]\n    }));\n  };\n\n  const removeAdditionalPolicy = (policyId: string) => {\n    setFormData(prev => ({\n      ...prev,\n      additionalPolicies: prev.additionalPolicies.filter(p => p.id !== policyId)\n    }));\n  };\n\n  const calculateTotalPrice = (): number => {\n    const basePrice = formData.selectedQuote?.price || 0;\n    const additionalPrice = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n    return basePrice + additionalPrice;\n  };\n\n  const generatePolicyPDF = async () => {\n    await generatePDF(formData, calculateTotalPrice, formatDateToEuropean, policyNumber || `TI-${Date.now().toString().slice(-8)}`);\n  };\n\n  const downloadPolicyPDF = () => {\n    generatePolicyPDF();\n  };\n\n  const processPayment = async () => {\n    setIsProcessing(true);\n    \n    try {\n      // First save the quote to database\n      const quoteData = {\n        destination: formData.destination,\n        countryOfResidence: formData.countryOfResidence,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        tripType: formData.tripType,\n        numberOfTravelers: formData.numberOfTravelers,\n        travelers: formData.travelers,\n        selectedQuote: formData.selectedQuote,\n        additionalPolicies: formData.additionalPolicies,\n        totalAmount: calculateTotalPrice()\n      };\n\n      // console.log('Saving quote to database...', quoteData);\n      // console.log('Quote data JSON string:', JSON.stringify(quoteData));\n      const quoteResponse = await createQuote(quoteData);\n      \n      if (quoteResponse.status === 'success' && quoteResponse.data) {\n        const quoteId = quoteResponse.data.quoteId;\n        \n        // Convert screening answers to Terracotta format\n        const terracottaScreeningAnswers = Object.entries(screeningAnswers).map(([questionNumber, answer]) => ({\n          questionNumber: parseInt(questionNumber),\n          answer: answer as 'yes' | 'no'\n        }));\n\n        // Save policy details with Terracotta\n        if (formData.selectedQuote?.terracottaQuoteId) {\n          try {\n            const savePolicyResponse = await terracottaService.savePolicyDetails({\n              userID: '4072',\n              userCode: '111427',\n              quoteID: formData.selectedQuote.terracottaQuoteId,\n              screeningQuestionAnswers: terracottaScreeningAnswers\n            });\n\n            if (savePolicyResponse.policySaved === 'Yes') {\n              setPolicyNumber(savePolicyResponse.policyID);\n              setIsProcessing(false);\n              nextPhase(); // Move to documents phase\n              return;\n            } else {\n              throw new Error(savePolicyResponse.Message || 'Failed to save policy with Terracotta');\n            }\n          } catch (terracottaError) {\n            console.error('Terracotta policy save error:', terracottaError);\n            // Fall through to regular payment processing\n          }\n        }\n        \n        // Fallback to regular payment processing if Terracotta fails\n        const paymentData = {\n          quoteId: quoteId,\n          paymentMethod: formData.paymentMethod,\n          cardNumber: formData.cardNumber, // Note: In production, this should be tokenized\n          expiryDate: formData.expiryDate,\n          cvv: formData.cvv,\n          billingAddress: formData.billingAddress,\n          amount: calculateTotalPrice()\n        };\n\n        const paymentResponse = await apiProcessPayment(paymentData);\n        \n        if (paymentResponse.status === 'success') {\n          if (paymentResponse.data?.policyNumber) {\n            setPolicyNumber(paymentResponse.data.policyNumber);\n          }\n          setIsProcessing(false);\n          nextPhase(); // Move to documents phase\n        } else {\n          throw new Error(paymentResponse.message || 'Payment failed');\n        }\n      } else {\n        throw new Error(quoteResponse.message || 'Failed to save quote');\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      setIsProcessing(false);\n      alert('Payment processing failed. Please try again. Error: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  };\n\n  const isPhaseValid = (phase: WizardPhase): boolean => {\n    switch (phase) {\n      case 1:\n        return !!(\n          formData.destination &&\n          formData.startDate &&\n          formData.endDate &&\n          formData.tripType &&\n          formData.countryOfResidence &&\n          formData.travelers.every(t => t.firstName && t.lastName && t.age && t.email)\n        );\n      case 2:\n        return !!formData.selectedQuote;\n      case 3:\n        return true; // Additional policies phase is always valid (optional)\n      case 4:\n        return true; // Summary phase is always valid\n      case 5:\n        return true; // Confirmation phase is always valid\n      case 6:\n        // Screening questions phase - all questions must be answered\n        return screeningQuestions.length === 0 || Object.keys(screeningAnswers).length === screeningQuestions.length;\n      case 7:\n        const paymentValid = !!(\n          formData.cardNumber && \n          formData.expiryDate && \n          formData.cvv && \n          formData.billingAddress.street && \n          formData.billingAddress.city && \n          formData.billingAddress.postalCode && \n          formData.billingAddress.country\n        );\n        return paymentValid;\n      case 8:\n        return true; // Documents phase is always valid\n      default:\n        return false;\n    }\n  };\n\n  const renderPhase1 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Trip Details & Traveler Information</h2>\n      \n      <div className=\"form-section\">\n        <h3>Trip Details</h3>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"tripType\">\n            Trip Type \n            <span style={{ fontSize: '0.8em', color: '#666', marginLeft: '5px' }}>\n              {isLoadingPolicyTypeDestinations ? '(Loading...)' : `(${availablePolicyTypes.length} types available)`}\n            </span>\n          </label>\n          <select\n            id=\"tripType\"\n            value={formData.tripType}\n            onChange={(e) => handleInputChange('tripType', e.target.value)}\n            required\n            disabled={isLoadingPolicyTypeDestinations}\n          >\n            <option value=\"\">\n              {isLoadingPolicyTypeDestinations ? 'Loading trip types...' : 'Select trip type'}\n            </option>\n            {availablePolicyTypes.map((policyType) => {\n              // Map policy type names to trip type values\n              let tripTypeValue = 'single';\n              const name = policyType.TypePolicyName.toLowerCase();\n              if (name.includes('annual')) {\n                tripTypeValue = 'annual';\n              } else if (name.includes('comprehensive')) {\n                tripTypeValue = 'comprehensive';\n              } else if (name.includes('longstay') || name.includes('long stay')) {\n                tripTypeValue = 'longstay';\n              }\n              \n              return (\n                <option key={policyType.TypePolicyID} value={tripTypeValue}>\n                  {policyType.TypePolicyName}\n                </option>\n              );\n            })}\n            {/* Fallback options if no policy types loaded */}\n            {!isLoadingPolicyTypeDestinations && availablePolicyTypes.length === 0 && (\n              <>\n                <option value=\"single\">Regular Single Trip Insurance</option>\n                <option value=\"annual\">Annual Multi-Trip Travel Insurance</option>\n                <option value=\"comprehensive\">Comprehensive Single Trip Insurance</option>\n                <option value=\"longstay\">Long Stay Travel Insurance</option>\n              </>\n            )}\n          </select>\n        </div>\n        \n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"countryOfResidence\">Country of Residence</label>\n            <select\n              id=\"countryOfResidence\"\n              value={formData.countryOfResidence}\n              onChange={(e) => handleInputChange('countryOfResidence', e.target.value)}\n              required\n              disabled={isLoadingCountriesOfResidence}\n            >\n              <option value=\"\">\n                {isLoadingCountriesOfResidence ? 'Loading countries...' : 'Select your country of residence'}\n              </option>\n              {countriesOfResidence.map((country) => (\n                <option key={country.country_id} value={country.country_name}>\n                  {country.country_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"destination\">\n              Destination Category \n              <span \n                className=\"help-icon\" \n                onClick={() => setShowHelpPopup(true)}\n                title=\"Click to see all countries by category\"\n              >\n                (?)\n              </span>\n            </label>\n            <select\n              id=\"destination\"\n              value={formData.destination}\n              onChange={(e) => handleInputChange('destination', e.target.value)}\n              required\n              disabled={isLoadingCategories}\n            >\n              <option value=\"\">\n                {isLoadingCategories ? 'Loading categories...' : 'Select destination category'}\n              </option>\n              {destinationCategories.map((category) => (\n                <option key={category} value={category}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"startDate\">Departure Date <span className=\"date-format-hint\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"startDate\"\n              value={formData.startDate}\n              onChange={(value) => handleInputChange('startDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"endDate\">Return Date <span className=\"date-format-hint\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"endDate\"\n              value={formData.endDate}\n              onChange={(value) => handleInputChange('endDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n              minDate={formData.startDate ? (() => {\n                // Set minimum date to start date + 1 day\n                const startDate = new Date(formData.startDate);\n                startDate.setDate(startDate.getDate() + 1);\n                return startDate.toISOString().split('T')[0];\n              })() : undefined}\n            />\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"numberOfTravelers\">Number of Travelers</label>\n          <select\n            id=\"numberOfTravelers\"\n            value={formData.numberOfTravelers}\n            onChange={(e) => handleNumberOfTravelersChange(parseInt(e.target.value))}\n          >\n            {[1,2,3,4,5,6,7,8].map(num => (\n              <option key={num} value={num}>{num} Traveler{num > 1 ? 's' : ''}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"form-section\">\n        <h3>Traveler Information</h3>\n        {formData.travelers.map((traveler, index) => (\n          <div key={index} className=\"traveler-info\">\n            <h4>Traveler {index + 1}</h4>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`title-${index}`}>Title</label>\n                <select\n                  id={`title-${index}`}\n                  value={traveler.title || 'Mr'}\n                  onChange={(e) => handleTravelerChange(index, 'title', e.target.value)}\n                  title=\"Select the traveler's title\"\n                >\n                  <option value=\"Mr\">Mr</option>\n                  <option value=\"Mrs\">Mrs</option>\n                  <option value=\"Miss\">Miss</option>\n                  <option value=\"Ms\">Ms</option>\n                  <option value=\"Dr\">Dr</option>\n                  <option value=\"Prof\">Prof</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`firstName-${index}`}>First Name</label>\n                <input\n                  type=\"text\"\n                  id={`firstName-${index}`}\n                  value={traveler.firstName}\n                  onChange={(e) => handleTravelerChange(index, 'firstName', e.target.value)}\n                  placeholder=\"Enter first name\"\n                  title=\"Enter the traveler's first name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`lastName-${index}`}>Last Name</label>\n                <input\n                  type=\"text\"\n                  id={`lastName-${index}`}\n                  value={traveler.lastName}\n                  onChange={(e) => handleTravelerChange(index, 'lastName', e.target.value)}\n                  placeholder=\"Enter last name\"\n                  title=\"Enter the traveler's last name\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`dateOfBirth-${index}`}>Date of Birth</label>\n                <input\n                  type=\"date\"\n                  id={`dateOfBirth-${index}`}\n                  value={traveler.dateOfBirth || ''}\n                  onChange={(e) => {\n                    const dateOfBirth = e.target.value;\n                    // Auto-calculate age from date of birth\n                    if (dateOfBirth) {\n                      const age = calculateAgeFromDateOfBirth(dateOfBirth);\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                      handleTravelerChange(index, 'age', age.toString());\n                    } else {\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                    }\n                  }}\n                  title=\"Enter the traveler's date of birth (age will be calculated automatically)\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`age-${index}`}>Age (Auto-calculated)</label>\n                <input\n                  type=\"number\"\n                  id={`age-${index}`}\n                  value={traveler.age}\n                  onChange={(e) => handleTravelerChange(index, 'age', e.target.value)}\n                  placeholder=\"Enter age\"\n                  title=\"Age will be calculated from date of birth, but you can override it manually\"\n                  min=\"1\"\n                  max=\"120\"\n                  required\n                  readOnly={!!traveler.dateOfBirth}\n                  style={{ backgroundColor: traveler.dateOfBirth ? '#f5f5f5' : 'white' }}\n                />\n                {traveler.dateOfBirth && (\n                  <small style={{ color: '#666', fontSize: '0.8em' }}>\n                    Age calculated from date of birth\n                  </small>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`email-${index}`}>Email</label>\n                <input\n                  type=\"email\"\n                  id={`email-${index}`}\n                  value={traveler.email}\n                  onChange={(e) => handleTravelerChange(index, 'email', e.target.value)}\n                  placeholder=\"Enter email address\"\n                  title=\"Enter the traveler's email address\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`phone-${index}`}>Phone</label>\n                <input\n                  type=\"tel\"\n                  id={`phone-${index}`}\n                  value={traveler.phone}\n                  onChange={(e) => handleTravelerChange(index, 'phone', e.target.value)}\n                  placeholder=\"+30 123 456 7890\"\n                  title=\"Enter the traveler's phone number\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor={`vaxId-${index}`}>VAX ID</label>\n              <input\n                type=\"text\"\n                id={`vaxId-${index}`}\n                value={traveler.vaxId}\n                onChange={(e) => handleTravelerChange(index, 'vaxId', e.target.value)}\n                placeholder=\"Enter VAX ID\"\n                title=\"Enter the traveler's VAX ID (optional)\"\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderPhase2 = () => (\n    <div className=\"wizard-phase\">\n      <div style={{ textAlign: 'center', marginBottom: '40px' }}>\n        <h2 style={{ \n          fontSize: '2.2em', \n          color: '#333',\n          margin: '0 0 10px 0',\n          fontWeight: 'bold',\n          fontFamily: 'sans-serif'\n        }}>\n          Choose Your Insurance Plan\n        </h2>\n        <p style={{ \n          fontSize: '1.1em', \n          color: '#666',\n          margin: '0',\n          fontWeight: '400'\n        }}>\n          Select the coverage that best fits your travel needs.\n        </p>\n      </div>\n      \n      \n      {isLoadingQuotes && (\n        <div className=\"loading-message\">\n          <p>Loading insurance quotes from Terracotta...</p>\n        </div>\n      )}\n      \n      {quoteError && (\n        <div className=\"error-message\">\n          <p>⚠️ {quoteError}</p>\n          <p>Using fallback quotes for demonstration.</p>\n        </div>\n      )}\n      \n      <div className=\"quote-options\" style={{ \n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        gap: '20px',\n        marginTop: '20px',\n        overflowX: 'auto',\n        padding: '20px 0',\n        maxWidth: '100%'\n      }}>\n        {quoteOptions.length > 0 ? quoteOptions.map((option) => (\n          <div \n            key={option.id} \n            className={`quote-option ${formData.selectedQuote?.id === option.id ? 'selected' : ''}`}\n            onClick={() => selectQuote(option)}\n            style={{\n              background: 'white',\n              border: formData.selectedQuote?.id === option.id ? '2px solid #1976d2' : '1px solid #e0e0e0',\n              borderRadius: '8px',\n              padding: '24px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              boxShadow: formData.selectedQuote?.id === option.id \n                ? '0 4px 12px rgba(25, 118, 210, 0.15)'\n                : '0 2px 8px rgba(0,0,0,0.1)',\n              position: 'relative',\n              minWidth: '320px',\n              maxWidth: '320px',\n              flexShrink: 0\n            }}\n            onMouseEnter={(e) => {\n              if (formData.selectedQuote?.id !== option.id) {\n                e.currentTarget.style.boxShadow = '0 4px 16px rgba(0,0,0,0.15)';\n                e.currentTarget.style.borderColor = '#1976d2';\n              }\n            }}\n            onMouseLeave={(e) => {\n              if (formData.selectedQuote?.id !== option.id) {\n                e.currentTarget.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n                e.currentTarget.style.borderColor = '#e0e0e0';\n              }\n            }}\n          >\n            {/* Plan Header */}\n            <div style={{ marginBottom: '20px' }}>\n              <h3 style={{ \n                margin: '0 0 8px 0', \n                fontSize: '1.3em', \n                color: '#1976d2',\n                fontWeight: 'bold'\n              }}>\n                {option.policytypeName || option.policyTypeName || option.name}\n              </h3>\n              <p style={{ \n                margin: '0 0 12px 0', \n                fontSize: '0.9em', \n                color: '#666'\n              }}>\n                {option.packageName || option.typePackageName}\n              </p>\n              <div style={{ marginBottom: '16px' }}>\n                <div style={{ \n                  fontSize: '2em', \n                  fontWeight: 'bold', \n                  color: '#333',\n                  lineHeight: '1'\n                }}>\n                  {option.currency || '€'}{option.price}\n                </div>\n                <div style={{ \n                  fontSize: '0.9em', \n                  color: '#666',\n                  marginTop: '4px'\n                }}>\n                  per trip\n                </div>\n              </div>\n            </div>\n            \n            {/* Best Buy Text */}\n            {option.isBestBuy === 1 && option.isBestBuyText && (\n              <div style={{ \n                marginBottom: '20px',\n                background: '#e8f5e8',\n                border: '1px solid #4caf50',\n                borderRadius: '6px',\n                padding: '8px',\n                fontSize: '0.85em',\n                color: '#2e7d32',\n                textAlign: 'center',\n                fontWeight: 'bold'\n              }}>\n                ✨ {option.isBestBuyText} ✨\n              </div>\n            )}\n            \n            {/* Summary Covers */}\n            {option.SummaryCovers && option.SummaryCovers.length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ \n                  fontSize: '1em', \n                  fontWeight: 'bold', \n                  marginBottom: '12px',\n                  color: '#333'\n                }}>Coverage Details</h4>\n                {option.SummaryCovers.map((cover, index) => (\n                  <div key={index} style={{ \n                    marginBottom: '10px',\n                    padding: '8px',\n                    background: '#f8f9fa',\n                    borderRadius: '4px',\n                    fontSize: '0.85em'\n                  }}>\n                    <div style={{ \n                      fontWeight: 'bold', \n                      color: '#1976d2',\n                      marginBottom: '4px'\n                    }}>\n                      {cover.name}\n                    </div>\n                    <div style={{ fontSize: '0.9em' }}>\n                      <span><strong>Limit:</strong> {cover.Limit}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Action Button */}\n            <button \n              style={{\n                width: '100%',\n                padding: '12px',\n                backgroundColor: formData.selectedQuote?.id === option.id ? '#ff6b35' : '#1976d2',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                fontSize: '0.95em',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n                transition: 'background-color 0.3s ease',\n                textTransform: 'uppercase'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = formData.selectedQuote?.id === option.id ? '#e55a2b' : '#1565c0';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = formData.selectedQuote?.id === option.id ? '#ff6b35' : '#1976d2';\n              }}\n            >\n              {formData.selectedQuote?.id === option.id ? 'SELECTED' : 'SELECT PLAN'}\n            </button>\n          </div>\n        )) : (\n          <div style={{ \n            gridColumn: '1 / -1', \n            textAlign: 'center', \n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>Loading SOAP quotes...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase3 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Enhance Your Coverage</h2>\n      <p>Add optional coverage for extra protection during your trip.</p>\n      \n      <div className=\"selected-plan-summary\">\n        <div className=\"current-plan\">\n          <h3>Your Selected Plan</h3>\n          {formData.selectedQuote && (\n            <div className=\"plan-info\">\n              <div className=\"plan-name\">{formData.selectedQuote.name}</div>\n              <div className=\"plan-price\">€{formData.selectedQuote.price}</div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"additional-policies\">\n        <h3>Optional Coverage Add-ons</h3>\n        <div className=\"policies-grid\">\n          {availableAdditionalPolicies.map(policy => {\n            const isSelected = formData.additionalPolicies.some(p => p.id === policy.id);\n            return (\n              <div key={policy.id} className={`policy-card ${isSelected ? 'selected' : ''}`}>\n                <div className=\"policy-header\">\n                  <div className=\"policy-icon\">{policy.icon}</div>\n                  <div className=\"policy-info\">\n                    <h4>{policy.name}</h4>\n                    <div className=\"policy-price\">€{policy.price.toFixed(2)}</div>\n                  </div>\n                  <button \n                    className={`policy-btn ${isSelected ? 'remove' : 'add'}`}\n                    onClick={() => isSelected ? removeAdditionalPolicy(policy.id) : addAdditionalPolicy(policy)}\n                  >\n                    {isSelected ? 'REMOVE' : 'ADD'}\n                  </button>\n                </div>\n                <div className=\"policy-description\">\n                  <p>{policy.description}</p>\n                  {policy.id === 'excess-waiver' && (\n                    <button \n                      className=\"find-out-more\" \n                      onClick={() => alert('More information about Excess Waiver coverage will be available soon.')}\n                      aria-label=\"Learn more about Excess Waiver coverage\"\n                      title=\"Get more information about Excess Waiver coverage\"\n                      type=\"button\"\n                    >\n                      Find out more\n                    </button>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"total-summary-box\">\n        <div className=\"summary-content\">\n          <div className=\"base-plan\">\n            <span>Base Plan: {formData.selectedQuote?.name}</span>\n            <span>€{formData.selectedQuote?.price}</span>\n          </div>\n          {formData.additionalPolicies.map(policy => (\n            <div key={policy.id} className=\"additional-item\">\n              <span>{policy.name}</span>\n              <span>€{policy.price.toFixed(2)}</span>\n            </div>\n          ))}\n          <div className=\"total-line\">\n            <span className=\"total-label\">Total Premium:</span>\n            <span className=\"total-amount\">€{calculateTotalPrice().toFixed(2)}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase4 = () => {\n    const calculateTripDuration = () => {\n      if (formData.startDate && formData.endDate) {\n        const start = new Date(formData.startDate);\n        const end = new Date(formData.endDate);\n        const days = Math.ceil((end.getTime() - start.getTime()) / (1000 * 3600 * 24));\n        return days;\n      }\n      return 0;\n    };\n\n    return (\n      <div className=\"wizard-phase\">\n        <h2>Review Your Details</h2>\n        <p>Please carefully review all information below. You can go back to make changes if needed.</p>\n        \n        <div className=\"professional-summary\">\n          {/* Trip Overview Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🌍 Trip Overview</h3>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"summary-grid\">\n                <div className=\"summary-row\">\n                  <span className=\"label\">Insurance Type:</span>\n                  <span className=\"value\">{\n                    formData.tripType === 'single' ? 'Single Trip Insurance' :\n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' :\n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance'\n                  }</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Country of Residence:</span>\n                  <span className=\"value\">{formData.countryOfResidence}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Destination:</span>\n                  <span className=\"value\">{formData.destination}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Departure Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.startDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Return Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.endDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Trip Duration:</span>\n                  <span className=\"value\">{calculateTripDuration()} days</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Number of Travelers:</span>\n                  <span className=\"value\">{formData.numberOfTravelers} {formData.numberOfTravelers === 1 ? 'person' : 'people'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Travelers Information Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>👥 Traveler Information</h3>\n            </div>\n            <div className=\"card-content\">\n              {formData.travelers.map((traveler, index) => (\n                <div key={index} className=\"traveler-card\">\n                  <div className=\"traveler-header\">\n                    <h4>Primary {index === 0 ? 'Policyholder' : `Traveler ${index + 1}`}</h4>\n                  </div>\n                  <div className=\"traveler-details\">\n                    <div className=\"detail-grid\">\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Full Name:</span>\n                        <span className=\"detail-value\">{traveler.firstName} {traveler.lastName}</span>\n                      </div>\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Age:</span>\n                        <span className=\"detail-value\">{traveler.age} years old</span>\n                      </div>\n                      <div className=\"detail-item\">\n                        <span className=\"detail-label\">Email Address:</span>\n                        <span className=\"detail-value\">{traveler.email}</span>\n                      </div>\n                      {traveler.phone && (\n                        <div className=\"detail-item\">\n                          <span className=\"detail-label\">Phone Number:</span>\n                          <span className=\"detail-value\">{traveler.phone}</span>\n                        </div>\n                      )}\n                      {traveler.vaxId && (\n                        <div className=\"detail-item\">\n                          <span className=\"detail-label\">VAX ID:</span>\n                          <span className=\"detail-value\">{traveler.vaxId}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Insurance Plan Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🛡️ Selected Insurance Plan</h3>\n            </div>\n            <div className=\"card-content\">\n              {formData.selectedQuote && (\n                <div className=\"plan-summary\">\n                  <div className=\"plan-header\">\n                    <h4>{formData.selectedQuote.name}</h4>\n                    <div className=\"plan-price\">\n                      <span className=\"price-label\">Total Premium:</span>\n                      <span className=\"price-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"coverage-overview\">\n                    <h5>Coverage Limits</h5>\n                    <div className=\"coverage-grid\">\n                      <div className=\"coverage-item\">\n                        <span className=\"coverage-icon\">🏥</span>\n                        <div className=\"coverage-details\">\n                          <span className=\"coverage-type\">Medical Emergency</span>\n                          <span className=\"coverage-amount\">{formData.selectedQuote.coverage.medical}</span>\n                        </div>\n                      </div>\n                      <div className=\"coverage-item\">\n                        <span className=\"coverage-icon\">🧳</span>\n                        <div className=\"coverage-details\">\n                          <span className=\"coverage-type\">Baggage Protection</span>\n                          <span className=\"coverage-amount\">{formData.selectedQuote.coverage.baggage}</span>\n                        </div>\n                      </div>\n                      <div className=\"coverage-item\">\n                        <span className=\"coverage-icon\">❌</span>\n                        <div className=\"coverage-details\">\n                          <span className=\"coverage-type\">Trip Cancellation</span>\n                          <span className=\"coverage-amount\">{formData.selectedQuote.coverage.cancellation}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"features-overview\">\n                    <h5>Included Benefits</h5>\n                    <div className=\"features-grid\">\n                      {formData.selectedQuote.features.map((feature, index) => (\n                        <div key={index} className=\"feature-item\">\n                          <span className=\"feature-check\">✓</span>\n                          <span className=\"feature-text\">{feature}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Summary Totals */}\n          <div className=\"summary-card total-card\">\n            <div className=\"card-content\">\n              <div className=\"total-summary\">\n                <div className=\"total-row\">\n                  <span className=\"total-label\">Base Premium:</span>\n                  <span className=\"total-value\">€{formData.selectedQuote?.price}</span>\n                </div>\n                {formData.additionalPolicies.length > 0 && (\n                  <div className=\"total-row\">\n                    <span className=\"total-label\">Additional Policies:</span>\n                    <span className=\"total-value\">€{formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0).toFixed(2)}</span>\n                  </div>\n                )}\n                <div className=\"total-row\">\n                  <span className=\"total-label\">Taxes & Fees:</span>\n                  <span className=\"total-value\">Included</span>\n                </div>\n                <div className=\"total-row final-total\">\n                  <span className=\"total-label\">Total Amount:</span>\n                  <span className=\"total-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderPhase5 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Confirmation</h2>\n      <p>Please confirm that all details are correct before proceeding to payment.</p>\n      \n      <div className=\"confirmation-box\">\n        <div className=\"confirmation-item\">\n          <strong>Trip:</strong> {formData.destination} ({formatDateToEuropean(formData.startDate)} to {formatDateToEuropean(formData.endDate)})\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Country of Residence:</strong> {formData.countryOfResidence}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Travelers:</strong> {formData.numberOfTravelers} person{formData.numberOfTravelers > 1 ? 's' : ''}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Plan:</strong> {formData.selectedQuote?.name}\n        </div>\n        <div className=\"confirmation-item total\">\n          <strong>Total Amount:</strong> €{calculateTotalPrice().toFixed(2)}\n        </div>\n      </div>\n      \n      <div className=\"terms-section\">\n        <label className=\"checkbox-option\">\n          <input type=\"checkbox\" required />\n          <span>I agree to the <button \n            className=\"link-button\" \n            onClick={() => onNavigate?.('privacy')}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer' }}\n          >\n            Terms and Conditions\n          </button></span>\n        </label>\n        <label className=\"checkbox-option\">\n          <input type=\"checkbox\" required />\n          <span>I agree to the <button \n            className=\"link-button\" \n            onClick={() => onNavigate?.('privacy')}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer' }}\n          >\n            Privacy Policy\n          </button></span>\n        </label>\n        <label className=\"checkbox-option\">\n          <input type=\"checkbox\" />\n          <span>I would like to receive marketing emails about travel insurance offers</span>\n        </label>\n      </div>\n    </div>\n  );\n\n  const renderPhase6 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Screening Questions</h2>\n      <p>Please answer the following questions to complete your insurance application.</p>\n      \n      <div className=\"screening-questions\">\n        {screeningQuestions.length === 0 ? (\n          <div className=\"no-questions\">\n            <p>No screening questions required for this policy.</p>\n          </div>\n        ) : (\n          screeningQuestions.map((question, index) => (\n            <div key={question.questionNumber} className=\"screening-question\">\n              <h3>Question {question.questionNumber}</h3>\n              <p className=\"question-text\">{question.question}</p>\n              \n              <div className=\"question-options\">\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name={`question-${question.questionNumber}`}\n                    value=\"yes\"\n                    checked={screeningAnswers[question.questionNumber] === 'yes'}\n                    onChange={(e) => setScreeningAnswers(prev => ({\n                      ...prev,\n                      [question.questionNumber]: 'yes'\n                    }))}\n                  />\n                  <span>Yes</span>\n                </label>\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name={`question-${question.questionNumber}`}\n                    value=\"no\"\n                    checked={screeningAnswers[question.questionNumber] === 'no'}\n                    onChange={(e) => setScreeningAnswers(prev => ({\n                      ...prev,\n                      [question.questionNumber]: 'no'\n                    }))}\n                  />\n                  <span>No</span>\n                </label>\n              </div>\n              \n              {/* Show messages based on answer */}\n              {screeningAnswers[question.questionNumber] && (\n                <div className={`answer-message ${screeningAnswers[question.questionNumber]}`}>\n                  <p>\n                    {screeningAnswers[question.questionNumber] === 'yes' \n                      ? question.yesMessage \n                      : question.noMessage}\n                  </p>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase7 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Payment Details</h2>\n      <p>Enter your payment information to complete your purchase.</p>\n      \n      \n      <div className=\"payment-section\">\n        <div className=\"payment-methods\">\n          <h3>Payment Method</h3>\n          <div className=\"payment-method-info\">\n            <p>We accept all major credit and debit cards for secure payment processing.</p>\n          </div>\n        </div>\n\n        <div className=\"card-details\">\n          <h3>Card Details</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"cardNumber\">Card Number</label>\n            <input\n              type=\"text\"\n              id=\"cardNumber\"\n              value={formData.cardNumber}\n              onChange={(e) => handleInputChange('cardNumber', e.target.value)}\n              placeholder=\"1234 5678 9012 3456\"\n              title=\"Enter your 16-digit card number\"\n              required\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"expiryDate\">Expiry Date</label>\n              <input\n                type=\"text\"\n                id=\"expiryDate\"\n                value={formData.expiryDate}\n                onChange={(e) => handleInputChange('expiryDate', e.target.value)}\n                placeholder=\"MM/YY\"\n                title=\"Enter card expiry date in MM/YY format\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"cvv\">CVV</label>\n              <input\n                type=\"text\"\n                id=\"cvv\"\n                value={formData.cvv}\n                onChange={(e) => handleInputChange('cvv', e.target.value)}\n                placeholder=\"123\"\n                title=\"Enter the 3-digit CVV code from the back of your card\"\n                required\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"billing-address\">\n          <h3>Billing Address</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"street\">Street Address</label>\n            <input\n              type=\"text\"\n              id=\"street\"\n              value={formData.billingAddress.street}\n              onChange={(e) => handleBillingAddressChange('street', e.target.value)}\n              placeholder=\"Enter street address\"\n              title=\"Enter your billing street address\"\n              required\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"city\">City</label>\n              <input\n                type=\"text\"\n                id=\"city\"\n                value={formData.billingAddress.city}\n                onChange={(e) => handleBillingAddressChange('city', e.target.value)}\n                placeholder=\"Enter city\"\n                title=\"Enter your billing city\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"postalCode\">Postal Code</label>\n              <input\n                type=\"text\"\n                id=\"postalCode\"\n                value={formData.billingAddress.postalCode}\n                onChange={(e) => handleBillingAddressChange('postalCode', e.target.value)}\n                placeholder=\"Enter postal code\"\n                title=\"Enter your billing postal code\"\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"country\">Country</label>\n            <input\n              type=\"text\"\n              id=\"country\"\n              value={formData.billingAddress.country}\n              onChange={(e) => handleBillingAddressChange('country', e.target.value)}\n              placeholder=\"Enter country\"\n              title=\"Enter your billing country\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"payment-summary\">\n        <div className=\"summary-item\">\n          <strong>Total Amount: €{calculateTotalPrice().toFixed(2)}</strong>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase8 = () => (\n    <div className=\"wizard-phase\">\n      <h2>🎉 Congratulations!</h2>\n      <p>Your travel insurance has been successfully purchased.</p>\n      \n      <div className=\"success-message\">\n        <div className=\"policy-number\">\n          <strong>Policy Number:</strong> {policyNumber || `TI-${Date.now().toString().slice(-8)}`}\n        </div>\n        <div className=\"confirmation-email\">\n          A confirmation email has been sent to {formData.travelers[0]?.email}\n        </div>\n      </div>\n      \n      <div className=\"documents-section\">\n        <h3>Your Documents</h3>\n        <div className=\"document-links\">\n          <button \n            onClick={downloadPolicyPDF} \n            className=\"document-link download-btn\"\n            aria-label=\"Download your policy summary as a PDF document\"\n            title=\"Download a PDF copy of your travel insurance policy summary\"\n            type=\"button\"\n          >\n            📄 Download Your Policy Summary (PDF)\n          </button>\n          {formData.selectedQuote?.summaryOfCoverUrl && (\n            <a href={formData.selectedQuote.summaryOfCoverUrl} className=\"document-link\" download>\n              📄 Download Summary of Cover\n            </a>\n          )}\n          {formData.selectedQuote?.policyWordingUrl && (\n            <a href={formData.selectedQuote.policyWordingUrl} className=\"document-link\" download>\n              📋 Download Policy Terms & Conditions\n            </a>\n          )}\n          <a href=\"/Globelink_Wording_EU_V2_07.03.2025.pdf\" className=\"document-link\" download>\n            🆔 Download Insurance Card\n          </a>\n          <a href=\"/Globelink_Wording_EU_V2_07.03.2025.pdf\" className=\"document-link\" download>\n            📞 Emergency Contact Information\n          </a>\n        </div>\n      </div>\n      \n      <div className=\"next-steps\">\n        <h3>What's Next?</h3>\n        <ul>\n          <li>Save your policy documents in a safe place</li>\n          <li>Keep the emergency contact numbers with you while traveling</li>\n          <li>Download our mobile app for easy access to your policy</li>\n          <li>Contact us anytime at +30 6974907500 for assistance</li>\n        </ul>\n      </div>\n    </div>\n  );\n\n  const renderPhaseContent = () => {\n    switch (currentPhase) {\n      case 1:\n        return renderPhase1();\n      case 2:\n        return renderPhase2();\n      case 3:\n        return renderPhase3();\n      case 4:\n        return renderPhase4();\n      case 5:\n        return renderPhase5();\n      case 6:\n        return renderPhase6();\n      case 7:\n        return renderPhase7();\n      case 8:\n        return renderPhase8();\n      default:\n        return renderPhase1();\n    }\n  };\n\n  return (\n    <div className=\"quote-page\">\n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n      <div className=\"container\">\n        <div className=\"wizard-header\">\n          <h1>Travel Insurance Quote Wizard</h1>\n            <div className=\"wizard-progress\">\n              {[1, 2, 3, 4, 5, 6, 7, 8].map(phase => (\n                <div key={phase} className={`progress-step ${currentPhase >= phase ? 'active' : ''} ${currentPhase === phase ? 'current' : ''}`}>\n                  <div className=\"step-number\">{phase}</div>\n                  <div className=\"step-label\">\n                    {phase === 1 && 'Details'}\n                    {phase === 2 && 'Quotes'}\n                    {phase === 3 && 'Add-ons'}\n                    {phase === 4 && 'Review'}\n                    {phase === 5 && 'Confirm'}\n                    {phase === 6 && 'Screening'}\n                    {phase === 7 && 'Payment'}\n                    {phase === 8 && 'Documents'}\n                  </div>\n                </div>\n              ))}\n            </div>\n        </div>\n\n        <div className=\"wizard-content\">\n          {renderPhaseContent()}\n        </div>\n\n        <div className=\"wizard-navigation\">\n          {currentPhase > 1 && currentPhase < 8 && (\n            <button \n              className=\"btn btn-secondary\" \n              onClick={prevPhase}\n              aria-label=\"Go to previous step\"\n              title=\"Go back to the previous step\"\n              type=\"button\"\n            >\n              Previous\n            </button>\n          )}\n          \n          {currentPhase < 7 && (\n            <button \n              className=\"btn btn-primary\" \n              onClick={nextPhase}\n              disabled={!isPhaseValid(currentPhase)}\n              aria-label={currentPhase === 6 ? 'Proceed to payment step' : 'Go to next step'}\n              title={currentPhase === 6 ? 'Continue to payment details' : 'Continue to next step'}\n              type=\"button\"\n            >\n              {currentPhase === 6 ? 'Proceed to Payment' : 'Next'}\n            </button>\n          )}\n          \n          {currentPhase === 7 && (\n            <>\n              <button \n                className=\"btn btn-primary\" \n                onClick={processPayment}\n                disabled={!isPhaseValid(currentPhase) || isProcessing}\n                aria-label={isProcessing ? 'Processing payment, please wait' : `Pay €${calculateTotalPrice().toFixed(2)} for your travel insurance`}\n                title={isProcessing ? 'Payment is being processed, please wait' : `Complete payment of €${calculateTotalPrice().toFixed(2)}`}\n                type=\"button\"\n                style={{\n                  opacity: (!isPhaseValid(currentPhase) || isProcessing) ? 0.5 : 1,\n                  cursor: (!isPhaseValid(currentPhase) || isProcessing) ? 'not-allowed' : 'pointer'\n                }}\n              >\n                {isProcessing ? 'Processing Payment...' : `Pay €${calculateTotalPrice().toFixed(2)}`}\n              </button>\n              \n            </>\n          )}\n          \n          {currentPhase === 8 && (\n            <button \n              className=\"btn btn-primary\" \n              onClick={() => window.location.href = '/'}\n              aria-label=\"Return to homepage\"\n              title=\"Go back to the main homepage\"\n              type=\"button\"\n            >\n              Return to Homepage\n            </button>\n          )}\n        </div>\n      </div>\n      \n      {/* Help Popup for Destination Categories */}\n      {showHelpPopup && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowHelpPopup(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Destination Categories & Countries</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowHelpPopup(false)}\n                aria-label=\"Close help popup\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              {isLoadingCountries ? (\n                <div className=\"loading-message\">Loading countries...</div>\n              ) : (\n                <div className=\"categories-container\">\n                  {Object.entries(countriesByCategory).map(([category, countries]) => (\n                    <div key={category} className=\"category-section\">\n                      <h4 className=\"category-title\">{category}</h4>\n                      <div className=\"countries-grid\">\n                        {countries.map((country) => (\n                          <span key={country} className=\"country-item\">\n                            {country}\n                          </span>\n                        ))}\n                      </div>\n                      <div className=\"category-count\">\n                        {countries.length} countries\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quote2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}