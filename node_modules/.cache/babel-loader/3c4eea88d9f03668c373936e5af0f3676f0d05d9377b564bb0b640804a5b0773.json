{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop-123\\\\TravelInsurance_Demo_2\\\\src\\\\pages\\\\Quote2.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Quote2.css';\n// Import API service for database integration\nimport { createQuote, processPayment as apiProcessPayment, getAddonsByPolicyType } from '../services/apiService';\n// Import Terracotta service for insurance quotes\nimport TerracottaService, { getResidenceID, getTypePolicyID } from '../services/terracottaService';\n\n// Import jsPDF dynamically to avoid build issues\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generatePDF = async (formData, calculateTotalPrice, formatDateToEuropean, policyNumber) => {\n  try {\n    var _formData$selectedQuo;\n    // Dynamic import of jsPDF\n    const jsPDF = (await import('jspdf')).default;\n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleDateString('en-GB');\n\n    // Set up fonts and styles\n    doc.setFontSize(20);\n    doc.text('TRAVEL INSURANCE POLICY', 20, 20);\n    doc.setFontSize(14);\n    doc.text(`Policy Number: ${policyNumber}`, 20, 35);\n    doc.text(`Issue Date: ${currentDate}`, 20, 45);\n    let yPos = 65;\n\n    // Trip Information Section\n    doc.setFontSize(16);\n    doc.text('TRIP INFORMATION', 20, yPos);\n    yPos += 15;\n    doc.setFontSize(12);\n    const tripType = formData.tripType === 'single' ? 'Single Trip Insurance' : formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' : 'Comprehensive Single Trip Insurance';\n    doc.text(`Trip Type: ${tripType}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Country of Residence: ${formData.countryOfResidence}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Destination: ${formData.destination}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Departure: ${formatDateToEuropean(formData.startDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Return: ${formatDateToEuropean(formData.endDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Travelers: ${formData.numberOfTravelers}`, 20, yPos);\n    yPos += 20;\n\n    // Traveler Information\n    doc.setFontSize(16);\n    doc.text('TRAVELER INFORMATION', 20, yPos);\n    yPos += 15;\n    doc.setFontSize(12);\n    formData.travelers.forEach((traveler, index) => {\n      if (yPos > 250) {\n        // New page if needed\n        doc.addPage();\n        yPos = 20;\n      }\n      doc.text(`${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}:`, 20, yPos);\n      yPos += 10;\n      doc.text(`Name: ${traveler.firstName} ${traveler.lastName}`, 20, yPos);\n      yPos += 8;\n      doc.text(`Age: ${traveler.age} years old`, 20, yPos);\n      yPos += 8;\n      doc.text(`Email: ${traveler.email}`, 20, yPos);\n      yPos += 8;\n      if (traveler.phone) {\n        doc.text(`Phone: ${traveler.phone}`, 20, yPos);\n        yPos += 8;\n      }\n      yPos += 10;\n    });\n\n    // Selected Plan\n    if (formData.selectedQuote) {\n      if (yPos > 180) {\n        doc.addPage();\n        yPos = 20;\n      }\n      doc.setFontSize(16);\n      doc.text('SELECTED INSURANCE PLAN', 20, yPos);\n      yPos += 15;\n      doc.setFontSize(12);\n      doc.text(`Plan: ${formData.selectedQuote.name}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Medical: ${formData.selectedQuote.coverage.medical}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Baggage: ${formData.selectedQuote.coverage.baggage}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Cancellation: ${formData.selectedQuote.coverage.cancellation}`, 20, yPos);\n      yPos += 15;\n\n      // Add Included Features\n      if (formData.selectedQuote.features && formData.selectedQuote.features.length > 0) {\n        doc.text('Included Features:', 20, yPos);\n        yPos += 10;\n        formData.selectedQuote.features.forEach(feature => {\n          if (yPos > 270) {\n            // Check for page break\n            doc.addPage();\n            yPos = 20;\n          }\n          doc.text(`• ${feature}`, 25, yPos);\n          yPos += 8;\n        });\n        yPos += 10;\n      }\n    }\n\n    // Additional Coverage\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      if (yPos > 220) {\n        doc.addPage();\n        yPos = 20;\n      }\n      doc.setFontSize(16);\n      doc.text('ADDITIONAL COVERAGE', 20, yPos);\n      yPos += 15;\n      doc.setFontSize(12);\n      formData.additionalPolicies.forEach(policy => {\n        if (yPos > 270) {\n          // Check for page break\n          doc.addPage();\n          yPos = 20;\n        }\n        doc.text(`• ${policy.name} - €${policy.price.toFixed(2)}`, 25, yPos);\n        yPos += 8;\n      });\n      yPos += 15;\n    }\n\n    // Premium Summary\n    if (yPos > 200) {\n      doc.addPage();\n      yPos = 20;\n    }\n    doc.setFontSize(16);\n    doc.text('PREMIUM SUMMARY', 20, yPos);\n    yPos += 15;\n    doc.setFontSize(12);\n    doc.text(`Base Premium: €${(_formData$selectedQuo = formData.selectedQuote) === null || _formData$selectedQuo === void 0 ? void 0 : _formData$selectedQuo.price}`, 20, yPos);\n    yPos += 10;\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      const additional = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n      doc.text(`Additional Policies: €${additional.toFixed(2)}`, 20, yPos);\n      yPos += 10;\n    }\n    doc.text('Taxes & Fees: Included', 20, yPos);\n    yPos += 10;\n    doc.text(`Total Premium: €${calculateTotalPrice().toFixed(2)}`, 20, yPos);\n    yPos += 20;\n    doc.text('Emergency Contact: +30 6974907500', 20, yPos);\n\n    // Save the PDF\n    doc.save(`Travel_Insurance_Policy_${policyNumber}.pdf`);\n  } catch (error) {\n    console.error('PDF generation failed, falling back to HTML:', error);\n    // Fallback to HTML generation if PDF fails\n    generateHTMLPolicy(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  }\n};\nconst generateHTMLPolicy = (formData, calculateTotalPrice, formatDateToEuropean, policyNumber) => {\n  var _formData$selectedQuo2;\n  const currentDate = new Date().toLocaleDateString('en-GB');\n  const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Travel Insurance Policy - ${policyNumber}</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\n        .section { margin-bottom: 25px; }\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\n        .info-row { margin: 8px 0; }\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\n        @media print { body { margin: 0; } }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>TRAVEL INSURANCE POLICY</h1>\n        <h2>Policy Number: ${policyNumber}</h2>\n        <p>Issue Date: ${currentDate}</p>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRIP INFORMATION</div>\n        <div class=\"info-row\"><strong>Trip Type:</strong> ${formData.tripType === 'single' ? 'Single Trip Insurance' : formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' : 'Comprehensive Single Trip Insurance'}</div>\n        <div class=\"info-row\"><strong>Country of Residence:</strong> ${formData.countryOfResidence}</div>\n        <div class=\"info-row\"><strong>Destination:</strong> ${formData.destination}</div>\n        <div class=\"info-row\"><strong>Departure:</strong> ${formatDateToEuropean(formData.startDate)}</div>\n        <div class=\"info-row\"><strong>Return:</strong> ${formatDateToEuropean(formData.endDate)}</div>\n        <div class=\"info-row\"><strong>Travelers:</strong> ${formData.numberOfTravelers}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRAVELER INFORMATION</div>\n        ${formData.travelers.map((traveler, index) => `\n            <div class=\"traveler-block\">\n                <strong>${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}</strong>\n                <div class=\"info-row\"><strong>Name:</strong> ${traveler.firstName} ${traveler.lastName}</div>\n                <div class=\"info-row\"><strong>Age:</strong> ${traveler.age} years old</div>\n                <div class=\"info-row\"><strong>Email:</strong> ${traveler.email}</div>\n                ${traveler.phone ? `<div class=\"info-row\"><strong>Phone:</strong> ${traveler.phone}</div>` : ''}\n            </div>\n        `).join('')}\n    </div>\n    \n    ${formData.selectedQuote ? `\n    <div class=\"section\">\n        <div class=\"section-title\">SELECTED INSURANCE PLAN</div>\n        <div class=\"info-row\"><strong>Plan:</strong> ${formData.selectedQuote.name}</div>\n        <div class=\"info-row\"><strong>Medical Coverage:</strong> ${formData.selectedQuote.coverage.medical}</div>\n        <div class=\"info-row\"><strong>Baggage Coverage:</strong> ${formData.selectedQuote.coverage.baggage}</div>\n        <div class=\"info-row\"><strong>Trip Cancellation:</strong> ${formData.selectedQuote.coverage.cancellation}</div>\n        \n        ${formData.selectedQuote.features && formData.selectedQuote.features.length > 0 ? `\n        <div style=\"margin-top: 15px;\">\n            <strong>Included Features:</strong>\n            <ul>\n                ${formData.selectedQuote.features.map(feature => `<li>${feature}</li>`).join('')}\n            </ul>\n        </div>\n        ` : ''}\n    </div>\n    ` : ''}\n    \n    ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n    <div class=\"section\">\n        <div class=\"section-title\">ADDITIONAL COVERAGE</div>\n        <ul>\n            ${formData.additionalPolicies.map(policy => `<li>${policy.name} - €${policy.price.toFixed(2)}</li>`).join('')}\n        </ul>\n    </div>\n    ` : ''}\n    \n    <div class=\"section\">\n        <div class=\"section-title\">PREMIUM SUMMARY</div>\n        <div class=\"info-row\"><strong>Base Premium:</strong> €${(_formData$selectedQuo2 = formData.selectedQuote) === null || _formData$selectedQuo2 === void 0 ? void 0 : _formData$selectedQuo2.price}</div>\n        ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n        <div class=\"info-row\"><strong>Additional Policies:</strong> €${formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0).toFixed(2)}</div>\n        ` : ''}\n        <div class=\"info-row\"><strong>Taxes & Fees:</strong> Included</div>\n        <div class=\"info-row\"><strong>Total Premium:</strong> €${calculateTotalPrice().toFixed(2)}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"info-row\"><strong>Emergency Contact:</strong> +30 6974907500</div>\n        <div class=\"info-row\" style=\"margin-top: 20px; font-style: italic;\">\n            This document serves as proof of travel insurance coverage.\n        </div>\n    </div>\n    \n    <script>\n        window.onload = function() { window.print(); };\n        window.onafterprint = function() { window.close(); };\n    </script>\n</body>\n</html>`;\n  const printWindow = window.open('', '_blank', 'width=800,height=600');\n  if (printWindow) {\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }\n};\n\n// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean = dateString => {\n  if (!dateString) return '';\n  // Parse the ISO date string directly to avoid timezone issues\n  const [year, month, day] = dateString.split('-');\n  return `${day}/${month}/${year}`;\n};\nconst calculateAgeFromDateOfBirth = dateOfBirth => {\n  const birthDate = new Date(dateOfBirth);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n    age--;\n  }\n  return Math.max(0, age);\n};\nconst Quote2 = ({\n  onNavigate\n}) => {\n  _s2();\n  var _formData$selectedQuo10,\n    _s = $RefreshSig$();\n  const [currentPhase, setCurrentPhase] = useState(1);\n  const [formData, setFormData] = useState({\n    destination: '',\n    startDate: '',\n    endDate: '',\n    tripType: 'single',\n    countryOfResidence: '',\n    numberOfTravelers: 1,\n    travelers: [{\n      firstName: '',\n      lastName: '',\n      age: '',\n      email: '',\n      phone: '',\n      vaxId: '',\n      nationality: ''\n    }],\n    selectedQuote: null,\n    additionalPolicies: [],\n    paymentMethod: 'card',\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    billingAddress: {\n      street: '',\n      city: '',\n      postalCode: '',\n      country: ''\n    }\n  });\n  const [quoteOptions, setQuoteOptions] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [policyNumber, setPolicyNumber] = useState('');\n  const [policyDocuments, setPolicyDocuments] = useState({});\n  const [terracottaService] = useState(() => {\n    console.log('Creating TerracottaService instance...');\n    return TerracottaService.getInstance('4072', '111427');\n  });\n  const [screeningQuestions, setScreeningQuestions] = useState([]);\n  const [screeningAnswers, setScreeningAnswers] = useState({});\n  const [isLoadingQuotes, setIsLoadingQuotes] = useState(false);\n  const [quoteError, setQuoteError] = useState('');\n  const [availableProducts, setAvailableProducts] = useState([]);\n  const [isLoadingProducts, setIsLoadingProducts] = useState(true);\n\n  // Policy types state\n  const [availablePolicyTypes, setAvailablePolicyTypes] = useState([]);\n  const [isLoadingPolicyTypes, setIsLoadingPolicyTypes] = useState(false);\n\n  // Policy type destinations state (Trip Types)\n  const [availablePolicyTypeDestinations, setAvailablePolicyTypeDestinations] = useState([]);\n  const [isLoadingPolicyTypeDestinations, setIsLoadingPolicyTypeDestinations] = useState(false);\n\n  // Destination categories state\n  const [destinationCategories, setDestinationCategories] = useState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n\n  // Help popup state\n  const [showHelpPopup, setShowHelpPopup] = useState(false);\n  const [countriesByCategory, setCountriesByCategory] = useState({});\n  const [isLoadingCountries, setIsLoadingCountries] = useState(false);\n\n  // Privacy Policy and Terms modal states\n  const [showPrivacyPolicy, setShowPrivacyPolicy] = useState(false);\n  const [showTermsAndConditions, setShowTermsAndConditions] = useState(false);\n  const [showGeneralConditions, setShowGeneralConditions] = useState(false);\n  const [generalConditionsData, setGeneralConditionsData] = useState([]);\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [marketingEmailsAccepted, setMarketingEmailsAccepted] = useState(false);\n\n  // Countries of residence state\n  const [countriesOfResidence, setCountriesOfResidence] = useState([]);\n  const [isLoadingCountriesOfResidence, setIsLoadingCountriesOfResidence] = useState(false);\n\n  // Addons state - fetched from database based on selected policy type\n  const [availableAdditionalPolicies, setAvailableAdditionalPolicies] = useState([]);\n  const [isLoadingAddons, setIsLoadingAddons] = useState(false);\n\n  // Store the total GrossPrice from SOAP alterations response\n  const [totalGrossPriceWithAddons, setTotalGrossPriceWithAddons] = useState(null);\n\n  // Loading state for addon operations - track which specific addon is being processed\n  const [processingAddonId, setProcessingAddonId] = useState(null);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, []);\n\n  // Load available Terracotta products on component mount\n  useEffect(() => {\n    const loadTerracottaProducts = async () => {\n      try {\n        var _productResponse$Sche;\n        setIsLoadingProducts(true);\n        console.log('Loading Terracotta products...');\n        const productResponse = await terracottaService.getUserProductList();\n        console.log('Terracotta products loaded:', productResponse);\n        console.log(`✅ Successfully loaded ${((_productResponse$Sche = productResponse.Schemas) === null || _productResponse$Sche === void 0 ? void 0 : _productResponse$Sche.length) || 0} products for your account`);\n        setAvailableProducts(productResponse.Schemas || []);\n        setIsLoadingProducts(false);\n      } catch (error) {\n        console.error('Error loading Terracotta products:', error);\n        setIsLoadingProducts(false);\n        // Don't show error to user, just log it - we'll use fallback\n      }\n    };\n    loadTerracottaProducts();\n  }, [terracottaService]);\n\n  // Load policy types when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      try {\n        setIsLoadingPolicyTypes(true);\n        console.log('Loading policy types for available products...');\n\n        // Load policy types for each product (schema)\n        const allPolicyTypes = [];\n        for (const product of availableProducts) {\n          try {\n            console.log(`Loading policy types for schema ${product.SchemaID}: ${product.SchemaName}`);\n            const policyResponse = await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());\n            console.log(`Policy types for schema ${product.SchemaID}:`, policyResponse);\n\n            // Add schema context to each policy type\n            const policyTypesWithSchema = policyResponse.PolicyTypes.map(policyType => ({\n              ...policyType,\n              SchemaID: product.SchemaID,\n              SchemaName: product.SchemaName\n            }));\n            allPolicyTypes.push(...policyTypesWithSchema);\n          } catch (error) {\n            console.error(`Error loading policy types for schema ${product.SchemaID}:`, error);\n          }\n        }\n\n        // Remove duplicates based on TypePolicyID\n        const uniquePolicyTypes = allPolicyTypes.filter((policyType, index, self) => index === self.findIndex(p => p.TypePolicyID === policyType.TypePolicyID));\n        setAvailablePolicyTypes(uniquePolicyTypes);\n        console.log(`✅ Successfully loaded ${uniquePolicyTypes.length} unique policy types`);\n        setIsLoadingPolicyTypes(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypes(false);\n      }\n    };\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Load policy types (Trip Types) when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      try {\n        setIsLoadingPolicyTypeDestinations(true);\n        console.log('Loading policy types for available products...');\n\n        // Load policy types for each product (schema) - Using schema 717 as specified\n        const allPolicyTypes = [];\n\n        // Use schema 717 as specified in the requirement\n        const schemaToUse = availableProducts.find(p => p.SchemaID === 717) || availableProducts[0];\n        try {\n          console.log(`Loading policy types for schema ${schemaToUse.SchemaID}: ${schemaToUse.SchemaName}`);\n          const policyTypeResponse = await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());\n          console.log(`Policy types for schema ${schemaToUse.SchemaID}:`, policyTypeResponse);\n          allPolicyTypes.push(...policyTypeResponse.PolicyTypes);\n        } catch (error) {\n          console.error(`Error loading policy types for schema ${schemaToUse.SchemaID}:`, error);\n        }\n        setAvailablePolicyTypes(allPolicyTypes);\n        console.log(`✅ Successfully loaded ${allPolicyTypes.length} policy types`);\n        setIsLoadingPolicyTypeDestinations(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypeDestinations(false);\n      }\n    };\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Show a brief message when end date is cleared due to start date change\n  useEffect(() => {\n    if (formData.startDate && !formData.endDate) {\n      // This effect will run when start date exists but end date is empty\n      // We could add a toast notification here if needed\n    }\n  }, [formData.startDate, formData.endDate]);\n\n  // Load countries of residence on component mount\n  useEffect(() => {\n    const loadCountriesOfResidence = async () => {\n      try {\n        setIsLoadingCountriesOfResidence(true);\n        console.log('Loading countries of residence...');\n        const response = await fetch('http://localhost:5002/api/countries');\n        const data = await response.json();\n        if (data.status === 'success') {\n          setCountriesOfResidence(data.countries);\n          console.log('✅ Countries of residence loaded:', data.countries.length, 'countries');\n        } else {\n          console.error('❌ Failed to load countries of residence:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries of residence:', error);\n      } finally {\n        setIsLoadingCountriesOfResidence(false);\n      }\n    };\n    loadCountriesOfResidence();\n  }, []);\n\n  // Load destination categories on component mount\n  useEffect(() => {\n    const loadDestinationCategories = async () => {\n      try {\n        setIsLoadingCategories(true);\n        console.log('Loading destination categories...');\n        const response = await fetch('http://localhost:5002/api/destination-categories');\n        const data = await response.json();\n        if (data.status === 'success') {\n          setDestinationCategories(data.categories);\n          console.log('✅ Destination categories loaded:', data.categories);\n        } else {\n          console.error('❌ Failed to load destination categories:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading destination categories:', error);\n        // Set fallback categories if API fails\n        setDestinationCategories(['Europe', 'Worldwide']);\n      } finally {\n        setIsLoadingCategories(false);\n      }\n    };\n    loadDestinationCategories();\n  }, []);\n\n  // Load countries for each category when categories are loaded\n  useEffect(() => {\n    const loadCountriesForCategories = async () => {\n      if (destinationCategories.length === 0) return;\n      try {\n        setIsLoadingCountries(true);\n        const countriesData = {};\n\n        // Load countries for each category\n        for (const category of destinationCategories) {\n          try {\n            const response = await fetch(`http://localhost:5002/api/destination-categories/${encodeURIComponent(category)}/countries`);\n            const data = await response.json();\n            if (data.status === 'success') {\n              countriesData[category] = data.countries;\n            }\n          } catch (error) {\n            console.error(`Error loading countries for ${category}:`, error);\n            countriesData[category] = [];\n          }\n        }\n        setCountriesByCategory(countriesData);\n      } catch (error) {\n        console.error('Error loading countries:', error);\n      } finally {\n        setIsLoadingCountries(false);\n      }\n    };\n    loadCountriesForCategories();\n  }, [destinationCategories]);\n\n  // Generate quotes when component mounts or when form data is complete\n  useEffect(() => {\n    const generateQuotesIfNeeded = async () => {\n      // Only generate quotes if we have basic form data and we're in phase 2\n      if (currentPhase === 2 && quoteOptions.length === 0) {\n        console.log('🔄 Generating quotes on component load...');\n        try {\n          const options = await generateQuoteOptions();\n          setQuoteOptions(options);\n        } catch (error) {\n          console.error('Error generating quotes:', error);\n        }\n      }\n    };\n    generateQuotesIfNeeded();\n  }, [currentPhase]);\n\n  // Helper function to normalize SOAP policy type names to match database\n  const normalizePolicyTypeName = soapPolicyType => {\n    if (!soapPolicyType) return '';\n\n    // Trim and normalize whitespace\n    let normalized = soapPolicyType.trim();\n\n    // Map common SOAP response values to database policy type names\n    const mappings = {\n      // Annual Multi-Trip variants (handle various capitalizations)\n      'Silver Annual Multi-Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi-Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi-Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi-trip': 'Silver Annual Multi-Trip',\n      // lowercase 't'\n      'Gold Annual Multi-trip': 'Gold Annual Multi-Trip',\n      // lowercase 't'\n      'Essential Annual Multi-trip': 'Essential Annual Multi-Trip',\n      // lowercase 't'\n\n      // Single Trip variants\n      'Silver Single Trip': 'Silver Single Trip',\n      'Gold Single Trip': 'Gold Single Trip',\n      'Essential Single Trip': 'Essential Single Trip',\n      'Value Single Trip': 'Value Single Trip',\n      // Long Stay variants\n      'Long Stay Standard': 'Long Stay Standard',\n      'Long Stay Study Abroad': 'Long Stay Study Abroad',\n      'Longstay Standard': 'Long Stay Standard',\n      'Longstay Study Abroad': 'Long Stay Study Abroad'\n    };\n\n    // Try exact match first (case-insensitive)\n    for (const [key, value] of Object.entries(mappings)) {\n      if (normalized.toLowerCase() === key.toLowerCase()) {\n        console.log(`✅ Exact match found! Normalized policy type: \"${normalized}\" -> \"${value}\"`);\n        return value;\n      }\n    }\n    console.log(`⚠️ No exact mapping found for: \"${normalized}\", trying pattern matching...`);\n\n    // Try pattern matching if exact match fails\n    const lowerNormalized = normalized.toLowerCase();\n\n    // Silver Annual Multi-Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Annual Multi-Trip\"`);\n      return 'Silver Annual Multi-Trip';\n    }\n\n    // Gold Annual Multi-Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Annual Multi-Trip\"`);\n      return 'Gold Annual Multi-Trip';\n    }\n\n    // Essential Annual Multi-Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Annual Multi-Trip\"`);\n      return 'Essential Annual Multi-Trip';\n    }\n\n    // Silver Single Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Single Trip\"`);\n      return 'Silver Single Trip';\n    }\n\n    // Gold Single Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Single Trip\"`);\n      return 'Gold Single Trip';\n    }\n\n    // Essential Single Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Single Trip\"`);\n      return 'Essential Single Trip';\n    }\n\n    // Value Single Trip patterns\n    if (lowerNormalized.includes('value') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Value Single Trip\"`);\n      return 'Value Single Trip';\n    }\n\n    // Long Stay patterns\n    if (lowerNormalized.includes('long') && lowerNormalized.includes('stay')) {\n      if (lowerNormalized.includes('study') || lowerNormalized.includes('abroad')) {\n        console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Study Abroad\"`);\n        return 'Long Stay Study Abroad';\n      }\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Standard\"`);\n      return 'Long Stay Standard';\n    }\n\n    // If no match found, return original and log warning\n    console.warn(`⚠️ No mapping found for policy type: \"${normalized}\"`);\n    return normalized;\n  };\n\n  // Fetch addons when entering Step 3 (Add-ons phase)\n  useEffect(() => {\n    const fetchAddons = async () => {\n      var _formData$selectedQuo3, _formData$selectedQuo4, _formData$selectedQuo5, _formData$selectedQuo6, _formData$selectedQuo7, _formData$selectedQuo8, _formData$selectedQuo9, _formData$selectedQuo0;\n      // Only fetch addons when we're in Step 3 (Add-ons phase)\n      if (currentPhase !== 3) {\n        console.log('ℹ️ Not in Step 3, skipping addon fetch (current phase:', currentPhase, ')');\n        return;\n      }\n\n      // Debug: Log the entire selected quote to see all available fields\n      console.log('🔍 DEBUG - Selected Quote:', formData.selectedQuote);\n      console.log('📍 Current Phase:', currentPhase, '- Fetching add-ons for Step 3');\n\n      // Only fetch if we have a selected quote with a policy type name\n      // IMPORTANT: prioritize policytypeName first as it contains the full name (e.g., \"Silver Annual Multi-Trip\")\n      // policyTypeName often just contains \"Annual Multi-Trip\" without the tier (Silver/Gold/Essential)\n      const rawPolicyTypeName = ((_formData$selectedQuo3 = formData.selectedQuote) === null || _formData$selectedQuo3 === void 0 ? void 0 : _formData$selectedQuo3.policytypeName) || ((_formData$selectedQuo4 = formData.selectedQuote) === null || _formData$selectedQuo4 === void 0 ? void 0 : _formData$selectedQuo4.policyTypeName) || ((_formData$selectedQuo5 = formData.selectedQuote) === null || _formData$selectedQuo5 === void 0 ? void 0 : _formData$selectedQuo5.typePolicyName);\n      console.log('🔍 DEBUG - Policy type field values:', {\n        policyTypeName: (_formData$selectedQuo6 = formData.selectedQuote) === null || _formData$selectedQuo6 === void 0 ? void 0 : _formData$selectedQuo6.policyTypeName,\n        policytypeName: (_formData$selectedQuo7 = formData.selectedQuote) === null || _formData$selectedQuo7 === void 0 ? void 0 : _formData$selectedQuo7.policytypeName,\n        typePolicyName: (_formData$selectedQuo8 = formData.selectedQuote) === null || _formData$selectedQuo8 === void 0 ? void 0 : _formData$selectedQuo8.typePolicyName,\n        rawPolicyTypeName: rawPolicyTypeName,\n        selectedField: (_formData$selectedQuo9 = formData.selectedQuote) !== null && _formData$selectedQuo9 !== void 0 && _formData$selectedQuo9.policytypeName ? 'policytypeName' : (_formData$selectedQuo0 = formData.selectedQuote) !== null && _formData$selectedQuo0 !== void 0 && _formData$selectedQuo0.policyTypeName ? 'policyTypeName' : 'typePolicyName'\n      });\n      if (rawPolicyTypeName) {\n        // Normalize the policy type name to match database\n        const policyTypeName = normalizePolicyTypeName(rawPolicyTypeName);\n        console.log('📋 Fetching addons for policy type:', policyTypeName, '(raw:', rawPolicyTypeName, ')');\n        setIsLoadingAddons(true);\n        try {\n          const response = await getAddonsByPolicyType(policyTypeName);\n          if (response.status === 'success') {\n            const addonsData = response.addons || [];\n            console.log(`✅ Loaded ${addonsData.length} addons for ${policyTypeName}`);\n\n            // Transform database addons to AdditionalPolicy format\n            const transformedAddons = addonsData.map(addon => {\n              // Create a descriptive name combining cover name and details\n              const displayName = addon.additional_cover_detail ? `${addon.additional_cover_name} - ${addon.additional_cover_detail}` : addon.additional_cover_name;\n\n              // Determine icon based on addon type\n              const getIcon = name => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                if (lowerName.includes('business')) return '💼';\n                if (lowerName.includes('golf')) return '⛳';\n                if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                if (lowerName.includes('wedding')) return '💍';\n                if (lowerName.includes('event')) return '🎫';\n                if (lowerName.includes('cancellation')) return '❌';\n                if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                if (lowerName.includes('accident')) return '🚑';\n                if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                if (lowerName.includes('emigration')) return '🌍';\n                if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                return '📋'; // Default icon\n              };\n\n              // Determine category based on addon type\n              const getCategory = name => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                if (lowerName.includes('business')) return 'Business';\n                if (lowerName.includes('cancellation')) return 'Cancellation';\n                if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                return 'Other';\n              };\n              return {\n                id: `addon-${addon.alteration_id}`,\n                name: displayName,\n                description: addon.additional_cover_detail || addon.additional_cover_name,\n                price: 0,\n                // Price will be updated from SOAP response\n                icon: getIcon(addon.additional_cover_name),\n                category: getCategory(addon.additional_cover_name),\n                alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n              };\n            });\n            setAvailableAdditionalPolicies(transformedAddons);\n          } else {\n            console.warn('No addons found for policy type:', policyTypeName);\n            setAvailableAdditionalPolicies([]);\n          }\n        } catch (error) {\n          console.error('Error fetching addons:', error);\n          // Keep empty array on error\n          setAvailableAdditionalPolicies([]);\n        } finally {\n          setIsLoadingAddons(false);\n        }\n      } else {\n        var _formData$selectedQuo1;\n        // No policy type selected, try to extract from quote name as fallback\n        if ((_formData$selectedQuo1 = formData.selectedQuote) !== null && _formData$selectedQuo1 !== void 0 && _formData$selectedQuo1.name) {\n          console.warn('⚠️ No policy type field found, attempting to extract from quote name:', formData.selectedQuote.name);\n\n          // Try to extract policy type from the name field\n          // Format is usually: \"SchemaName - PolicyTypeName\"\n          const nameParts = formData.selectedQuote.name.split(' - ');\n          if (nameParts.length > 1) {\n            const extractedPolicyType = nameParts[1].trim();\n            console.log('🔍 Extracted policy type from name:', extractedPolicyType);\n            const normalizedType = normalizePolicyTypeName(extractedPolicyType);\n            if (normalizedType) {\n              setIsLoadingAddons(true);\n              try {\n                const response = await getAddonsByPolicyType(normalizedType);\n                if (response.status === 'success') {\n                  const addonsData = response.addons || [];\n                  console.log(`✅ Loaded ${addonsData.length} addons using extracted type: ${normalizedType}`);\n                  const transformedAddons = addonsData.map(addon => {\n                    const displayName = addon.additional_cover_detail ? `${addon.additional_cover_name} - ${addon.additional_cover_detail}` : addon.additional_cover_name;\n                    const getIcon = name => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                      if (lowerName.includes('business')) return '💼';\n                      if (lowerName.includes('golf')) return '⛳';\n                      if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                      if (lowerName.includes('wedding')) return '💍';\n                      if (lowerName.includes('event')) return '🎫';\n                      if (lowerName.includes('cancellation')) return '❌';\n                      if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                      if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                      if (lowerName.includes('accident')) return '🚑';\n                      if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                      if (lowerName.includes('emigration')) return '🌍';\n                      if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                      if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                      return '📋';\n                    };\n                    const getCategory = name => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                      if (lowerName.includes('business')) return 'Business';\n                      if (lowerName.includes('cancellation')) return 'Cancellation';\n                      if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                      if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                      if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                      return 'Other';\n                    };\n                    return {\n                      id: `addon-${addon.alteration_id}`,\n                      name: displayName,\n                      description: addon.additional_cover_detail || addon.additional_cover_name,\n                      price: 0,\n                      // Price will be updated from SOAP response\n                      icon: getIcon(addon.additional_cover_name),\n                      category: getCategory(addon.additional_cover_name),\n                      alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n                    };\n                  });\n                  setAvailableAdditionalPolicies(transformedAddons);\n                }\n              } catch (error) {\n                console.error('Error fetching addons with extracted type:', error);\n                setAvailableAdditionalPolicies([]);\n              } finally {\n                setIsLoadingAddons(false);\n              }\n              return;\n            }\n          }\n        }\n        console.warn('⚠️ No policy type found in selected quote, clearing addons');\n        setAvailableAdditionalPolicies([]);\n      }\n    };\n    fetchAddons();\n  }, [currentPhase, formData.selectedQuote]); // Trigger when entering Step 3 OR when quote changes\n\n  // Reset addons and pricing when the selected quote changes\n  useEffect(() => {\n    if (formData.selectedQuote) {\n      console.log('Quote changed, resetting addons and pricing...');\n\n      // Clear existing addons\n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: []\n      }));\n\n      // Reset SOAP pricing\n      setTotalGrossPriceWithAddons(null);\n\n      // Clear available addons to force refresh\n      setAvailableAdditionalPolicies([]);\n      console.log('✅ Addons and pricing reset for new quote');\n    }\n  }, [(_formData$selectedQuo10 = formData.selectedQuote) === null || _formData$selectedQuo10 === void 0 ? void 0 : _formData$selectedQuo10.id]); // Only trigger when the quote ID actually changes\n\n  // REMOVED: Auto-loading sample quotes - now using real SOAP response\n  // useEffect(() => {\n  //   if (currentPhase === 2) {\n  //     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n  //     const sampleQuotes = generateSampleSOAPQuotes();\n  //     setQuoteOptions(sampleQuotes);\n  //     setIsLoadingQuotes(false);\n  //   }\n  // }, [currentPhase]);\n\n  const generateQuoteOptions = async () => {\n    setIsLoadingQuotes(true);\n    setQuoteError('');\n    try {\n      var _response$quoteResult;\n      console.log('🚀 Getting real quotes from Terracotta SOAP API...');\n      console.log('Form data:', formData);\n\n      // Make a single SOAP request to get all available quotes\n      const terracottaRequest = TerracottaService.convertToTerracottaFormat(formData, availablePolicyTypes);\n      console.log('SOAP Request:', terracottaRequest);\n\n      // Get quotes from Terracotta SOAP API\n      const response = await terracottaService.provideQuotation(terracottaRequest);\n      console.log('SOAP Response:', response);\n      console.log('📊 SOAP Response Message:', response.Message);\n      console.log('📊 Quote Results Count:', ((_response$quoteResult = response.quoteResults) === null || _response$quoteResult === void 0 ? void 0 : _response$quoteResult.length) || 0);\n      if (response.quoteResults && response.quoteResults.length > 0) {\n        console.log('📊 Processing SOAP results:', response.quoteResults);\n        // Convert SOAP response directly to QuoteOption format\n        const realQuotes = response.quoteResults.map((result, index) => {\n          console.log(`Processing quote ${index + 1}:`, result);\n          return {\n            id: `soap-${result.QuoteID}`,\n            name: `${result.schemaName} - ${result.policytypeName || result.typePolicyName}`,\n            type: result.isBestBuy === 1 ? 'premium' : result.GrossPrice > 100 ? 'standard' : 'basic',\n            price: result.GrossPrice || 0,\n            coverage: {\n              medical: result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : '€2,000,000',\n              baggage: '€1,000',\n              // This would ideally come from SOAP response\n              cancellation: '€2,000',\n              // This would ideally come from SOAP response\n              activities: ['Standard activities', 'Adventure sports']\n            },\n            features: ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection', ...(result.isAnnual === 1 ? ['Annual Multi-Trip Coverage'] : []), ...(result.isBestBuy === 1 ? ['Best Buy Option'] : []), ...(result.maxDaysPerTrip > 0 ? [`Up to ${result.maxDaysPerTrip} days per trip`] : [])],\n            // Real SOAP response data\n            terracottaQuoteId: result.QuoteID,\n            schemaName: result.schemaName,\n            policytypeName: result.policytypeName,\n            policyTypeName: result.typePolicyName || result.policytypeName,\n            typePolicyName: result.typePolicyName || result.policytypeName,\n            summaryOfCoverUrl: result.SI,\n            policyWordingUrl: result.PW,\n            currency: result.currency,\n            ipt: result.IPT,\n            // Complete SOAP response fields\n            schemaID: result.SchemaID,\n            destinationCategory: result.destinationName,\n            tripType: formData.tripType,\n            residenceName: result.residenceName,\n            destinationName: result.destinationName,\n            packageName: result.packageName,\n            typePackageName: result.typePackageName,\n            isAnnual: result.isAnnual,\n            isBestBuy: result.isBestBuy,\n            isBestBuyText: result.isBestBuyText,\n            maxDaysPerTrip: result.maxDaysPerTrip,\n            coverLevel: result.coverLevel,\n            discount: result.Discount,\n            iconURL: result.IconURL,\n            helpFile: result.HelpFile,\n            policytypeShortName: result.policytypeShortName,\n            // Additional SOAP fields\n            keyFactsUrl: result.KF,\n            policyTypeID: result.PolicyTypeID,\n            destinationID: result.DestinationID,\n            packageID: result.PackageID,\n            screeningPremium: result.screeningPremium,\n            ipRate: result.IPTRate,\n            netUW: result.netUW,\n            wbComm: result.wbComm,\n            agentComm: result.agentComm,\n            SummaryCovers: result.SummaryCovers || [],\n            // Document URLs\n            SI: result.SI,\n            PW: result.PW\n          };\n        });\n        console.log(`✅ Received ${realQuotes.length} real quotes from Terracotta SOAP API`);\n\n        // Sort by IPT (highest first) and take top 3\n        const sortedByIPT = realQuotes.sort((a, b) => {\n          const iptA = a.ipt || 0;\n          const iptB = b.ipt || 0;\n          return iptB - iptA; // Descending order (highest IPT first)\n        });\n        const top3Quotes = sortedByIPT.slice(0, 3);\n\n        // Sort the top 3 by price (ascending - least expensive to most expensive)\n        const sortedByPrice = top3Quotes.sort((a, b) => a.price - b.price);\n        console.log(`📊 Filtered to top 3 quotes with highest IPT, sorted by price:`, sortedByPrice.map(q => ({\n          name: q.name,\n          price: q.price,\n          ipt: q.ipt\n        })));\n        setIsLoadingQuotes(false);\n        return sortedByPrice;\n      } else {\n        console.log('⚠️ No quotes in SOAP response, using sample data');\n        console.log('⚠️ Response message:', response.Message);\n        console.log('⚠️ This might be due to:');\n        console.log('   - Incorrect API credentials');\n        console.log('   - Invalid parameter values');\n        console.log('   - API restrictions or downtime');\n        console.log('   - Date range issues (past dates)');\n        setIsLoadingQuotes(false);\n        return generateSampleSOAPQuotes();\n      }\n    } catch (error) {\n      console.error('❌ Error getting real SOAP quotes:', error);\n      setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');\n      setIsLoadingQuotes(false);\n\n      // Fallback to sample SOAP response data\n      console.log('🔄 Using sample SOAP response data');\n      return generateSampleSOAPQuotes();\n    }\n  };\n\n  // Generate sample quotes using your SOAP response data\n  const generateSampleSOAPQuotes = () => {\n    const allSampleQuotes = [{\n      id: 'soap-12345',\n      name: 'TravelSafe Basic 2024 - Single Trip Travel Insurance',\n      type: 'premium',\n      // Best buy\n      price: 72.60,\n      coverage: {\n        medical: '€5,000,000',\n        // Cover level 5\n        baggage: '€1,000',\n        cancellation: '€2,000',\n        activities: ['Standard activities', 'Adventure sports']\n      },\n      features: ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection', 'Best Buy Option', 'Up to 90 days per trip'],\n      // Real SOAP response data from QuoteID 12345\n      terracottaQuoteId: '12345',\n      schemaName: 'TravelSafe Basic 2024',\n      policyTypeName: 'Single Trip Travel Insurance',\n      typePolicyName: 'Single Trip Travel Insurance',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/12345.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/12345.pdf',\n      currency: 'EUR',\n      ipt: 12.60,\n      // Complete SOAP response fields\n      schemaID: 683,\n      destinationCategory: 'Europe',\n      tripType: formData.tripType,\n      residenceName: 'Greece',\n      destinationName: 'Europe',\n      packageName: 'TravelSafe Standard',\n      typePackageName: 'Standard Package',\n      isAnnual: 0,\n      isBestBuy: 1,\n      isBestBuyText: 'Best Value Option',\n      maxDaysPerTrip: 90,\n      coverLevel: 5,\n      discount: 0.00,\n      iconURL: 'https://terracotta.example.com/icons/basic.png',\n      helpFile: 'https://terracotta.example.com/help/12345.html',\n      policytypeShortName: 'Single Trip',\n      // Additional SOAP fields\n      keyFactsUrl: 'https://terracotta.example.com/keyfacts/12345.pdf',\n      policyTypeID: 1,\n      destinationID: 2,\n      packageID: 1,\n      screeningPremium: 0.00,\n      ipRate: 21.00,\n      netUW: 60.00,\n      wbComm: 5.40,\n      agentComm: 7.20\n    }, {\n      id: 'soap-12346',\n      name: 'TravelSafe Premium 2024 - Single Trip Travel Insurance',\n      type: 'standard',\n      price: 108.90,\n      coverage: {\n        medical: '€10,000,000',\n        // Cover level 10\n        baggage: '€1,000',\n        cancellation: '€2,000',\n        activities: ['Standard activities', 'Adventure sports']\n      },\n      features: ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection', 'Up to 120 days per trip'],\n      // Real SOAP response data from QuoteID 12346\n      terracottaQuoteId: '12346',\n      schemaName: 'TravelSafe Premium 2024',\n      policyTypeName: 'Single Trip Travel Insurance',\n      typePolicyName: 'Single Trip Travel Insurance',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/12346.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/12346.pdf',\n      currency: 'EUR',\n      ipt: 18.90,\n      // Complete SOAP response fields\n      schemaID: 717,\n      destinationCategory: 'Europe',\n      tripType: formData.tripType,\n      residenceName: 'Greece',\n      destinationName: 'Europe',\n      packageName: 'TravelSafe Premium',\n      typePackageName: 'Premium Package',\n      isAnnual: 0,\n      isBestBuy: 0,\n      isBestBuyText: '',\n      maxDaysPerTrip: 120,\n      coverLevel: 10,\n      discount: 0.00,\n      iconURL: 'https://terracotta.example.com/icons/premium.png',\n      helpFile: 'https://terracotta.example.com/help/12346.html',\n      policytypeShortName: 'Single Trip',\n      // Additional SOAP fields\n      keyFactsUrl: 'https://terracotta.example.com/keyfacts/12346.pdf',\n      policyTypeID: 1,\n      destinationID: 2,\n      packageID: 2,\n      screeningPremium: 0.00,\n      ipRate: 21.00,\n      netUW: 90.00,\n      wbComm: 8.10,\n      agentComm: 10.80\n    }];\n\n    // Sort by IPT (highest first) and take top 3\n    const sortedByIPT = allSampleQuotes.sort((a, b) => {\n      const iptA = a.ipt || 0;\n      const iptB = b.ipt || 0;\n      return iptB - iptA; // Descending order (highest IPT first)\n    });\n    const top3 = sortedByIPT.slice(0, 3);\n\n    // Sort the top 3 by price (ascending - least expensive to most expensive)\n    return top3.sort((a, b) => a.price - b.price);\n  };\n\n  // Helper function to calculate coverage levels using real SOAP data\n  const calculateRealCoverageLevels = (result, destination, tripType) => {\n    // Use real data from SOAP response when available, fallback to calculated values\n    const baseMedical = result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : tripType === 'annual' ? '€5,000,000' : '€2,000,000';\n    const baseBaggage = '€1,000'; // This would ideally come from SOAP response\n    const baseCancellation = '€2,000'; // This would ideally come from SOAP response\n\n    // Enhance coverage based on destination category and SOAP data\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n\n    // Use SOAP cover level if available\n    if (result.coverLevel > 0) {\n      medicalMultiplier = 1; // Use the real cover level from SOAP\n    }\n    return {\n      medical: result.coverLevel > 0 ? baseMedical : `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to generate features using real SOAP data\n  const generateFeaturesFromSOAPData = (result, destination, tripType) => {\n    const baseFeatures = ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection'];\n    const soapFeatures = [];\n    const destinationFeatures = [];\n\n    // Add features based on SOAP response data\n    if (result.isAnnual === 1) {\n      soapFeatures.push('Annual Multi-Trip Coverage', 'Unlimited Trips', 'Annual Policy Benefits');\n    }\n    if (result.isBestBuy === 1) {\n      soapFeatures.push('Best Buy Policy', result.isBestBuyText || 'Recommended Option');\n    }\n    if (result.maxDaysPerTrip > 0) {\n      soapFeatures.push(`Up to ${result.maxDaysPerTrip} days per trip`);\n    }\n    if (result.discount > 0) {\n      soapFeatures.push(`${result.discount}% Discount Applied`);\n    }\n\n    // Add destination-specific features\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    return [...baseFeatures, ...soapFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to calculate coverage levels based on destination and trip type (fallback)\n  const calculateCoverageLevels = (destination, tripType, price) => {\n    const baseMedical = tripType === 'annual' ? '€5,000,000' : tripType === 'longstay' ? '€3,000,000' : '€2,000,000';\n    const baseBaggage = '€1,000';\n    const baseCancellation = '€2,000';\n\n    // Enhance coverage based on destination category\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n\n    // Enhance based on price level\n    if (price > 200) {\n      medicalMultiplier *= 2;\n      baggageMultiplier *= 2;\n      cancellationMultiplier *= 2;\n    } else if (price > 100) {\n      medicalMultiplier *= 1.5;\n      baggageMultiplier *= 1.5;\n      cancellationMultiplier *= 1.5;\n    }\n    return {\n      medical: `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to determine quote type based on price and index\n  const determineQuoteType = (price, index) => {\n    if (price < 50) return 'basic';\n    if (price < 150) return 'standard';\n    return 'premium';\n  };\n\n  // Helper function to generate features based on destination and trip type\n  const generateFeaturesForDestination = (destination, tripType) => {\n    const baseFeatures = ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection'];\n    const destinationFeatures = [];\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    if (tripType === 'annual') {\n      destinationFeatures.push('Multiple Trip Coverage', 'Annual Policy Benefits', 'Unlimited Trips');\n    } else if (tripType === 'longstay') {\n      destinationFeatures.push('Extended Stay Coverage', 'Long Term Medical', 'Extended Baggage Protection', 'Long Stay Benefits');\n    } else if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    return [...baseFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to generate activities based on destination\n  const generateActivitiesForDestination = destination => {\n    const baseActivities = ['Standard activities'];\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      return ['Standard activities', 'Adventure sports', 'Extreme sports', 'Water sports', 'Winter sports'];\n    } else if (destination.toLowerCase().includes('europe')) {\n      return ['Standard activities', 'Adventure sports', 'Winter sports'];\n    }\n    return baseActivities;\n  };\n\n  // Enhanced mock quote generation that simulates Terracotta-style data\n  const generateEnhancedMockQuoteOptions = () => {\n    const days = formData.startDate && formData.endDate ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24)) : 7;\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    // Generate multiple mock quotes based on available schemas\n    const mockQuotes = [];\n\n    // Create quotes for each available schema if we have them, otherwise use defaults\n    const schemasToUse = availableProducts.length > 0 ? availableProducts : [{\n      SchemaID: 683,\n      SchemaName: 'TravelSafe Basic'\n    }, {\n      SchemaID: 717,\n      SchemaName: 'TravelSafe Premium'\n    }];\n    schemasToUse.forEach((schema, index) => {\n      const price = Math.round((basePrice + days * dailyRate + index * 30) * formData.numberOfTravelers * tripMultiplier);\n      const coverage = calculateCoverageLevels(formData.destination, formData.tripType, price);\n      const features = generateFeaturesForDestination(formData.destination, formData.tripType);\n      const quoteType = determineQuoteType(price, index);\n      mockQuotes.push({\n        id: `mock-${schema.SchemaID}-${index}`,\n        name: `${schema.SchemaName} - ${formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip'}`,\n        type: quoteType,\n        price: price,\n        coverage: coverage,\n        features: features,\n        // Terracotta specific fields (mock)\n        terracottaQuoteId: `mock-${schema.SchemaID}-${Date.now()}`,\n        schemaName: schema.SchemaName,\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/mock.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/mock.pdf',\n        currency: 'EUR',\n        ipt: Math.round(price * 0.21),\n        // 21% IPT\n        // Additional metadata\n        schemaID: schema.SchemaID,\n        destinationCategory: formData.destination,\n        tripType: formData.tripType\n      });\n    });\n    return mockQuotes;\n  };\n\n  // Legacy mock quotes (kept for backward compatibility)\n  const generateLegacyMockQuoteOptions = () => {\n    const days = formData.startDate && formData.endDate ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24)) : 7;\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n    const options = [{\n      id: 'terracotta-basic',\n      name: 'Terracotta TravelSafe Basic',\n      type: 'basic',\n      price: Math.round((basePrice + days * dailyRate) * formData.numberOfTravelers * tripMultiplier),\n      coverage: {\n        medical: formData.tripType === 'annual' ? '€5,000,000' : '€2,000,000',\n        baggage: '€1,000',\n        cancellation: '€2,000',\n        activities: ['Standard activities']\n      },\n      features: ['Emergency Medical Coverage', 'Trip Cancellation', 'Baggage Protection', '24/7 Assistance'],\n      // Terracotta-specific fields (simulated)\n      terracottaQuoteId: `TC-${Date.now()}-001`,\n      schemaName: 'TravelSafe Basic',\n      policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/basic.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/basic.pdf',\n      currency: 'EUR',\n      ipt: 15.50\n    }, {\n      id: 'terracotta-standard',\n      name: 'Terracotta TravelSafe Standard',\n      type: 'standard',\n      price: Math.round((basePrice + days * dailyRate) * 1.3 * formData.numberOfTravelers * tripMultiplier),\n      coverage: {\n        medical: formData.tripType === 'annual' ? '€10,000,000' : '€5,000,000',\n        baggage: '€2,500',\n        cancellation: '€5,000',\n        activities: ['Standard activities', 'Adventure sports']\n      },\n      features: ['Enhanced Medical Coverage', 'Trip Cancellation & Curtailment', 'Enhanced Baggage Protection', 'Adventure Sports Coverage', '24/7 Assistance', 'Travel Delay Compensation'],\n      // Terracotta-specific fields (simulated)\n      terracottaQuoteId: `TC-${Date.now()}-002`,\n      schemaName: 'TravelSafe Standard',\n      policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/standard.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/standard.pdf',\n      currency: 'EUR',\n      ipt: 22.75\n    }, {\n      id: 'terracotta-premium',\n      name: 'Terracotta TravelSafe Premium',\n      type: 'premium',\n      price: Math.round((basePrice + days * dailyRate) * 1.8 * formData.numberOfTravelers * tripMultiplier),\n      coverage: {\n        medical: formData.tripType === 'annual' ? '€10,000,000' : '€10,000,000',\n        baggage: '€5,000',\n        cancellation: '€10,000',\n        activities: ['All activities', 'Extreme sports', 'Winter sports']\n      },\n      features: ['Maximum Medical Coverage', 'Comprehensive Trip Protection', 'Premium Baggage Coverage', 'All Sports & Activities', '24/7 VIP Assistance', 'Travel Delay & Missed Connections', 'Personal Liability Coverage', 'Emergency Cash Advance'],\n      // Terracotta-specific fields (simulated)\n      terracottaQuoteId: `TC-${Date.now()}-003`,\n      schemaName: 'TravelSafe Premium',\n      policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/premium.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/premium.pdf',\n      currency: 'EUR',\n      ipt: 35.00\n    }];\n    return options;\n  };\n\n  // Custom Date Picker Component\n  const CustomDatePicker = ({\n    id,\n    value,\n    onChange,\n    placeholder,\n    required,\n    minDate\n  }) => {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentDate, setCurrentDate] = useState(() => {\n      // Initialize with selected date if available, otherwise current date\n      return value ? new Date(value) : new Date();\n    });\n    const pickerRef = useRef(null);\n    useEffect(() => {\n      const handleClickOutside = event => {\n        if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n      };\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n      }\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [isOpen]);\n\n    // Update current date when value changes to show the correct month\n    useEffect(() => {\n      if (value) {\n        setCurrentDate(new Date(value));\n      }\n    }, [value]);\n\n    // Helper function to check if a date is valid (not in past and not before minDate)\n    const isDateValid = date => {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n\n      // Reset the input date to start of day for accurate comparison\n      const inputDate = new Date(date);\n      inputDate.setHours(0, 0, 0, 0);\n\n      // Check if date is in the past\n      if (inputDate < today) {\n        return false;\n      }\n\n      // Check if date is before minimum date\n      if (minDate) {\n        const minDateObj = new Date(minDate);\n        minDateObj.setHours(0, 0, 0, 0);\n        if (inputDate < minDateObj) {\n          return false;\n        }\n      }\n      return true;\n    };\n    const generateCalendar = () => {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n      const days = [];\n\n      // Add empty cells for days before the first day of the month\n      for (let i = 0; i < startingDayOfWeek; i++) {\n        days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-day empty\"\n        }, `empty-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1737,\n          columnNumber: 19\n        }, this));\n      }\n\n      // Add days of the month\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = new Date(year, month, day);\n        // Create ISO string manually to avoid timezone issues\n        const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        const isSelected = value === dateString;\n        const isToday = new Date().toDateString() === date.toDateString();\n        const isValid = isDateValid(date);\n        days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `calendar-day ${isSelected ? 'selected' : ''} ${isToday ? 'today' : ''} ${!isValid ? 'disabled' : ''}`,\n          onClick: () => {\n            if (isValid) {\n              onChange(dateString);\n              setIsOpen(false);\n            }\n          },\n          style: {\n            cursor: isValid ? 'pointer' : 'not-allowed',\n            opacity: isValid ? 1 : 0.4\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1750,\n          columnNumber: 11\n        }, this));\n      }\n      return days;\n    };\n    const navigateMonth = direction => {\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n    };\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-date-picker\",\n      ref: pickerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: id,\n          value: value ? formatDateToEuropean(value) : '',\n          onChange: e => {\n            const formattedValue = formatDateInput(e.target.value);\n            const isoDate = formattedValue.length === 10 ? convertToISO(formattedValue) : '';\n\n            // Validate that the date is valid (not in past and not before minDate)\n            if (isoDate) {\n              const inputDate = new Date(isoDate);\n              if (!isDateValid(inputDate)) {\n                // Don't update the value if it's an invalid date\n                return;\n              }\n            }\n            onChange(isoDate);\n          },\n          placeholder: placeholder,\n          title: minDate ? \"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\" : \"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\",\n          pattern: \"\\\\d{2}/\\\\d{2}/\\\\d{4}\",\n          maxLength: 10,\n          required: required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1784,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-icon clickable\",\n          onClick: () => setIsOpen(!isOpen),\n          title: \"Open calendar\",\n          children: \"\\uD83D\\uDCC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1812,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1783,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"calendar-nav-btn\",\n            onClick: () => navigateMonth(-1),\n            children: \"\\u2039\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1824,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"calendar-month-year\",\n            children: [monthNames[currentDate.getMonth()], \" \", currentDate.getFullYear()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1831,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"calendar-nav-btn\",\n            onClick: () => navigateMonth(1),\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1834,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1823,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-weekdays\",\n          children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-weekday\",\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1844,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-days\",\n          children: generateCalendar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1847,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1822,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1782,\n      columnNumber: 7\n    }, this);\n  };\n  _s(CustomDatePicker, \"Z9Sk5PjmSjivFMKzrLcRxEkOb18=\");\n  const handleInputChange = (field, value) => {\n    setFormData(prev => {\n      const newData = {\n        ...prev,\n        [field]: value\n      };\n\n      // If start date is changed, clear end date if it's now invalid\n      if (field === 'startDate' && value && prev.endDate) {\n        const startDate = new Date(value);\n        const endDate = new Date(prev.endDate);\n        startDate.setDate(startDate.getDate() + 1); // Add 1 day to start date\n\n        // If end date is before or equal to start date, clear it\n        if (endDate <= startDate) {\n          newData.endDate = '';\n        }\n      }\n      return newData;\n    });\n  };\n  const handleTravelerChange = (index, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      travelers: prev.travelers.map((traveler, i) => i === index ? {\n        ...traveler,\n        [field]: value\n      } : traveler)\n    }));\n  };\n  const handleNumberOfTravelersChange = count => {\n    setFormData(prev => {\n      const travelers = [...prev.travelers];\n      if (count > travelers.length) {\n        // Add new travelers\n        for (let i = travelers.length; i < count; i++) {\n          travelers.push({\n            firstName: '',\n            lastName: '',\n            age: '',\n            email: '',\n            phone: '',\n            vaxId: '',\n            nationality: ''\n          });\n        }\n      } else if (count < travelers.length) {\n        // Remove travelers\n        travelers.splice(count);\n      }\n      return {\n        ...prev,\n        numberOfTravelers: count,\n        travelers\n      };\n    });\n  };\n  const handleBillingAddressChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      billingAddress: {\n        ...prev.billingAddress,\n        [field]: value\n      }\n    }));\n  };\n\n  // Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\n  const convertToISO = ddmmyyyy => {\n    if (!ddmmyyyy || ddmmyyyy.length !== 10) return '';\n    const [day, month, year] = ddmmyyyy.split('/');\n    // Create date in local timezone to avoid timezone issues\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n    return date.toISOString().split('T')[0];\n  };\n\n  // Helper function to format input as DD/MM/YYYY\n  const formatDateInput = value => {\n    // Remove all non-digits\n    const digits = value.replace(/\\D/g, '');\n\n    // Format as DD/MM/YYYY\n    if (digits.length >= 8) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4, 8)}`;\n    } else if (digits.length >= 4) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4)}`;\n    } else if (digits.length >= 2) {\n      return `${digits.slice(0, 2)}/${digits.slice(2)}`;\n    }\n    return digits;\n  };\n  const fetchGeneralConditions = async () => {\n    var _formData$selectedQuo11;\n    if ((_formData$selectedQuo11 = formData.selectedQuote) !== null && _formData$selectedQuo11 !== void 0 && _formData$selectedQuo11.terracottaQuoteId) {\n      try {\n        console.log('🔄 Fetching general conditions (screening questions) for QuoteID:', formData.selectedQuote.terracottaQuoteId);\n        const screeningResponse = await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);\n        console.log('📥 General Conditions Response:', screeningResponse);\n        if (screeningResponse.screeningQuestions && screeningResponse.screeningQuestions.length > 0) {\n          setGeneralConditionsData(screeningResponse.screeningQuestions);\n          console.log('✅ General conditions loaded from API:', screeningResponse.screeningQuestions);\n          setShowGeneralConditions(true);\n        } else {\n          console.warn('⚠️ No general conditions in API response');\n          setGeneralConditionsData([]);\n          setShowGeneralConditions(true);\n        }\n      } catch (error) {\n        console.error('❌ Error fetching general conditions:', error);\n        // Show empty popup on error\n        setGeneralConditionsData([]);\n        setShowGeneralConditions(true);\n      }\n    }\n  };\n  const handleTermsAcceptance = checked => {\n    setTermsAccepted(checked);\n    if (checked && screeningQuestions.length > 0) {\n      // When checkbox is checked, automatically answer \"yes\" to all screening questions (yesAction)\n      const allYesAnswers = {};\n      screeningQuestions.forEach(question => {\n        allYesAnswers[question.questionNumber] = 'yes';\n      });\n      setScreeningAnswers(allYesAnswers);\n      console.log('✅ Terms accepted - All screening questions answered as \"Yes\" (yesAction triggered)');\n    } else if (!checked) {\n      // When unchecked, clear the screening answers\n      setScreeningAnswers({});\n      console.log('❌ Terms not accepted - Screening answers cleared');\n    }\n  };\n  const nextPhase = async () => {\n    if (currentPhase === 1) {\n      // Generate quotes when moving from phase 1 to 2\n      try {\n        console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');\n        console.log('📋 Current Form Data:', JSON.stringify(formData, null, 2));\n        const options = await generateQuoteOptions();\n        console.log('✅ Quote options received:', options);\n        console.log('📊 Number of quotes:', options.length);\n        setQuoteOptions(options);\n\n        // Automatically pre-select the Essential plan\n        const essentialPlan = options.find(option => {\n          var _option$name, _option$policytypeNam;\n          return ((_option$name = option.name) === null || _option$name === void 0 ? void 0 : _option$name.toLowerCase().includes('essential')) || ((_option$policytypeNam = option.policytypeName) === null || _option$policytypeNam === void 0 ? void 0 : _option$policytypeNam.toLowerCase().includes('essential'));\n        });\n        if (essentialPlan) {\n          console.log('✅ Auto-selected Essential plan:', essentialPlan);\n          setFormData(prev => ({\n            ...prev,\n            selectedQuote: essentialPlan\n          }));\n        } else {\n          console.log('⚠️ No Essential plan found, selecting first available quote');\n          if (options.length > 0) {\n            setFormData(prev => ({\n              ...prev,\n              selectedQuote: options[0]\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('❌ CRITICAL ERROR generating quotes:', error);\n        console.error('Error details:', error instanceof Error ? error.message : String(error));\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n        setQuoteError('Failed to generate quotes. Please try again.');\n        return; // Don't proceed to next phase if quotes failed\n      }\n    }\n    if (currentPhase < 6) {\n      setCurrentPhase(prev => prev + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  const prevPhase = () => {\n    if (currentPhase > 1) {\n      setCurrentPhase(prev => prev - 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  const selectQuote = quote => {\n    setFormData(prev => ({\n      ...prev,\n      selectedQuote: quote\n    }));\n  };\n  const addAdditionalPolicy = async policy => {\n    // Prevent multiple simultaneous requests\n    if (processingAddonId) {\n      return;\n    }\n    try {\n      var _formData$selectedQuo12, _formData$billingAddr, _formData$billingAddr2, _formData$travelers$, _formData$travelers$2;\n      setProcessingAddonId(policy.id);\n\n      // Check if quoteID is available\n      if (!((_formData$selectedQuo12 = formData.selectedQuote) !== null && _formData$selectedQuo12 !== void 0 && _formData$selectedQuo12.terracottaQuoteId)) {\n        alert('Error: No quote selected. Please select a quote first.');\n        return;\n      }\n\n      // Build comma-separated list of alteration IDs (existing + new one)\n      const existingAlterationIds = formData.additionalPolicies.map(p => p.alterationId);\n      const allAlterationIds = [...existingAlterationIds, policy.alterationId].join(',');\n\n      // Convert travelers to Terracotta format\n      const travelers = formData.travelers.map((traveler, index) => {\n        const age = traveler.dateOfBirth ? calculateAgeFromDOB(traveler.dateOfBirth) : parseInt(traveler.age) || 25;\n        const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n        return {\n          TravellerNumber: index + 1,\n          Title: traveler.title || 'Mr',\n          FirstName: traveler.firstName || 'Customer',\n          LastName: traveler.lastName || 'Name',\n          DateOfBirth: formatDateForTerracotta(dateOfBirth),\n          Age: age,\n          TitleID: getTitleID(traveler.title || 'Mr'),\n          AlterationID: '' // Empty for individual traveler alterations\n        };\n      });\n\n      // Build contact details\n      const contactDetails = {\n        Address: ((_formData$billingAddr = formData.billingAddress) === null || _formData$billingAddr === void 0 ? void 0 : _formData$billingAddr.street) || '123 Main Street',\n        Postcode: ((_formData$billingAddr2 = formData.billingAddress) === null || _formData$billingAddr2 === void 0 ? void 0 : _formData$billingAddr2.postalCode) || '12345',\n        Email: ((_formData$travelers$ = formData.travelers[0]) === null || _formData$travelers$ === void 0 ? void 0 : _formData$travelers$.email) || 'customer@example.com',\n        Telephone: ((_formData$travelers$2 = formData.travelers[0]) === null || _formData$travelers$2 === void 0 ? void 0 : _formData$travelers$2.phone) || '+302101234567'\n      };\n\n      // Build SOAP request\n      const alterationsRequest = {\n        userID: '4072',\n        userCode: '111427',\n        quoteID: formData.selectedQuote.terracottaQuoteId,\n        specificQuoteDetails: {\n          AlterationID: allAlterationIds,\n          Travellers: travelers,\n          ContactDetails: contactDetails\n        }\n      };\n\n      // Call SOAP service\n      const response = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n\n      // Extract the updated price from the response\n      if (response.quoteResults && response.quoteResults.length > 0) {\n        const updatedQuote = response.quoteResults[0];\n        const newGrossPrice = updatedQuote.GrossPrice;\n\n        // Store the total GrossPrice (this is the complete price including base + all addons)\n        setTotalGrossPriceWithAddons(newGrossPrice);\n\n        // Add the policy to state (price will be calculated from total)\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      } else {\n        // Still add the addon but with 0 price\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      }\n    } catch (error) {\n      console.error('Error adding addon with alterations:', error);\n      alert(`Error adding addon: ${error instanceof Error ? error.message : 'Unknown error'}. Please try again.`);\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n\n  // Helper functions for date/age calculations\n  const calculateAgeFromDOB = dob => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    return Math.max(0, age);\n  };\n  const calculateDOBFromAge = age => {\n    const currentYear = new Date().getFullYear();\n    const birthYear = currentYear - age;\n    return `${birthYear}/05/20`; // Use May 20 as default date\n  };\n  const formatDateForTerracotta = dateString => {\n    if (!dateString) return '';\n    // Handle different formats\n    if (dateString.includes('/')) {\n      const parts = dateString.split('/');\n      if (parts.length === 3 && parts[0].length === 4) {\n        return dateString; // Already in YYYY/MM/DD format\n      } else if (parts.length === 3) {\n        // Convert DD/MM/YYYY to YYYY/MM/DD\n        return `${parts[2]}/${parts[1]}/${parts[0]}`;\n      }\n    }\n    if (dateString.includes('-')) {\n      return dateString.replace(/-/g, '/');\n    }\n    return dateString;\n  };\n  const getTitleID = title => {\n    const titleMap = {\n      'Mr': 1,\n      'Mrs': 2,\n      'Miss': 3,\n      'Ms': 4,\n      'Dr': 5,\n      'Prof': 6\n    };\n    return titleMap[title] || 1;\n  };\n  const removeAdditionalPolicy = async policyId => {\n    try {\n      var _formData$selectedQuo13;\n      setProcessingAddonId(policyId);\n\n      // Remove the addon from the list first\n      const remainingAddons = formData.additionalPolicies.filter(p => p.id !== policyId);\n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: remainingAddons\n      }));\n\n      // If no addons remaining, reset to base price\n      if (remainingAddons.length === 0) {\n        setTotalGrossPriceWithAddons(null);\n        setProcessingAddonId(null);\n        return;\n      }\n\n      // If there are still addons, call SOAP to get updated price\n      if ((_formData$selectedQuo13 = formData.selectedQuote) !== null && _formData$selectedQuo13 !== void 0 && _formData$selectedQuo13.terracottaQuoteId) {\n        var _formData$billingAddr3, _formData$billingAddr4, _formData$travelers$3, _formData$travelers$4;\n        // Build comma-separated list of remaining alteration IDs\n        const remainingAlterationIds = remainingAddons.map(p => p.alterationId).join(',');\n\n        // Convert travelers to Terracotta format\n        const travelers = formData.travelers.map((traveler, index) => {\n          const age = traveler.dateOfBirth ? calculateAgeFromDOB(traveler.dateOfBirth) : parseInt(traveler.age) || 25;\n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          return {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || 'Customer',\n            LastName: traveler.lastName || 'Name',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            AlterationID: ''\n          };\n        });\n\n        // Build contact details\n        const contactDetails = {\n          Address: ((_formData$billingAddr3 = formData.billingAddress) === null || _formData$billingAddr3 === void 0 ? void 0 : _formData$billingAddr3.street) || '123 Main Street',\n          Postcode: ((_formData$billingAddr4 = formData.billingAddress) === null || _formData$billingAddr4 === void 0 ? void 0 : _formData$billingAddr4.postalCode) || '12345',\n          Email: ((_formData$travelers$3 = formData.travelers[0]) === null || _formData$travelers$3 === void 0 ? void 0 : _formData$travelers$3.email) || 'customer@example.com',\n          Telephone: ((_formData$travelers$4 = formData.travelers[0]) === null || _formData$travelers$4 === void 0 ? void 0 : _formData$travelers$4.phone) || '+302101234567'\n        };\n\n        // Build SOAP request\n        const alterationsRequest = {\n          userID: '4072',\n          userCode: '111427',\n          quoteID: formData.selectedQuote.terracottaQuoteId,\n          specificQuoteDetails: {\n            AlterationID: remainingAlterationIds,\n            Travellers: travelers,\n            ContactDetails: contactDetails\n          }\n        };\n\n        // Call SOAP service\n        const response = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n\n        // Update the GrossPrice\n        if (response.quoteResults && response.quoteResults.length > 0) {\n          const updatedQuote = response.quoteResults[0];\n          const newGrossPrice = updatedQuote.GrossPrice;\n          setTotalGrossPriceWithAddons(newGrossPrice);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating price after addon removal:', error);\n      // Keep the addon removed even if SOAP call fails\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n  const calculateTotalPrice = () => {\n    var _formData$selectedQuo14, _formData$selectedQuo15;\n    // If we have a GrossPrice from SOAP alterations, use that\n    if (totalGrossPriceWithAddons !== null && formData.additionalPolicies.length > 0) {\n      return totalGrossPriceWithAddons;\n    }\n\n    // Otherwise, use the base price + individual addon prices (fallback)\n    const basePrice = typeof ((_formData$selectedQuo14 = formData.selectedQuote) === null || _formData$selectedQuo14 === void 0 ? void 0 : _formData$selectedQuo14.price) === 'number' ? formData.selectedQuote.price : parseFloat(((_formData$selectedQuo15 = formData.selectedQuote) === null || _formData$selectedQuo15 === void 0 ? void 0 : _formData$selectedQuo15.price) || '0');\n    const additionalPrice = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n    return basePrice + additionalPrice;\n  };\n  const generatePolicyPDF = async () => {\n    if (!policyNumber) {\n      console.error('⚠️ Cannot generate PDF: No policy number available');\n      alert('Policy number not available. Please contact support.');\n      return;\n    }\n    console.log('📄 Generating PDF for Policy ID:', policyNumber);\n    await generatePDF(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  };\n  const downloadPolicyPDF = () => {\n    generatePolicyPDF();\n  };\n  const processPayment = async () => {\n    // Validate that both checkboxes are checked before processing payment\n    if (!termsAccepted || !marketingEmailsAccepted) {\n      alert('Please check both checkboxes:\\n\\n1. Accept the Privacy Policy, Terms and Conditions and General conditions\\n2. Accept to receive marketing emails about travel insurance offers\\n\\nBoth are required to proceed with payment.');\n      return;\n    }\n    setIsProcessing(true);\n    try {\n      // First save the quote to database\n      const quoteData = {\n        destination: formData.destination,\n        countryOfResidence: formData.countryOfResidence,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        tripType: formData.tripType,\n        numberOfTravelers: formData.numberOfTravelers,\n        travelers: formData.travelers,\n        selectedQuote: formData.selectedQuote,\n        additionalPolicies: formData.additionalPolicies,\n        totalAmount: calculateTotalPrice()\n      };\n\n      // console.log('Saving quote to database...', quoteData);\n      // console.log('Quote data JSON string:', JSON.stringify(quoteData));\n      const quoteResponse = await createQuote(quoteData);\n      if (quoteResponse.status === 'success' && quoteResponse.data) {\n        var _formData$travelers$5, _formData$travelers$6, _formData$selectedQuo16, _formData$selectedQuo17;\n        const quoteId = quoteResponse.data.quoteId;\n\n        // Convert screening answers to Terracotta format\n        const terracottaScreeningAnswers = Object.entries(screeningAnswers).map(([questionNumber, answer]) => ({\n          questionNumber: parseInt(questionNumber),\n          answer: answer\n        }));\n\n        // Build travelers array and contact details with REAL data from payment step\n        const travelers = formData.travelers.map((traveler, index) => {\n          const age = traveler.dateOfBirth ? calculateAgeFromDOB(traveler.dateOfBirth) : parseInt(traveler.age) || 30;\n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          return {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName,\n            LastName: traveler.lastName,\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            minAge: age,\n            maxAge: age,\n            ScreeningInformation: null\n          };\n        });\n\n        // Build contact details with REAL data from payment step\n        const contactDetails = {\n          Address: formData.billingAddress.street,\n          Postcode: formData.billingAddress.postalCode,\n          Email: ((_formData$travelers$5 = formData.travelers[0]) === null || _formData$travelers$5 === void 0 ? void 0 : _formData$travelers$5.email) || '',\n          Telephone: ((_formData$travelers$6 = formData.travelers[0]) === null || _formData$travelers$6 === void 0 ? void 0 : _formData$travelers$6.phone) || ''\n        };\n        console.log('✅ Using REAL Travelers:', travelers);\n        console.log('✅ Using REAL Contact Details:', contactDetails);\n\n        // Re-fetch quote with REAL traveler data using ProvideQuotation\n        if ((_formData$selectedQuo16 = formData.selectedQuote) !== null && _formData$selectedQuo16 !== void 0 && _formData$selectedQuo16.terracottaQuoteId) {\n          try {\n            console.log('🔄 Re-fetching quote with REAL traveler data using ProvideQuotation...');\n\n            // Build quote request with REAL traveler and contact data\n            const quoteRequestWithRealData = {\n              userID: '4072',\n              userCode: '111427',\n              quoteDetails: {\n                ResidenceID: getResidenceID(formData.countryOfResidence),\n                TypePolicyID: getTypePolicyID(formData.tripType, availablePolicyTypes),\n                TypePackageID: '1',\n                Destination: formData.destination || 'Europe',\n                StartDate: formatDateForTerracotta(formData.startDate),\n                EndDate: formatDateForTerracotta(formData.endDate),\n                Travellers: travelers,\n                // REAL traveler data\n                ContactDetails: contactDetails,\n                // REAL contact data\n                includeAnnualQuotes: formData.tripType === 'annual' ? 1 : 0,\n                includeUpsell: 0,\n                currencyID: 1,\n                schemaIDFilter: '717'\n              }\n            };\n            console.log('📤 ProvideQuotation with REAL data:', quoteRequestWithRealData);\n            const updatedQuoteResponse = await terracottaService.provideQuotation(quoteRequestWithRealData);\n            console.log('📥 Updated quote response:', updatedQuoteResponse);\n\n            // If add-ons were selected, re-fetch with alterations using REAL data\n            if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n              console.log('🔄 Re-fetching quote with add-ons using ProvideQuotationWithAlterations...');\n              const alterationIds = formData.additionalPolicies.map(p => p.alterationId).join(',');\n              const alterationsRequestWithRealData = {\n                userID: '4072',\n                userCode: '111427',\n                quoteID: formData.selectedQuote.terracottaQuoteId,\n                specificQuoteDetails: {\n                  AlterationID: alterationIds,\n                  Travellers: travelers,\n                  // REAL traveler data\n                  ContactDetails: contactDetails // REAL contact data\n                }\n              };\n              console.log('📤 ProvideQuotationWithAlterations with REAL data:', alterationsRequestWithRealData);\n              const updatedAlterationsResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequestWithRealData);\n              console.log('📥 Updated alterations response:', updatedAlterationsResponse);\n            }\n          } catch (updateError) {\n            console.warn('⚠️ Could not update quote with real data, continuing with existing quote:', updateError);\n          }\n        }\n\n        // Save policy details with Terracotta\n        if ((_formData$selectedQuo17 = formData.selectedQuote) !== null && _formData$selectedQuo17 !== void 0 && _formData$selectedQuo17.terracottaQuoteId) {\n          try {\n            console.log('💾 Saving policy details with Terracotta...');\n            console.log('📋 QuoteID:', formData.selectedQuote.terracottaQuoteId);\n            console.log('📋 Screening Answers:', terracottaScreeningAnswers);\n            console.log('👥 Traveler Data (REAL from Payment Step):', formData.travelers);\n            console.log('🏠 Billing Address (REAL from Payment Step):', formData.billingAddress);\n            const savePolicyResponse = await terracottaService.savePolicyDetails({\n              userID: '4072',\n              userCode: '111427',\n              quoteID: formData.selectedQuote.terracottaQuoteId,\n              screeningQuestionAnswers: terracottaScreeningAnswers,\n              medicalScreeningReference: 'string',\n              useDefaultAnswers: 1,\n              travelers: travelers,\n              contactDetails: contactDetails\n            });\n            console.log('✅ SavePolicyDetails response:', savePolicyResponse);\n            console.log('📋 Policy Saved Status:', savePolicyResponse.policySaved);\n            console.log('📋 Policy ID:', savePolicyResponse.policyID);\n            console.log('📄 Certificate URL:', savePolicyResponse.certificate);\n            console.log('📄 Policy Wording URL:', savePolicyResponse.PW);\n            console.log('📄 Summary of Cover URL:', savePolicyResponse.SI);\n\n            // Handle both \"Yes\" and \"true\" formats for policySaved\n            if (savePolicyResponse.policySaved === 'Yes' || savePolicyResponse.policySaved === 'true') {\n              if (!savePolicyResponse.policyID) {\n                console.error('⚠️ Warning: Policy saved but no Policy ID received!');\n                throw new Error('Policy saved but no Policy ID received from Terracotta');\n              }\n              console.log('✅ Policy saved successfully! Policy ID:', savePolicyResponse.policyID);\n              setPolicyNumber(savePolicyResponse.policyID);\n\n              // Store policy document URLs from SavePolicyDetails response\n              const documents = {\n                certificate: savePolicyResponse.certificate || '',\n                policyWording: savePolicyResponse.PW || '',\n                summaryOfCover: savePolicyResponse.SI || '',\n                keyFacts: savePolicyResponse.KF || '',\n                ipid: savePolicyResponse.IPID || ''\n              };\n              console.log('📄 Setting policy documents:', documents);\n              console.log('📄 SavePolicyDetails full response:', savePolicyResponse);\n              setPolicyDocuments(documents);\n\n              // Debug: Check if documents are empty and log\n              if (!documents.certificate) {\n                console.warn('⚠️ Certificate URL not found in SavePolicyDetails response!');\n                console.warn('💡 This might be normal - certificate may need to be generated separately');\n              }\n              if (!documents.policyWording) {\n                console.warn('⚠️ Policy Wording URL not found in SavePolicyDetails response!');\n              }\n              if (!documents.summaryOfCover) {\n                console.warn('⚠️ Summary of Cover URL not found in SavePolicyDetails response!');\n              }\n              if (!documents.certificate && !documents.policyWording && !documents.summaryOfCover) {\n                console.warn('⚠️ No document URLs received from SavePolicyDetails response!');\n                console.warn('💡 Full SavePolicyDetails response:', JSON.stringify(savePolicyResponse, null, 2));\n              }\n\n              // Update database with Terracotta Policy ID and status\n              console.log('💾 Updating database with Terracotta Policy ID...');\n              const paymentData = {\n                quoteId: quoteId,\n                paymentMethod: formData.paymentMethod || 'card',\n                cardNumber: formData.cardNumber || '',\n                expiryDate: formData.expiryDate || '',\n                cvv: formData.cvv || '',\n                billingAddress: formData.billingAddress,\n                amount: calculateTotalPrice(),\n                policyNumber: savePolicyResponse.policyID // Include Terracotta Policy ID\n              };\n              console.log('💳 Updating quote in database with policy details...');\n              const paymentResponse = await apiProcessPayment(paymentData);\n              if (paymentResponse.status === 'success') {\n                console.log('✅ Database updated successfully with Policy ID:', savePolicyResponse.policyID);\n              } else {\n                console.warn('⚠️ Database update failed, but policy was saved in Terracotta');\n              }\n              setIsProcessing(false);\n              nextPhase(); // Move to documents phase\n              return;\n            } else {\n              console.error('❌ Policy save failed. Message:', savePolicyResponse.Message);\n              throw new Error(savePolicyResponse.Message || 'Failed to save policy with Terracotta');\n            }\n          } catch (terracottaError) {\n            console.error('❌ Terracotta policy save error:', terracottaError);\n            // Fall through to regular payment processing\n          }\n        }\n\n        // Fallback to regular payment processing if Terracotta fails\n        const paymentData = {\n          quoteId: quoteId,\n          paymentMethod: formData.paymentMethod,\n          cardNumber: formData.cardNumber,\n          // Note: In production, this should be tokenized\n          expiryDate: formData.expiryDate,\n          cvv: formData.cvv,\n          billingAddress: formData.billingAddress,\n          amount: calculateTotalPrice(),\n          policyNumber: policyNumber || undefined // Include Terracotta Policy ID if available\n        };\n        console.log('💳 Processing payment with data:', {\n          ...paymentData,\n          cardNumber: '****',\n          cvv: '***'\n        });\n        const paymentResponse = await apiProcessPayment(paymentData);\n        if (paymentResponse.status === 'success') {\n          var _paymentResponse$data;\n          if ((_paymentResponse$data = paymentResponse.data) !== null && _paymentResponse$data !== void 0 && _paymentResponse$data.policyNumber) {\n            setPolicyNumber(paymentResponse.data.policyNumber);\n          }\n          setIsProcessing(false);\n          nextPhase(); // Move to documents phase\n        } else {\n          throw new Error(paymentResponse.message || 'Payment failed');\n        }\n      } else {\n        throw new Error(quoteResponse.message || 'Failed to save quote');\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      setIsProcessing(false);\n      alert('Payment processing failed. Please try again. Error: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  };\n  const isPhaseValid = phase => {\n    switch (phase) {\n      case 1:\n        return !!(formData.destination && formData.startDate && formData.endDate && formData.tripType && formData.countryOfResidence);\n      case 2:\n        return !!formData.selectedQuote;\n      case 3:\n        return true;\n      // Additional policies phase is always valid (optional)\n      case 4:\n        return true;\n      // Review phase is always valid\n      case 5:\n        const travelersValid = formData.travelers.every(t => t.firstName && t.lastName && t.age && t.email);\n        const paymentValid = !!(formData.cardNumber && formData.expiryDate && formData.cvv && formData.billingAddress.street && formData.billingAddress.city && formData.billingAddress.postalCode && formData.billingAddress.country);\n        return travelersValid && paymentValid;\n      case 6:\n        return true;\n      // Documents phase is always valid\n      default:\n        return false;\n    }\n  };\n  const renderPhase1 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trip Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2601,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trip Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tripType\",\n          children: [\"Trip Type\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.8em',\n              color: '#666',\n              marginLeft: '5px'\n            },\n            children: isLoadingPolicyTypeDestinations ? '(Loading...)' : `(${availablePolicyTypes.length} types available)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"tripType\",\n          value: formData.tripType,\n          onChange: e => handleInputChange('tripType', e.target.value),\n          required: true,\n          disabled: isLoadingPolicyTypeDestinations,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: isLoadingPolicyTypeDestinations ? 'Loading trip types...' : 'Select trip type'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2620,\n            columnNumber: 13\n          }, this), availablePolicyTypes.map(policyType => {\n            // Map policy type names to trip type values\n            let tripTypeValue = 'single';\n            const name = policyType.TypePolicyName.toLowerCase();\n            if (name.includes('annual')) {\n              tripTypeValue = 'annual';\n            } else if (name.includes('comprehensive')) {\n              tripTypeValue = 'comprehensive';\n            } else if (name.includes('longstay') || name.includes('long stay')) {\n              tripTypeValue = 'longstay';\n            }\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tripTypeValue,\n              children: policyType.TypePolicyName\n            }, policyType.TypePolicyID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2636,\n              columnNumber: 17\n            }, this);\n          }), !isLoadingPolicyTypeDestinations && availablePolicyTypes.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              children: \"Regular Single Trip Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2644,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"annual\",\n              children: \"Annual Multi-Trip Travel Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2645,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comprehensive\",\n              children: \"Comprehensive Single Trip Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2646,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"longstay\",\n              children: \"Long Stay Travel Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2647,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2613,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2606,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countryOfResidence\",\n            children: \"Country of Residence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"countryOfResidence\",\n            value: formData.countryOfResidence,\n            onChange: e => handleInputChange('countryOfResidence', e.target.value),\n            required: true,\n            disabled: isLoadingCountriesOfResidence,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: isLoadingCountriesOfResidence ? 'Loading countries...' : 'Select your country of residence'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2663,\n              columnNumber: 15\n            }, this), countriesOfResidence.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.country_name,\n              children: country.country_name\n            }, country.country_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2667,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2656,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            children: [\"Destination Category\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"help-icon\",\n              onClick: () => setShowHelpPopup(true),\n              title: \"Click to see all countries by category\",\n              children: \"(?)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2677,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"destination\",\n            value: formData.destination,\n            onChange: e => handleInputChange('destination', e.target.value),\n            required: true,\n            disabled: isLoadingCategories,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: isLoadingCategories ? 'Loading categories...' : 'Select destination category'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2692,\n              columnNumber: 15\n            }, this), destinationCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2696,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2685,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            children: [\"Departure Date \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-format-hint\",\n              children: \"(DD/MM/YYYY)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2706,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomDatePicker, {\n            id: \"startDate\",\n            value: formData.startDate,\n            onChange: value => handleInputChange('startDate', value),\n            placeholder: \"DD/MM/YYYY\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2707,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2705,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            children: [\"Return Date \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-format-hint\",\n              children: \"(DD/MM/YYYY)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2716,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomDatePicker, {\n            id: \"endDate\",\n            value: formData.endDate,\n            onChange: value => handleInputChange('endDate', value),\n            placeholder: \"DD/MM/YYYY\",\n            required: true,\n            minDate: formData.startDate ? (() => {\n              // Set minimum date to start date + 1 day\n              const startDate = new Date(formData.startDate);\n              startDate.setDate(startDate.getDate() + 1);\n              return startDate.toISOString().split('T')[0];\n            })() : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2717,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2715,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2704,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numberOfTravelers\",\n          children: \"Number of Travelers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"numberOfTravelers\",\n          value: formData.numberOfTravelers,\n          onChange: e => handleNumberOfTravelersChange(parseInt(e.target.value)),\n          children: [1, 2, 3, 4, 5, 6, 7, 8].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: [num, \" Traveler\", num > 1 ? 's' : '']\n          }, num, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2741,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2735,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2733,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2603,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2600,\n    columnNumber: 5\n  }, this);\n  const renderPhase2 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '2.2em',\n          color: '#333',\n          margin: '0 0 10px 0',\n          fontWeight: 'bold',\n          fontFamily: 'sans-serif'\n        },\n        children: \"Choose Your Insurance Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2752,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1.1em',\n          color: '#666',\n          margin: '0',\n          fontWeight: '400'\n        },\n        children: \"Select the coverage that best fits your travel needs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2761,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2751,\n      columnNumber: 7\n    }, this), isLoadingQuotes && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading insurance quotes from Terracotta...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2774,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2773,\n      columnNumber: 9\n    }, this), quoteError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u26A0\\uFE0F \", quoteError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2780,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Using fallback quotes for demonstration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2781,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2779,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-options\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        gap: '20px',\n        marginTop: '20px',\n        overflowX: 'auto',\n        padding: '20px 0',\n        maxWidth: '100%'\n      },\n      children: quoteOptions.length > 0 ? quoteOptions.map(option => {\n        var _formData$selectedQuo18, _formData$selectedQuo19, _formData$selectedQuo20, _formData$selectedQuo23, _formData$selectedQuo26;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `quote-option ${((_formData$selectedQuo18 = formData.selectedQuote) === null || _formData$selectedQuo18 === void 0 ? void 0 : _formData$selectedQuo18.id) === option.id ? 'selected' : ''}`,\n          onClick: () => selectQuote(option),\n          style: {\n            background: 'white',\n            border: ((_formData$selectedQuo19 = formData.selectedQuote) === null || _formData$selectedQuo19 === void 0 ? void 0 : _formData$selectedQuo19.id) === option.id ? '2px solid #1976d2' : '1px solid #e0e0e0',\n            borderRadius: '8px',\n            padding: '24px',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            boxShadow: ((_formData$selectedQuo20 = formData.selectedQuote) === null || _formData$selectedQuo20 === void 0 ? void 0 : _formData$selectedQuo20.id) === option.id ? '0 4px 12px rgba(25, 118, 210, 0.15)' : '0 2px 8px rgba(0,0,0,0.1)',\n            position: 'relative',\n            minWidth: '320px',\n            maxWidth: '320px',\n            flexShrink: 0\n          },\n          onMouseEnter: e => {\n            var _formData$selectedQuo21;\n            if (((_formData$selectedQuo21 = formData.selectedQuote) === null || _formData$selectedQuo21 === void 0 ? void 0 : _formData$selectedQuo21.id) !== option.id) {\n              e.currentTarget.style.boxShadow = '0 4px 16px rgba(0,0,0,0.15)';\n              e.currentTarget.style.borderColor = '#1976d2';\n            }\n          },\n          onMouseLeave: e => {\n            var _formData$selectedQuo22;\n            if (((_formData$selectedQuo22 = formData.selectedQuote) === null || _formData$selectedQuo22 === void 0 ? void 0 : _formData$selectedQuo22.id) !== option.id) {\n              e.currentTarget.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n              e.currentTarget.style.borderColor = '#e0e0e0';\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                margin: '0 0 8px 0',\n                fontSize: '1.3em',\n                color: '#1976d2',\n                fontWeight: 'bold'\n              },\n              children: option.policytypeName || option.policyTypeName || option.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2830,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0 0 12px 0',\n                fontSize: '0.9em',\n                color: '#666'\n              },\n              children: option.packageName || option.typePackageName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2838,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '16px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '2em',\n                  fontWeight: 'bold',\n                  color: '#333',\n                  lineHeight: '1'\n                },\n                children: [option.currency || '€', option.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2846,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.9em',\n                  color: '#666',\n                  marginTop: '4px'\n                },\n                children: \"per trip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2854,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2845,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2829,\n            columnNumber: 13\n          }, this), option.isBestBuy === 1 && option.isBestBuyText && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px',\n              background: '#e8f5e8',\n              border: '1px solid #4caf50',\n              borderRadius: '6px',\n              padding: '8px',\n              fontSize: '0.85em',\n              color: '#2e7d32',\n              textAlign: 'center',\n              fontWeight: 'bold'\n            },\n            children: [\"\\u2728 \", option.isBestBuyText, \" \\u2728\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2866,\n            columnNumber: 15\n          }, this), option.SummaryCovers && option.SummaryCovers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                fontSize: '1em',\n                fontWeight: 'bold',\n                marginBottom: '12px',\n                color: '#333'\n              },\n              children: \"Coverage Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2884,\n              columnNumber: 17\n            }, this), option.SummaryCovers.map((cover, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px',\n                padding: '8px',\n                background: '#f8f9fa',\n                borderRadius: '4px',\n                fontSize: '0.85em'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  color: '#1976d2',\n                  marginBottom: '4px'\n                },\n                children: cover.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2898,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.9em'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Limit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2906,\n                    columnNumber: 29\n                  }, this), \" \", cover.Limit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2906,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2905,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2891,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2883,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: '100%',\n              padding: '12px',\n              backgroundColor: ((_formData$selectedQuo23 = formData.selectedQuote) === null || _formData$selectedQuo23 === void 0 ? void 0 : _formData$selectedQuo23.id) === option.id ? '#ff6b35' : '#1976d2',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              fontSize: '0.95em',\n              fontWeight: 'bold',\n              cursor: 'pointer',\n              transition: 'background-color 0.3s ease',\n              textTransform: 'uppercase'\n            },\n            onMouseEnter: e => {\n              var _formData$selectedQuo24;\n              e.currentTarget.style.backgroundColor = ((_formData$selectedQuo24 = formData.selectedQuote) === null || _formData$selectedQuo24 === void 0 ? void 0 : _formData$selectedQuo24.id) === option.id ? '#e55a2b' : '#1565c0';\n            },\n            onMouseLeave: e => {\n              var _formData$selectedQuo25;\n              e.currentTarget.style.backgroundColor = ((_formData$selectedQuo25 = formData.selectedQuote) === null || _formData$selectedQuo25 === void 0 ? void 0 : _formData$selectedQuo25.id) === option.id ? '#ff6b35' : '#1976d2';\n            },\n            children: ((_formData$selectedQuo26 = formData.selectedQuote) === null || _formData$selectedQuo26 === void 0 ? void 0 : _formData$selectedQuo26.id) === option.id ? 'SELECTED' : 'SELECT PLAN'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2914,\n            columnNumber: 13\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2796,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: '1 / -1',\n          textAlign: 'center',\n          padding: '40px',\n          color: '#666'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading SOAP quotes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2945,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2939,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2785,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2750,\n    columnNumber: 5\n  }, this);\n  const renderPhase3 = () => {\n    var _formData$selectedQuo27, _formData$selectedQuo28;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enhance Your Coverage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2954,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add optional coverage for extra protection during your trip.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2955,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-plan-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-plan\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Selected Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2959,\n            columnNumber: 11\n          }, this), formData.selectedQuote && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-name\",\n              children: formData.selectedQuote.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2962,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-price\",\n              children: [\"\\u20AC\", formData.selectedQuote.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2963,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2961,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2958,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2957,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additional-policies\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Optional Coverage Add-ons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2970,\n          columnNumber: 9\n        }, this), isLoadingAddons ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading available add-ons...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2979,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2972,\n          columnNumber: 11\n        }, this) : availableAdditionalPolicies.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No additional coverage options available for this policy type.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2989,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2982,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policies-grid\",\n          children: availableAdditionalPolicies.map(policy => {\n            const isSelected = formData.additionalPolicies.some(p => p.id === policy.id);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `policy-card ${isSelected ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"policy-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-icon\",\n                  children: policy.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2998,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: policy.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3000,\n                    columnNumber: 23\n                  }, this), policy.price > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"policy-price\",\n                    children: [\"\\u20AC\", policy.price.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3002,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2999,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `policy-btn ${isSelected ? 'remove' : 'add'}`,\n                  onClick: () => isSelected ? removeAdditionalPolicy(policy.id) : addAdditionalPolicy(policy),\n                  disabled: processingAddonId !== null,\n                  children: processingAddonId === policy.id ? 'PROCESSING...' : isSelected ? 'REMOVE' : 'ADD'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3005,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2997,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"policy-description\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: policy.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3014,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3013,\n                columnNumber: 19\n              }, this)]\n            }, policy.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2996,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2992,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2969,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-summary-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"base-plan\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Base Plan: \", (_formData$selectedQuo27 = formData.selectedQuote) === null || _formData$selectedQuo27 === void 0 ? void 0 : _formData$selectedQuo27.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3026,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u20AC\", (_formData$selectedQuo28 = formData.selectedQuote) === null || _formData$selectedQuo28 === void 0 ? void 0 : _formData$selectedQuo28.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3027,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3025,\n            columnNumber: 11\n          }, this), formData.additionalPolicies.map(policy => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: policy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3031,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: policy.price > 0 ? `€${policy.price.toFixed(2)}` : 'Included in total'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3032,\n              columnNumber: 15\n            }, this)]\n          }, policy.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3030,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-line\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-label\",\n              children: \"Total Premium:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3036,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-amount\",\n              children: [\"\\u20AC\", calculateTotalPrice().toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3037,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3035,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3024,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3023,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2953,\n      columnNumber: 5\n    }, this);\n  };\n  const renderPhase4 = () => {\n    var _formData$selectedQuo29;\n    const calculateTripDuration = () => {\n      if (formData.startDate && formData.endDate) {\n        const start = new Date(formData.startDate);\n        const end = new Date(formData.endDate);\n        const days = Math.ceil((end.getTime() - start.getTime()) / (1000 * 3600 * 24));\n        return days;\n      }\n      return 0;\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Review Your Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3057,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please carefully review all information below. You can go back to make changes if needed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3058,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professional-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDF0D Trip Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3064,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3063,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Insurance Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3069,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formData.tripType === 'single' ? 'Single Trip Insurance' : formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' : 'Comprehensive Single Trip Insurance'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3070,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3068,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Country of Residence:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3078,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formData.countryOfResidence\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3079,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3077,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Destination:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3082,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formData.destination\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3083,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3081,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Departure Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3086,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formatDateToEuropean(formData.startDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3087,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3085,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Return Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3090,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formatDateToEuropean(formData.endDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3091,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3089,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Trip Duration:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3094,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: [calculateTripDuration(), \" days\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3095,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3093,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Number of Travelers:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3098,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: [formData.numberOfTravelers, \" \", formData.numberOfTravelers === 1 ? 'person' : 'people']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3099,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3097,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3067,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3066,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3062,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDEE1\\uFE0F Selected Insurance Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: formData.selectedQuote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plan-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: formData.selectedQuote.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plan-price\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"price-label\",\n                    children: \"Total Premium:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3116,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"price-value\",\n                    children: [\"\\u20AC\", calculateTotalPrice().toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3117,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3115,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coverage-overview\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: {\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                    WebkitBackgroundClip: 'text',\n                    WebkitTextFillColor: 'transparent',\n                    fontSize: '1.5em',\n                    fontWeight: '700',\n                    marginBottom: '20px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '10px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '1.2em'\n                    },\n                    children: \"\\uD83D\\uDEE1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3133,\n                    columnNumber: 23\n                  }, this), \"Coverage Limits\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3122,\n                  columnNumber: 21\n                }, this), formData.selectedQuote.SummaryCovers && formData.selectedQuote.SummaryCovers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n                    gap: '15px',\n                    marginTop: '15px'\n                  },\n                  children: formData.selectedQuote.SummaryCovers.map((cover, index) => {\n                    // Determine icon and color based on cover name\n                    const getIconAndColor = name => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('medical') || lowerName.includes('emergency')) return {\n                        icon: '🏥',\n                        color: '#e74c3c',\n                        bgColor: '#fdeaea'\n                      };\n                      if (lowerName.includes('baggage') || lowerName.includes('luggage')) return {\n                        icon: '🧳',\n                        color: '#3498db',\n                        bgColor: '#eaf2f8'\n                      };\n                      if (lowerName.includes('cancellation')) return {\n                        icon: '❌',\n                        color: '#e67e22',\n                        bgColor: '#fef5e7'\n                      };\n                      if (lowerName.includes('delay')) return {\n                        icon: '⏰',\n                        color: '#9b59b6',\n                        bgColor: '#f4ecf7'\n                      };\n                      if (lowerName.includes('personal') && lowerName.includes('liability')) return {\n                        icon: '⚖️',\n                        color: '#16a085',\n                        bgColor: '#e8f8f5'\n                      };\n                      if (lowerName.includes('accident')) return {\n                        icon: '🚑',\n                        color: '#c0392b',\n                        bgColor: '#fadbd8'\n                      };\n                      if (lowerName.includes('legal')) return {\n                        icon: '⚖️',\n                        color: '#2c3e50',\n                        bgColor: '#ecf0f1'\n                      };\n                      if (lowerName.includes('money') || lowerName.includes('cash')) return {\n                        icon: '💰',\n                        color: '#f39c12',\n                        bgColor: '#fef9e7'\n                      };\n                      if (lowerName.includes('passport') || lowerName.includes('document')) return {\n                        icon: '📄',\n                        color: '#7f8c8d',\n                        bgColor: '#f2f3f4'\n                      };\n                      if (lowerName.includes('rental') || lowerName.includes('vehicle')) return {\n                        icon: '🚗',\n                        color: '#34495e',\n                        bgColor: '#ebedef'\n                      };\n                      if (lowerName.includes('winter') || lowerName.includes('sport')) return {\n                        icon: '⛷️',\n                        color: '#3498db',\n                        bgColor: '#ebf5fb'\n                      };\n                      if (lowerName.includes('personal') && lowerName.includes('effect')) return {\n                        icon: '👜',\n                        color: '#8e44ad',\n                        bgColor: '#f5eef8'\n                      };\n                      return {\n                        icon: '📋',\n                        color: '#27ae60',\n                        bgColor: '#eafaf1'\n                      };\n                    };\n                    const {\n                      icon,\n                      color,\n                      bgColor\n                    } = getIconAndColor(cover.name);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        background: `linear-gradient(135deg, ${bgColor} 0%, #ffffff 100%)`,\n                        border: `2px solid ${bgColor}`,\n                        borderRadius: '12px',\n                        padding: '18px',\n                        transition: 'all 0.3s ease',\n                        cursor: 'pointer',\n                        position: 'relative',\n                        overflow: 'hidden'\n                      },\n                      onMouseEnter: e => {\n                        e.currentTarget.style.transform = 'translateY(-5px)';\n                        e.currentTarget.style.boxShadow = `0 8px 25px rgba(0,0,0,0.15)`;\n                        e.currentTarget.style.borderColor = color;\n                      },\n                      onMouseLeave: e => {\n                        e.currentTarget.style.transform = 'translateY(0)';\n                        e.currentTarget.style.boxShadow = 'none';\n                        e.currentTarget.style.borderColor = bgColor;\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          position: 'absolute',\n                          top: '-20px',\n                          right: '-20px',\n                          width: '80px',\n                          height: '80px',\n                          background: color,\n                          opacity: '0.1',\n                          borderRadius: '50%'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3198,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex',\n                          alignItems: 'flex-start',\n                          gap: '12px',\n                          position: 'relative',\n                          zIndex: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: '2.5em',\n                            background: color,\n                            width: '60px',\n                            height: '60px',\n                            borderRadius: '12px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexShrink: 0,\n                            boxShadow: `0 4px 15px ${color}40`\n                          },\n                          children: icon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3210,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            flex: 1,\n                            minWidth: 0\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '0.9em',\n                              color: '#555',\n                              fontWeight: '500',\n                              marginBottom: '8px',\n                              lineHeight: '1.3'\n                            },\n                            children: cover.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3225,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '1.3em',\n                              fontWeight: '700',\n                              color: color,\n                              marginBottom: '4px'\n                            },\n                            children: cover.Limit\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3234,\n                            columnNumber: 35\n                          }, this), cover.Excess && cover.Excess !== '€0' && cover.Excess !== 'Nil' && /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '0.85em',\n                              color: '#888',\n                              background: '#f8f9fa',\n                              padding: '4px 8px',\n                              borderRadius: '6px',\n                              display: 'inline-block',\n                              marginTop: '4px'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontWeight: '600'\n                              },\n                              children: \"Excess:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3252,\n                              columnNumber: 39\n                            }, this), \" \", cover.Excess]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3243,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3224,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3209,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3177,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3137,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coverage-grid\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"coverage-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"coverage-icon\",\n                      children: \"\\uD83C\\uDFE5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3264,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"coverage-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-type\",\n                        children: \"Medical Emergency\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3266,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-amount\",\n                        children: formData.selectedQuote.coverage.medical\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3267,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3265,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3263,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"coverage-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"coverage-icon\",\n                      children: \"\\uD83E\\uDDF3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3271,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"coverage-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-type\",\n                        children: \"Baggage Protection\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3273,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-amount\",\n                        children: formData.selectedQuote.coverage.baggage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3274,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3272,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3270,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"coverage-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"coverage-icon\",\n                      children: \"\\u274C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3278,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"coverage-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-type\",\n                        children: \"Trip Cancellation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3280,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-amount\",\n                        children: formData.selectedQuote.coverage.cancellation\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3281,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3279,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3277,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3262,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card total-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Base Premium:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3297,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: [\"\\u20AC\", (_formData$selectedQuo29 = formData.selectedQuote) === null || _formData$selectedQuo29 === void 0 ? void 0 : _formData$selectedQuo29.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3298,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3296,\n                columnNumber: 17\n              }, this), formData.additionalPolicies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Additional Policies:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: [\"\\u20AC\", ((_formData$selectedQuo30, _formData$selectedQuo31) => {\n                    // Calculate addon amount as Total Amount - Base Premium\n                    const basePrice = typeof ((_formData$selectedQuo30 = formData.selectedQuote) === null || _formData$selectedQuo30 === void 0 ? void 0 : _formData$selectedQuo30.price) === 'number' ? formData.selectedQuote.price : parseFloat(((_formData$selectedQuo31 = formData.selectedQuote) === null || _formData$selectedQuo31 === void 0 ? void 0 : _formData$selectedQuo31.price) || '0');\n                    const totalAmount = calculateTotalPrice();\n                    const addonAmount = totalAmount - basePrice;\n                    return addonAmount.toFixed(2);\n                  })()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Taxes & Fees:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3315,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: \"Included\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3316,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row final-total\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Total Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3319,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: [\"\\u20AC\", calculateTotalPrice().toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3320,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3060,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3056,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPhase5 = () => {\n    var _formData$selectedQuo32;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3332,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please confirm that all details are correct before proceeding to payment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3333,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Trip:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3337,\n            columnNumber: 11\n          }, this), \" \", formData.destination, \" (\", formatDateToEuropean(formData.startDate), \" to \", formatDateToEuropean(formData.endDate), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3336,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Country of Residence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3340,\n            columnNumber: 11\n          }, this), \" \", formData.countryOfResidence]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3339,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Travelers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3343,\n            columnNumber: 11\n          }, this), \" \", formData.numberOfTravelers, \" person\", formData.numberOfTravelers > 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3342,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plan:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3346,\n            columnNumber: 11\n          }, this), \" \", (_formData$selectedQuo32 = formData.selectedQuote) === null || _formData$selectedQuo32 === void 0 ? void 0 : _formData$selectedQuo32.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3345,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item total\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3349,\n            columnNumber: 11\n          }, this), \" \\u20AC\", calculateTotalPrice().toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3348,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3335,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3331,\n      columnNumber: 5\n    }, this);\n  };\n\n  // Helper function to decode HTML entities and format question text\n  const decodeQuestionText = text => {\n    if (!text) return '';\n\n    // Create a temporary element to decode HTML entities\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = text;\n    let decoded = textarea.value;\n\n    // Replace <BR> tags (after decoding &lt;BR&gt;) with actual line breaks\n    decoded = decoded.replace(/<BR>/gi, '\\n');\n    decoded = decoded.replace(/&lt;BR&gt;/gi, '\\n');\n    return decoded;\n  };\n  const renderPhase6 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Screening Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please answer the following questions to complete your insurance application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screening-questions\",\n      children: screeningQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No screening questions required for this policy.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14px',\n            color: '#666',\n            marginTop: '10px'\n          },\n          children: \"The API returned an empty response or no questions are configured for this quote.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3380,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3378,\n        columnNumber: 11\n      }, this) : screeningQuestions.map((question, index) => {\n        const decodedQuestion = decodeQuestionText(question.question);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screening-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", question.questionNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3390,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            style: {\n              whiteSpace: 'pre-wrap',\n              lineHeight: '1.6',\n              padding: '15px',\n              background: '#f9f9f9',\n              borderRadius: '8px',\n              border: '1px solid #e0e0e0'\n            },\n            children: decodedQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3391,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-options\",\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question.questionNumber}`,\n                value: \"yes\",\n                checked: screeningAnswers[question.questionNumber] === 'yes',\n                onChange: e => setScreeningAnswers(prev => ({\n                  ...prev,\n                  [question.questionNumber]: 'yes'\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3404,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3414,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3403,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question.questionNumber}`,\n                value: \"no\",\n                checked: screeningAnswers[question.questionNumber] === 'no',\n                onChange: e => setScreeningAnswers(prev => ({\n                  ...prev,\n                  [question.questionNumber]: 'no'\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3417,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3427,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3416,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3402,\n            columnNumber: 17\n          }, this), screeningAnswers[question.questionNumber] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `answer-message ${screeningAnswers[question.questionNumber]}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                whiteSpace: 'pre-wrap'\n              },\n              children: screeningAnswers[question.questionNumber] === 'yes' ? decodeQuestionText(question.yesMessage) : decodeQuestionText(question.noMessage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3434,\n              columnNumber: 21\n            }, this), question.yesAction && screeningAnswers[question.questionNumber] === 'yes' && question.yesActionText && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                marginTop: '5px',\n                fontStyle: 'italic'\n              },\n              children: [\"Action: \", question.yesActionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3441,\n              columnNumber: 23\n            }, this), question.noAction && screeningAnswers[question.questionNumber] === 'no' && question.noActionText && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                marginTop: '5px',\n                fontStyle: 'italic'\n              },\n              children: [\"Action: \", question.noActionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3446,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3433,\n            columnNumber: 19\n          }, this)]\n        }, question.questionNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3389,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3372,\n    columnNumber: 5\n  }, this);\n  const renderPhase7 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your payment information to complete your purchase.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-traveler-billing-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Traveler Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3469,\n          columnNumber: 11\n        }, this), formData.travelers.map((traveler, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"traveler-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Traveler \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `title-${index}`,\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `title-${index}`,\n                value: traveler.title || 'Mr',\n                onChange: e => handleTravelerChange(index, 'title', e.target.value),\n                title: \"Select the traveler's title\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Mr\",\n                  children: \"Mr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3483,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Mrs\",\n                  children: \"Mrs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3484,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Miss\",\n                  children: \"Miss\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3485,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Ms\",\n                  children: \"Ms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3486,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Dr\",\n                  children: \"Dr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3487,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Prof\",\n                  children: \"Prof\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3488,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3477,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `firstName-${index}`,\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `firstName-${index}`,\n                value: traveler.firstName,\n                onChange: e => handleTravelerChange(index, 'firstName', e.target.value),\n                placeholder: \"Enter first name\",\n                title: \"Enter the traveler's first name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3493,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `lastName-${index}`,\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3504,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `lastName-${index}`,\n                value: traveler.lastName,\n                onChange: e => handleTravelerChange(index, 'lastName', e.target.value),\n                placeholder: \"Enter last name\",\n                title: \"Enter the traveler's last name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3505,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3503,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `dateOfBirth-${index}`,\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3519,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: `dateOfBirth-${index}`,\n                value: traveler.dateOfBirth || '',\n                onChange: e => {\n                  const dateOfBirth = e.target.value;\n                  // Auto-calculate age from date of birth\n                  if (dateOfBirth) {\n                    const age = calculateAgeFromDateOfBirth(dateOfBirth);\n                    handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                    handleTravelerChange(index, 'age', age.toString());\n                  } else {\n                    handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                  }\n                },\n                title: \"Enter the traveler's date of birth (age will be calculated automatically)\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3520,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `age-${index}`,\n                children: \"Age (Auto-calculated)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3540,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: `age-${index}`,\n                value: traveler.age,\n                onChange: e => handleTravelerChange(index, 'age', e.target.value),\n                placeholder: \"Enter age\",\n                title: \"Age will be calculated from date of birth, but you can override it manually\",\n                min: \"1\",\n                max: \"120\",\n                required: true,\n                readOnly: !!traveler.dateOfBirth,\n                style: {\n                  backgroundColor: traveler.dateOfBirth ? '#f5f5f5' : 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3541,\n                columnNumber: 17\n              }, this), traveler.dateOfBirth && /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  color: '#666',\n                  fontSize: '0.8em'\n                },\n                children: \"Age calculated from date of birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3555,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3539,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `email-${index}`,\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3564,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: `email-${index}`,\n                value: traveler.email,\n                onChange: e => handleTravelerChange(index, 'email', e.target.value),\n                placeholder: \"Enter email address\",\n                title: \"Enter the traveler's email address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3565,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3563,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `phone-${index}`,\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3576,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: `phone-${index}`,\n                value: traveler.phone,\n                onChange: e => handleTravelerChange(index, 'phone', e.target.value),\n                placeholder: \"+30 123 456 7890\",\n                title: \"Enter the traveler's phone number\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3577,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3575,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `vaxId-${index}`,\n              children: \"VAT ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `vaxId-${index}`,\n              value: traveler.vaxId,\n              onChange: e => handleTravelerChange(index, 'vaxId', e.target.value),\n              placeholder: \"Enter VAX ID\",\n              title: \"Enter the traveler's VAX ID (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3591,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3589,\n            columnNumber: 13\n          }, this), index === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              style: {\n                margin: '20px 0',\n                border: 'none',\n                borderTop: '1px solid #e0e0e0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3604,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Billing Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3605,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"street\",\n                children: \"Street Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3607,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"street\",\n                value: formData.billingAddress.street,\n                onChange: e => handleBillingAddressChange('street', e.target.value),\n                placeholder: \"Enter street address\",\n                title: \"Enter your billing street address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3608,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3606,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"city\",\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3620,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"city\",\n                  value: formData.billingAddress.city,\n                  onChange: e => handleBillingAddressChange('city', e.target.value),\n                  placeholder: \"Enter city\",\n                  title: \"Enter your billing city\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3621,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3619,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"postalCode\",\n                  children: \"Postal Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3632,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"postalCode\",\n                  value: formData.billingAddress.postalCode,\n                  onChange: e => handleBillingAddressChange('postalCode', e.target.value),\n                  placeholder: \"Enter postal code\",\n                  title: \"Enter your billing postal code\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3633,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3631,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3618,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"country\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3645,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"country\",\n                value: formData.billingAddress.country,\n                onChange: e => handleBillingAddressChange('country', e.target.value),\n                placeholder: \"Enter country\",\n                title: \"Enter your billing country\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3646,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3644,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3471,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3468,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-method-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-methods\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3667,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-method-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We accept all major credit and debit cards for secure payment processing.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3669,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3668,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3666,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Card Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3674,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardNumber\",\n              children: \"Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3676,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"cardNumber\",\n              value: formData.cardNumber,\n              onChange: e => handleInputChange('cardNumber', e.target.value),\n              placeholder: \"1234 5678 9012 3456\",\n              title: \"Enter your 16-digit card number\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3677,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3675,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"expiryDate\",\n                children: \"Expiry Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3689,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"expiryDate\",\n                value: formData.expiryDate,\n                onChange: e => handleInputChange('expiryDate', e.target.value),\n                placeholder: \"MM/YY\",\n                title: \"Enter card expiry date in MM/YY format\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3690,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3688,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cvv\",\n                children: \"CVV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3701,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"cvv\",\n                value: formData.cvv,\n                onChange: e => handleInputChange('cvv', e.target.value),\n                placeholder: \"123\",\n                title: \"Enter the 3-digit CVV code from the back of your card\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3702,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3700,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3687,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3673,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3665,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3664,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total Amount: \\u20AC\", calculateTotalPrice().toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3719,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3718,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3717,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          required: true,\n          checked: termsAccepted,\n          onChange: e => handleTermsAcceptance(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"I have read and accept the \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-button\",\n            onClick: e => {\n              e.preventDefault();\n              setShowPrivacyPolicy(true);\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#0077b6',\n              textDecoration: 'underline',\n              cursor: 'pointer',\n              padding: 0\n            },\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3731,\n            columnNumber: 44\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-button\",\n            onClick: e => {\n              e.preventDefault();\n              setShowTermsAndConditions(true);\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#0077b6',\n              textDecoration: 'underline',\n              cursor: 'pointer',\n              padding: 0\n            },\n            children: \"Terms and Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3737,\n            columnNumber: 22\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-button\",\n            onClick: e => {\n              e.preventDefault();\n              fetchGeneralConditions();\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#0077b6',\n              textDecoration: 'underline',\n              cursor: 'pointer',\n              padding: 0\n            },\n            children: \"General conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3743,\n            columnNumber: 25\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3731,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          required: true,\n          checked: marketingEmailsAccepted,\n          onChange: e => setMarketingEmailsAccepted(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"I would like to receive marketing emails about travel insurance offers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3758,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3751,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3723,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3461,\n    columnNumber: 5\n  }, this);\n  const renderPhase8 = () => {\n    var _formData$travelers$7, _formData$selectedQuo33, _formData$selectedQuo34;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF89 Congratulations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3766,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your travel insurance has been successfully purchased.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3767,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policy-number\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Policy Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3771,\n            columnNumber: 11\n          }, this), \" \", policyNumber ? policyNumber : 'Processing...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3770,\n          columnNumber: 9\n        }, this), policyNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policy-details\",\n          style: {\n            marginTop: '10px',\n            fontSize: '14px',\n            color: '#666'\n          },\n          children: \"Policy ID received from Terracotta SavePolicyDetails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-email\",\n          children: [\"A confirmation email has been sent to \", (_formData$travelers$7 = formData.travelers[0]) === null || _formData$travelers$7 === void 0 ? void 0 : _formData$travelers$7.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3778,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3769,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"documents-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3784,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14px',\n            color: '#666',\n            marginBottom: '15px'\n          },\n          children: \"Click on any document to open it in a new tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3785,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"document-links\",\n          children: [policyDocuments.summaryOfCover ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.summaryOfCover,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Summary of Cover in new tab\",\n            title: \"View Summary of Cover from Terracotta\",\n            children: \"\\uD83D\\uDCC4 Summary of Cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3791,\n            columnNumber: 13\n          }, this) : (_formData$selectedQuo33 = formData.selectedQuote) !== null && _formData$selectedQuo33 !== void 0 && _formData$selectedQuo33.SI ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: formData.selectedQuote.SI,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Summary of Cover in new tab\",\n            title: \"View Summary of Cover (from quote)\",\n            children: \"\\uD83D\\uDCC4 Summary of Cover (from quote)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3802,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-link disabled\",\n            style: {\n              opacity: 0.5,\n              cursor: 'not-allowed'\n            },\n            children: \"\\uD83D\\uDCC4 Summary of Cover (Not Available)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3813,\n            columnNumber: 13\n          }, this), policyDocuments.policyWording ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.policyWording,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Policy Wording in new tab\",\n            title: \"View Policy Wording from Terracotta\",\n            children: \"\\uD83D\\uDCCB Policy Wording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3820,\n            columnNumber: 13\n          }, this) : (_formData$selectedQuo34 = formData.selectedQuote) !== null && _formData$selectedQuo34 !== void 0 && _formData$selectedQuo34.PW ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: formData.selectedQuote.PW,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Policy Wording in new tab\",\n            title: \"View Policy Wording (from quote)\",\n            children: \"\\uD83D\\uDCCB Policy Wording (from quote)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3831,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-link disabled\",\n            style: {\n              opacity: 0.5,\n              cursor: 'not-allowed'\n            },\n            children: \"\\uD83D\\uDCCB Policy Wording (Not Available)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3842,\n            columnNumber: 13\n          }, this), policyDocuments.certificate ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.certificate,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Certificate in new tab\",\n            title: \"View Certificate from Terracotta\",\n            children: \"\\uD83C\\uDD94 Certificate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3849,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-link disabled\",\n            style: {\n              opacity: 0.5,\n              cursor: 'not-allowed'\n            },\n            children: \"\\uD83C\\uDD94 Certificate (Pending - may be emailed separately)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3860,\n            columnNumber: 13\n          }, this), policyDocuments.keyFacts && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.keyFacts,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Key Facts in new tab\",\n            title: \"View Key Facts from Terracotta\",\n            children: \"\\uD83D\\uDCCB Key Facts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3867,\n            columnNumber: 13\n          }, this), policyDocuments.ipid && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.ipid,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open IPID in new tab\",\n            title: \"View Insurance Product Information Document\",\n            children: \"\\uD83D\\uDCC4 IPID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3881,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadPolicyPDF,\n            className: \"document-link download-btn\",\n            \"aria-label\": \"Download your policy summary as a PDF document\",\n            title: \"Download a PDF copy of your travel insurance policy summary\",\n            type: \"button\",\n            children: \"\\uD83D\\uDCC4 Download Your Policy Summary (PDF)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3894,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3788,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3783,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"What's Next?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3907,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Save your policy documents in a safe place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3909,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Keep the emergency contact numbers with you while traveling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3910,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Download our mobile app for easy access to your policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3911,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Contact us anytime at +30 6974907500 for assistance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3912,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3908,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3906,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3765,\n      columnNumber: 5\n    }, this);\n  };\n  const renderPhaseContent = () => {\n    switch (currentPhase) {\n      case 1:\n        return renderPhase1();\n      // Trip Details\n      case 2:\n        return renderPhase2();\n      // Quotes\n      case 3:\n        return renderPhase3();\n      // Add-ons\n      case 4:\n        return renderPhase4();\n      // Review\n      case 5:\n        return renderPhase7();\n      // Payment\n      case 6:\n        return renderPhase8();\n      // Documents\n      default:\n        return renderPhase1();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3939,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Travel Insurance Quote Wizard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3949,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-progress\",\n          children: [1, 2, 3, 4, 5, 6].map(phase => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-step ${currentPhase >= phase ? 'active' : ''} ${currentPhase === phase ? 'current' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-number\",\n              children: phase\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3953,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-label\",\n              children: [phase === 1 && 'Details', phase === 2 && 'Quotes', phase === 3 && 'Add-ons', phase === 4 && 'Review', phase === 5 && 'Payment', phase === 6 && 'Documents']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3954,\n              columnNumber: 19\n            }, this)]\n          }, phase, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3952,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3950,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3948,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-content\",\n        children: renderPhaseContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3967,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-navigation\",\n        children: [currentPhase > 1 && currentPhase < 6 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: prevPhase,\n          \"aria-label\": \"Go to previous step\",\n          title: \"Go back to the previous step\",\n          type: \"button\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3973,\n          columnNumber: 13\n        }, this), currentPhase < 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: nextPhase,\n          disabled: !isPhaseValid(currentPhase),\n          \"aria-label\": currentPhase === 4 ? 'Proceed to payment step' : 'Go to next step',\n          title: currentPhase === 4 ? 'Continue to payment details' : 'Continue to next step',\n          type: \"button\",\n          children: currentPhase === 4 ? 'Proceed to Payment' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3985,\n          columnNumber: 13\n        }, this), currentPhase === 5 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: processPayment,\n            disabled: !isPhaseValid(currentPhase) || isProcessing,\n            \"aria-label\": isProcessing ? 'Processing payment, please wait' : `Pay €${calculateTotalPrice().toFixed(2)} for your travel insurance`,\n            title: isProcessing ? 'Payment is being processed, please wait' : `Complete payment of €${calculateTotalPrice().toFixed(2)}`,\n            type: \"button\",\n            style: {\n              opacity: !isPhaseValid(currentPhase) || isProcessing ? 0.5 : 1,\n              cursor: !isPhaseValid(currentPhase) || isProcessing ? 'not-allowed' : 'pointer'\n            },\n            children: isProcessing ? 'Processing Payment...' : `Pay €${calculateTotalPrice().toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3999,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), currentPhase === 6 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => window.location.href = '/',\n          \"aria-label\": \"Return to homepage\",\n          title: \"Go back to the main homepage\",\n          type: \"button\",\n          children: \"Return to Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4018,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3971,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3947,\n      columnNumber: 7\n    }, this), showHelpPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowHelpPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Destination Categories & Countries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4036,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowHelpPopup(false),\n            \"aria-label\": \"Close help popup\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4037,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4035,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: isLoadingCountries ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-message\",\n            children: \"Loading countries...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4048,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categories-container\",\n            children: Object.entries(countriesByCategory).map(([category, countries]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"category-title\",\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4053,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"countries-grid\",\n                children: countries.map(country => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"country-item\",\n                  children: country\n                }, country, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 4056,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4054,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-count\",\n                children: [countries.length, \" countries\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 4061,\n                columnNumber: 23\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4052,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4050,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4046,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4034,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4033,\n      columnNumber: 9\n    }, this), showPrivacyPolicy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowPrivacyPolicy(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4078,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowPrivacyPolicy(false),\n            \"aria-label\": \"Close privacy policy\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4079,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4077,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              lineHeight: '1.6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Sample Privacy Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4090,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is a sample Privacy Policy. The actual content will be added later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4091,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"1. Information We Collect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4093,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We collect information that you provide directly to us, including personal information such as your name, email address, date of birth, and travel details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4094,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"2. How We Use Your Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4096,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We use the information we collect to provide, maintain, and improve our services, including processing your insurance quotes and policies.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4097,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"3. Data Security\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4099,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We implement appropriate technical and organizational measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"4. Your Rights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You have the right to access, correct, or delete your personal information. You may also object to or restrict certain processing of your data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"5. Contact Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"If you have any questions about this Privacy Policy, please contact us at privacy@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: '20px',\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: [\"Last updated: \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4089,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4088,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4076,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4075,\n      columnNumber: 9\n    }, this), showTermsAndConditions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowTermsAndConditions(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Terms and Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowTermsAndConditions(false),\n            \"aria-label\": \"Close terms and conditions\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              lineHeight: '1.6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Sample Terms and Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is a sample Terms and Conditions document. The actual content will be added later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"1. Acceptance of Terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"By purchasing travel insurance from us, you agree to be bound by these Terms and Conditions. Please read them carefully before proceeding with your purchase.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"2. Insurance Coverage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The insurance coverage is subject to the terms, conditions, and exclusions set forth in the policy documents. Coverage begins on the start date specified in your policy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"3. Premium Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The insurance premium must be paid in full before coverage begins. All payments are processed securely through our payment gateway.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"4. Claims Process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"In the event of a claim, you must notify us as soon as reasonably possible and provide all required documentation to support your claim.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"5. Cancellation Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You may cancel your policy within the cooling-off period specified in your policy documents for a full refund, provided no claims have been made.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"6. Governing Law\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"These Terms and Conditions are governed by and construed in accordance with applicable insurance regulations.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: '20px',\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: [\"Last updated: \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4119,\n      columnNumber: 9\n    }, this), showGeneralConditions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowGeneralConditions(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"General Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowGeneralConditions(false),\n            \"aria-label\": \"Close general conditions\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              lineHeight: '1.6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Screening Questions & General Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '20px',\n                color: '#666'\n              },\n              children: \"These are the general conditions and screening questions for your selected policy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4182,\n              columnNumber: 17\n            }, this), generalConditionsData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '20px',\n                textAlign: 'center',\n                color: '#666'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No general conditions available for this policy.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4188,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4187,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"screening-questions\",\n              children: generalConditionsData.map((question, index) => {\n                const decodedQuestion = decodeQuestionText(question.question);\n                const decodedNoMessage = question.noMessage ? decodeQuestionText(question.noMessage) : '';\n\n                // Filter out specific unwanted text from the No message\n                const filteredNoMessage = decodedNoMessage.replace(/Yes\\/No \\(If No cannot proceed with purchase\\)\\.\\s*If No:\\s*You must confirm that you have read and accepted the following to purchase this insurance by selecting Yes\\.\\s*If you are unable to agree with any of the following statements, then you are unable to continue with the purchase of this insurance\\.\\s*/gi, '').trim();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '25px',\n                    padding: '15px',\n                    background: '#f9f9f9',\n                    borderRadius: '8px',\n                    border: '1px solid #e0e0e0'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      whiteSpace: 'pre-wrap',\n                      lineHeight: '1.6',\n                      marginBottom: '10px'\n                    },\n                    children: decodedQuestion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 4210,\n                    columnNumber: 27\n                  }, this), question.yesMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: '10px',\n                      fontSize: '14px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        color: '#d9534f'\n                      },\n                      children: \"If Yes:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4220,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        whiteSpace: 'pre-wrap',\n                        marginTop: '5px',\n                        color: '#555'\n                      },\n                      children: decodeQuestionText(question.yesMessage)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4221,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 4219,\n                    columnNumber: 29\n                  }, this), filteredNoMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: '10px',\n                      fontSize: '14px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        color: '#5cb85c'\n                      },\n                      children: \"If No:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4229,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        whiteSpace: 'pre-wrap',\n                        marginTop: '5px',\n                        color: '#555'\n                      },\n                      children: filteredNoMessage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4230,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 4228,\n                    columnNumber: 29\n                  }, this)]\n                }, question.questionNumber, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 4203,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4191,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3938,\n    columnNumber: 5\n  }, this);\n};\n_s2(Quote2, \"+DJnLnvZ7H58zq5Ustv6GJ/WhjA=\");\n_c = Quote2;\nexport default Quote2;\nvar _c;\n$RefreshReg$(_c, \"Quote2\");","map":{"version":3,"names":["React","useState","useEffect","useRef","createQuote","processPayment","apiProcessPayment","getAddonsByPolicyType","TerracottaService","getResidenceID","getTypePolicyID","jsxDEV","_jsxDEV","Fragment","_Fragment","generatePDF","formData","calculateTotalPrice","formatDateToEuropean","policyNumber","_formData$selectedQuo","jsPDF","default","doc","currentDate","Date","toLocaleDateString","setFontSize","text","yPos","tripType","countryOfResidence","destination","startDate","endDate","numberOfTravelers","travelers","forEach","traveler","index","addPage","firstName","lastName","age","email","phone","selectedQuote","name","coverage","medical","baggage","cancellation","features","length","feature","additionalPolicies","policy","price","toFixed","additional","reduce","sum","save","error","console","generateHTMLPolicy","_formData$selectedQuo2","htmlContent","map","join","printWindow","window","open","document","write","close","dateString","year","month","day","split","calculateAgeFromDateOfBirth","dateOfBirth","birthDate","today","getFullYear","monthDiff","getMonth","getDate","Math","max","Quote2","onNavigate","_s2","_formData$selectedQuo10","_s","$RefreshSig$","currentPhase","setCurrentPhase","setFormData","vaxId","nationality","paymentMethod","cardNumber","expiryDate","cvv","billingAddress","street","city","postalCode","country","quoteOptions","setQuoteOptions","isProcessing","setIsProcessing","setPolicyNumber","policyDocuments","setPolicyDocuments","terracottaService","log","getInstance","screeningQuestions","setScreeningQuestions","screeningAnswers","setScreeningAnswers","isLoadingQuotes","setIsLoadingQuotes","quoteError","setQuoteError","availableProducts","setAvailableProducts","isLoadingProducts","setIsLoadingProducts","availablePolicyTypes","setAvailablePolicyTypes","isLoadingPolicyTypes","setIsLoadingPolicyTypes","availablePolicyTypeDestinations","setAvailablePolicyTypeDestinations","isLoadingPolicyTypeDestinations","setIsLoadingPolicyTypeDestinations","destinationCategories","setDestinationCategories","isLoadingCategories","setIsLoadingCategories","showHelpPopup","setShowHelpPopup","countriesByCategory","setCountriesByCategory","isLoadingCountries","setIsLoadingCountries","showPrivacyPolicy","setShowPrivacyPolicy","showTermsAndConditions","setShowTermsAndConditions","showGeneralConditions","setShowGeneralConditions","generalConditionsData","setGeneralConditionsData","termsAccepted","setTermsAccepted","marketingEmailsAccepted","setMarketingEmailsAccepted","countriesOfResidence","setCountriesOfResidence","isLoadingCountriesOfResidence","setIsLoadingCountriesOfResidence","availableAdditionalPolicies","setAvailableAdditionalPolicies","isLoadingAddons","setIsLoadingAddons","totalGrossPriceWithAddons","setTotalGrossPriceWithAddons","processingAddonId","setProcessingAddonId","scrollTo","top","behavior","loadTerracottaProducts","_productResponse$Sche","productResponse","getUserProductList","Schemas","loadPolicyTypes","allPolicyTypes","product","SchemaID","SchemaName","policyResponse","getUserProductTypePolicy","toString","policyTypesWithSchema","PolicyTypes","policyType","push","uniquePolicyTypes","filter","self","findIndex","p","TypePolicyID","schemaToUse","find","policyTypeResponse","loadCountriesOfResidence","response","fetch","data","json","status","countries","message","loadDestinationCategories","categories","loadCountriesForCategories","countriesData","category","encodeURIComponent","generateQuotesIfNeeded","options","generateQuoteOptions","normalizePolicyTypeName","soapPolicyType","normalized","trim","mappings","key","value","Object","entries","toLowerCase","lowerNormalized","includes","warn","fetchAddons","_formData$selectedQuo3","_formData$selectedQuo4","_formData$selectedQuo5","_formData$selectedQuo6","_formData$selectedQuo7","_formData$selectedQuo8","_formData$selectedQuo9","_formData$selectedQuo0","rawPolicyTypeName","policytypeName","policyTypeName","typePolicyName","selectedField","addonsData","addons","transformedAddons","addon","displayName","additional_cover_detail","additional_cover_name","getIcon","lowerName","getCategory","id","alteration_id","description","icon","alterationId","_formData$selectedQuo1","nameParts","extractedPolicyType","normalizedType","prev","_response$quoteResult","terracottaRequest","convertToTerracottaFormat","provideQuotation","Message","quoteResults","realQuotes","result","QuoteID","schemaName","type","isBestBuy","GrossPrice","coverLevel","toLocaleString","activities","isAnnual","maxDaysPerTrip","terracottaQuoteId","summaryOfCoverUrl","SI","policyWordingUrl","PW","currency","ipt","IPT","schemaID","destinationCategory","destinationName","residenceName","packageName","typePackageName","isBestBuyText","discount","Discount","iconURL","IconURL","helpFile","HelpFile","policytypeShortName","keyFactsUrl","KF","policyTypeID","PolicyTypeID","destinationID","DestinationID","packageID","PackageID","screeningPremium","ipRate","IPTRate","netUW","wbComm","agentComm","SummaryCovers","sortedByIPT","sort","a","b","iptA","iptB","top3Quotes","slice","sortedByPrice","q","generateSampleSOAPQuotes","allSampleQuotes","top3","calculateRealCoverageLevels","baseMedical","baseBaggage","baseCancellation","medicalMultiplier","baggageMultiplier","cancellationMultiplier","parseInt","replace","generateActivitiesForDestination","generateFeaturesFromSOAPData","baseFeatures","soapFeatures","destinationFeatures","calculateCoverageLevels","determineQuoteType","generateFeaturesForDestination","baseActivities","generateEnhancedMockQuoteOptions","days","ceil","getTime","basePrice","dailyRate","tripMultiplier","mockQuotes","schemasToUse","schema","round","quoteType","now","generateLegacyMockQuoteOptions","CustomDatePicker","onChange","placeholder","required","minDate","isOpen","setIsOpen","setCurrentDate","pickerRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","isDateValid","date","setHours","inputDate","minDateObj","generateCalendar","firstDay","lastDay","daysInMonth","startingDayOfWeek","getDay","i","className","fileName","_jsxFileName","lineNumber","columnNumber","padStart","isSelected","isToday","toDateString","isValid","onClick","style","cursor","opacity","children","navigateMonth","direction","monthNames","ref","e","formattedValue","formatDateInput","isoDate","convertToISO","title","pattern","maxLength","handleInputChange","field","newData","setDate","handleTravelerChange","handleNumberOfTravelersChange","count","splice","handleBillingAddressChange","ddmmyyyy","toISOString","digits","fetchGeneralConditions","_formData$selectedQuo11","screeningResponse","getScreeningQuestions","handleTermsAcceptance","checked","allYesAnswers","question","questionNumber","nextPhase","JSON","stringify","essentialPlan","option","_option$name","_option$policytypeNam","Error","String","stack","prevPhase","selectQuote","quote","addAdditionalPolicy","_formData$selectedQuo12","_formData$billingAddr","_formData$billingAddr2","_formData$travelers$","_formData$travelers$2","alert","existingAlterationIds","allAlterationIds","calculateAgeFromDOB","calculateDOBFromAge","TravellerNumber","Title","FirstName","LastName","DateOfBirth","formatDateForTerracotta","Age","TitleID","getTitleID","AlterationID","contactDetails","Address","Postcode","Email","Telephone","alterationsRequest","userID","userCode","quoteID","specificQuoteDetails","Travellers","ContactDetails","provideQuotationWithAlterations","updatedQuote","newGrossPrice","dob","currentYear","birthYear","parts","titleMap","removeAdditionalPolicy","policyId","_formData$selectedQuo13","remainingAddons","_formData$billingAddr3","_formData$billingAddr4","_formData$travelers$3","_formData$travelers$4","remainingAlterationIds","_formData$selectedQuo14","_formData$selectedQuo15","parseFloat","additionalPrice","generatePolicyPDF","downloadPolicyPDF","quoteData","totalAmount","quoteResponse","_formData$travelers$5","_formData$travelers$6","_formData$selectedQuo16","_formData$selectedQuo17","quoteId","terracottaScreeningAnswers","answer","minAge","maxAge","ScreeningInformation","quoteRequestWithRealData","quoteDetails","ResidenceID","TypePackageID","Destination","StartDate","EndDate","includeAnnualQuotes","includeUpsell","currencyID","schemaIDFilter","updatedQuoteResponse","alterationIds","alterationsRequestWithRealData","updatedAlterationsResponse","updateError","savePolicyResponse","savePolicyDetails","screeningQuestionAnswers","medicalScreeningReference","useDefaultAnswers","policySaved","policyID","certificate","documents","policyWording","summaryOfCover","keyFacts","ipid","IPID","paymentData","amount","paymentResponse","terracottaError","undefined","_paymentResponse$data","isPhaseValid","phase","travelersValid","every","t","paymentValid","renderPhase1","htmlFor","fontSize","color","marginLeft","disabled","tripTypeValue","TypePolicyName","country_name","country_id","num","renderPhase2","textAlign","marginBottom","margin","fontWeight","fontFamily","display","flexDirection","justifyContent","gap","marginTop","overflowX","padding","maxWidth","_formData$selectedQuo18","_formData$selectedQuo19","_formData$selectedQuo20","_formData$selectedQuo23","_formData$selectedQuo26","background","border","borderRadius","transition","boxShadow","position","minWidth","flexShrink","onMouseEnter","_formData$selectedQuo21","currentTarget","borderColor","onMouseLeave","_formData$selectedQuo22","lineHeight","cover","Limit","width","backgroundColor","textTransform","_formData$selectedQuo24","_formData$selectedQuo25","gridColumn","renderPhase3","_formData$selectedQuo27","_formData$selectedQuo28","alignItems","some","renderPhase4","_formData$selectedQuo29","calculateTripDuration","start","end","WebkitBackgroundClip","WebkitTextFillColor","gridTemplateColumns","getIconAndColor","bgColor","overflow","transform","right","height","zIndex","flex","Excess","_formData$selectedQuo30","_formData$selectedQuo31","addonAmount","renderPhase5","_formData$selectedQuo32","decodeQuestionText","textarea","createElement","innerHTML","decoded","renderPhase6","decodedQuestion","whiteSpace","yesMessage","noMessage","yesAction","yesActionText","fontStyle","noAction","noActionText","renderPhase7","min","readOnly","borderTop","preventDefault","textDecoration","renderPhase8","_formData$travelers$7","_formData$selectedQuo33","_formData$selectedQuo34","href","rel","renderPhaseContent","location","stopPropagation","decodedNoMessage","filteredNoMessage","_c","$RefreshReg$"],"sources":["C:/Users/laptop-123/TravelInsurance_Demo_2/src/pages/Quote2.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Quote2.css';\n// Import API service for database integration\nimport { createQuote, processPayment as apiProcessPayment, getAddonsByPolicyType } from '../services/apiService';\n// Import Terracotta service for insurance quotes\nimport TerracottaService, { \n  TerracottaQuoteResponse, \n  TerracottaQuoteResult, \n  TerracottaScreeningQuestionsResponse,\n  TerracottaSavePolicyResponse,\n  TerracottaProductListResponse,\n  TerracottaPolicyType,\n  TerracottaPolicyTypeResponse,\n  TerracottaPolicyTypeDestination,\n  TerracottaPolicyTypeDestinationResponse,\n  SummaryCover,\n  TerracottaQuoteWithAlterationsRequest,\n  TerracottaTraveler,\n  TerracottaContactDetails,\n  getResidenceID,\n  getTypePolicyID\n} from '../services/terracottaService';\n\n// Import jsPDF dynamically to avoid build issues\nconst generatePDF = async (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  try {\n    // Dynamic import of jsPDF\n    const jsPDF = (await import('jspdf')).default;\n    \n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleDateString('en-GB');\n    \n    // Set up fonts and styles\n    doc.setFontSize(20);\n    doc.text('TRAVEL INSURANCE POLICY', 20, 20);\n    \n    doc.setFontSize(14);\n    doc.text(`Policy Number: ${policyNumber}`, 20, 35);\n    doc.text(`Issue Date: ${currentDate}`, 20, 45);\n    \n    let yPos = 65;\n    \n    // Trip Information Section\n    doc.setFontSize(16);\n    doc.text('TRIP INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    const tripType = formData.tripType === 'single' ? 'Single Trip Insurance' : \n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance';\n    \n    doc.text(`Trip Type: ${tripType}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Country of Residence: ${formData.countryOfResidence}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Destination: ${formData.destination}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Departure: ${formatDateToEuropean(formData.startDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Return: ${formatDateToEuropean(formData.endDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Travelers: ${formData.numberOfTravelers}`, 20, yPos);\n    yPos += 20;\n    \n    // Traveler Information\n    doc.setFontSize(16);\n    doc.text('TRAVELER INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    formData.travelers.forEach((traveler: any, index: number) => {\n      if (yPos > 250) { // New page if needed\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.text(`${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}:`, 20, yPos);\n      yPos += 10;\n      doc.text(`Name: ${traveler.firstName} ${traveler.lastName}`, 20, yPos);\n      yPos += 8;\n      doc.text(`Age: ${traveler.age} years old`, 20, yPos);\n      yPos += 8;\n      doc.text(`Email: ${traveler.email}`, 20, yPos);\n      yPos += 8;\n      if (traveler.phone) {\n        doc.text(`Phone: ${traveler.phone}`, 20, yPos);\n        yPos += 8;\n      }\n      yPos += 10;\n    });\n    \n    // Selected Plan\n    if (formData.selectedQuote) {\n      if (yPos > 180) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('SELECTED INSURANCE PLAN', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      doc.text(`Plan: ${formData.selectedQuote.name}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Medical: ${formData.selectedQuote.coverage.medical}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Baggage: ${formData.selectedQuote.coverage.baggage}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Cancellation: ${formData.selectedQuote.coverage.cancellation}`, 20, yPos);\n      yPos += 15;\n      \n      // Add Included Features\n      if (formData.selectedQuote.features && formData.selectedQuote.features.length > 0) {\n        doc.text('Included Features:', 20, yPos);\n        yPos += 10;\n        formData.selectedQuote.features.forEach((feature: string) => {\n          if (yPos > 270) { // Check for page break\n            doc.addPage();\n            yPos = 20;\n          }\n          doc.text(`• ${feature}`, 25, yPos);\n          yPos += 8;\n        });\n        yPos += 10;\n      }\n    }\n    \n    // Additional Coverage\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      if (yPos > 220) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('ADDITIONAL COVERAGE', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      formData.additionalPolicies.forEach((policy: any) => {\n        if (yPos > 270) { // Check for page break\n          doc.addPage();\n          yPos = 20;\n        }\n        doc.text(`• ${policy.name} - €${policy.price.toFixed(2)}`, 25, yPos);\n        yPos += 8;\n      });\n      yPos += 15;\n    }\n    \n    // Premium Summary\n    if (yPos > 200) {\n      doc.addPage();\n      yPos = 20;\n    }\n    \n    doc.setFontSize(16);\n    doc.text('PREMIUM SUMMARY', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    doc.text(`Base Premium: €${formData.selectedQuote?.price}`, 20, yPos);\n    yPos += 10;\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      const additional = formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0);\n      doc.text(`Additional Policies: €${additional.toFixed(2)}`, 20, yPos);\n      yPos += 10;\n    }\n    doc.text('Taxes & Fees: Included', 20, yPos);\n    yPos += 10;\n    doc.text(`Total Premium: €${calculateTotalPrice().toFixed(2)}`, 20, yPos);\n    yPos += 20;\n    \n    doc.text('Emergency Contact: +30 6974907500', 20, yPos);\n    \n    // Save the PDF\n    doc.save(`Travel_Insurance_Policy_${policyNumber}.pdf`);\n    \n  } catch (error) {\n    console.error('PDF generation failed, falling back to HTML:', error);\n    // Fallback to HTML generation if PDF fails\n    generateHTMLPolicy(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  }\n};\n\nconst generateHTMLPolicy = (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  const currentDate = new Date().toLocaleDateString('en-GB');\n  \n  const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Travel Insurance Policy - ${policyNumber}</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\n        .section { margin-bottom: 25px; }\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\n        .info-row { margin: 8px 0; }\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\n        @media print { body { margin: 0; } }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>TRAVEL INSURANCE POLICY</h1>\n        <h2>Policy Number: ${policyNumber}</h2>\n        <p>Issue Date: ${currentDate}</p>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRIP INFORMATION</div>\n        <div class=\"info-row\"><strong>Trip Type:</strong> ${formData.tripType === 'single' ? 'Single Trip Insurance' : \n                        formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                        formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                        'Comprehensive Single Trip Insurance'}</div>\n        <div class=\"info-row\"><strong>Country of Residence:</strong> ${formData.countryOfResidence}</div>\n        <div class=\"info-row\"><strong>Destination:</strong> ${formData.destination}</div>\n        <div class=\"info-row\"><strong>Departure:</strong> ${formatDateToEuropean(formData.startDate)}</div>\n        <div class=\"info-row\"><strong>Return:</strong> ${formatDateToEuropean(formData.endDate)}</div>\n        <div class=\"info-row\"><strong>Travelers:</strong> ${formData.numberOfTravelers}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRAVELER INFORMATION</div>\n        ${formData.travelers.map((traveler: any, index: number) => `\n            <div class=\"traveler-block\">\n                <strong>${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}</strong>\n                <div class=\"info-row\"><strong>Name:</strong> ${traveler.firstName} ${traveler.lastName}</div>\n                <div class=\"info-row\"><strong>Age:</strong> ${traveler.age} years old</div>\n                <div class=\"info-row\"><strong>Email:</strong> ${traveler.email}</div>\n                ${traveler.phone ? `<div class=\"info-row\"><strong>Phone:</strong> ${traveler.phone}</div>` : ''}\n            </div>\n        `).join('')}\n    </div>\n    \n    ${formData.selectedQuote ? `\n    <div class=\"section\">\n        <div class=\"section-title\">SELECTED INSURANCE PLAN</div>\n        <div class=\"info-row\"><strong>Plan:</strong> ${formData.selectedQuote.name}</div>\n        <div class=\"info-row\"><strong>Medical Coverage:</strong> ${formData.selectedQuote.coverage.medical}</div>\n        <div class=\"info-row\"><strong>Baggage Coverage:</strong> ${formData.selectedQuote.coverage.baggage}</div>\n        <div class=\"info-row\"><strong>Trip Cancellation:</strong> ${formData.selectedQuote.coverage.cancellation}</div>\n        \n        ${formData.selectedQuote.features && formData.selectedQuote.features.length > 0 ? `\n        <div style=\"margin-top: 15px;\">\n            <strong>Included Features:</strong>\n            <ul>\n                ${formData.selectedQuote.features.map((feature: string) => `<li>${feature}</li>`).join('')}\n            </ul>\n        </div>\n        ` : ''}\n    </div>\n    ` : ''}\n    \n    ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n    <div class=\"section\">\n        <div class=\"section-title\">ADDITIONAL COVERAGE</div>\n        <ul>\n            ${formData.additionalPolicies.map((policy: any) => `<li>${policy.name} - €${policy.price.toFixed(2)}</li>`).join('')}\n        </ul>\n    </div>\n    ` : ''}\n    \n    <div class=\"section\">\n        <div class=\"section-title\">PREMIUM SUMMARY</div>\n        <div class=\"info-row\"><strong>Base Premium:</strong> €${formData.selectedQuote?.price}</div>\n        ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n        <div class=\"info-row\"><strong>Additional Policies:</strong> €${formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0).toFixed(2)}</div>\n        ` : ''}\n        <div class=\"info-row\"><strong>Taxes & Fees:</strong> Included</div>\n        <div class=\"info-row\"><strong>Total Premium:</strong> €${calculateTotalPrice().toFixed(2)}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"info-row\"><strong>Emergency Contact:</strong> +30 6974907500</div>\n        <div class=\"info-row\" style=\"margin-top: 20px; font-style: italic;\">\n            This document serves as proof of travel insurance coverage.\n        </div>\n    </div>\n    \n    <script>\n        window.onload = function() { window.print(); };\n        window.onafterprint = function() { window.close(); };\n    </script>\n</body>\n</html>`;\n\n  const printWindow = window.open('', '_blank', 'width=800,height=600');\n  if (printWindow) {\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }\n};\n\n// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean = (dateString: string): string => {\n  if (!dateString) return '';\n  // Parse the ISO date string directly to avoid timezone issues\n  const [year, month, day] = dateString.split('-');\n  return `${day}/${month}/${year}`;\n};\n\nconst calculateAgeFromDateOfBirth = (dateOfBirth: string): number => {\n  const birthDate = new Date(dateOfBirth);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  \n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  \n  return Math.max(0, age);\n};\n\ninterface TravelerInfo {\n  firstName: string;\n  lastName: string;\n  age: string;\n  email: string;\n  phone: string;\n  vaxId: string;\n  nationality: string;\n  title?: string;\n  dateOfBirth?: string;\n  gender?: string;\n}\n\ninterface QuoteOption {\n  id: string;\n  name: string;\n  type: 'basic' | 'standard' | 'premium';\n  price: number;\n  coverage: {\n    medical: string;\n    baggage: string;\n    cancellation: string;\n    activities: string[];\n  };\n  features: string[];\n  // Terracotta specific fields\n  terracottaQuoteId?: string;\n  schemaName?: string;\n  policyTypeName?: string;\n  policytypeName?: string; // Raw field from SOAP response\n  summaryOfCoverUrl?: string;\n  policyWordingUrl?: string;\n  currency?: string;\n  ipt?: number;\n  // Enhanced metadata fields\n  schemaID?: number;\n  destinationCategory?: string;\n  tripType?: string;\n  // Enhanced SOAP fields\n  residenceName?: string;\n  destinationName?: string;\n  packageName?: string;\n  typePackageName?: string;\n  isAnnual?: number;\n  isBestBuy?: number;\n  maxDaysPerTrip?: number;\n  coverLevel?: number;\n  discount?: number;\n  iconURL?: string;\n  helpFile?: string;\n  policytypeShortName?: string;\n  // Additional SOAP response fields\n  keyFactsUrl?: string;\n  policyTypeID?: number;\n  destinationID?: number;\n  packageID?: number;\n  screeningPremium?: number;\n  ipRate?: number;\n  netUW?: number;\n  wbComm?: number;\n  agentComm?: number;\n  // Additional fields from SOAP response\n  typePolicyName?: string;\n  isBestBuyText?: string;\n  SummaryCovers?: SummaryCover[];\n  // Document URLs from quote response\n  SI?: string;  // Summary of Cover URL\n  PW?: string;  // Policy Wording URL\n}\n\ninterface QuoteFormData {\n  // Trip Details\n  destination: string;\n  startDate: string;\n  endDate: string;\n  tripType: 'single' | 'annual' | 'comprehensive' | 'longstay';\n  countryOfResidence: string;\n  \n  // Traveler Information\n  numberOfTravelers: number;\n  travelers: TravelerInfo[];\n  \n  // Selected Quote\n  selectedQuote: QuoteOption | null;\n  \n  // Additional Policies\n  additionalPolicies: AdditionalPolicy[];\n  \n  // Payment Details\n  paymentMethod: 'card' | 'bank' | 'paypal';\n  cardNumber: string;\n  expiryDate: string;\n  cvv: string;\n  billingAddress: {\n    street: string;\n    city: string;\n    postalCode: string;\n    country: string;\n  };\n}\n\ninterface AdditionalPolicy {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  icon: string;\n  category: string;\n  alterationId: string; // Terracotta alteration ID for SOAP calls\n}\n\ntype WizardPhase = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface QuoteProps {\n  onNavigate?: (page: string) => void;\n}\n\nconst Quote2: React.FC<QuoteProps> = ({ onNavigate }) => {\n  const [currentPhase, setCurrentPhase] = useState<WizardPhase>(1);\n  const [formData, setFormData] = useState<QuoteFormData>({\n    destination: '',\n    startDate: '',\n    endDate: '',\n    tripType: 'single',\n    countryOfResidence: '',\n    numberOfTravelers: 1,\n    travelers: [\n      {\n        firstName: '',\n        lastName: '',\n        age: '',\n        email: '',\n        phone: '',\n        vaxId: '',\n        nationality: ''\n      }\n    ],\n    selectedQuote: null,\n    additionalPolicies: [],\n    paymentMethod: 'card',\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    billingAddress: {\n      street: '',\n      city: '',\n      postalCode: '',\n      country: ''\n    }\n  });\n\n  const [quoteOptions, setQuoteOptions] = useState<QuoteOption[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [policyNumber, setPolicyNumber] = useState<string>('');\n  const [policyDocuments, setPolicyDocuments] = useState<{\n    certificate?: string;\n    policyWording?: string;\n    summaryOfCover?: string;\n    keyFacts?: string;\n    ipid?: string;\n  }>({});\n  const [terracottaService] = useState<TerracottaService>(() => {\n    console.log('Creating TerracottaService instance...');\n    return TerracottaService.getInstance('4072', '111427');\n  });\n  const [screeningQuestions, setScreeningQuestions] = useState<any[]>([]);\n  const [screeningAnswers, setScreeningAnswers] = useState<{[key: number]: 'yes' | 'no'}>({});\n  const [isLoadingQuotes, setIsLoadingQuotes] = useState(false);\n  const [quoteError, setQuoteError] = useState<string>('');\n  const [availableProducts, setAvailableProducts] = useState<any[]>([]);\n  const [isLoadingProducts, setIsLoadingProducts] = useState(true);\n  \n  // Policy types state\n  const [availablePolicyTypes, setAvailablePolicyTypes] = useState<TerracottaPolicyType[]>([]);\n  const [isLoadingPolicyTypes, setIsLoadingPolicyTypes] = useState(false);\n  \n  // Policy type destinations state (Trip Types)\n  const [availablePolicyTypeDestinations, setAvailablePolicyTypeDestinations] = useState<TerracottaPolicyTypeDestination[]>([]);\n  const [isLoadingPolicyTypeDestinations, setIsLoadingPolicyTypeDestinations] = useState(false);\n  \n  // Destination categories state\n  const [destinationCategories, setDestinationCategories] = useState<string[]>([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n  \n  // Help popup state\n  const [showHelpPopup, setShowHelpPopup] = useState(false);\n  const [countriesByCategory, setCountriesByCategory] = useState<{[key: string]: string[]}>({});\n  const [isLoadingCountries, setIsLoadingCountries] = useState(false);\n  \n  // Privacy Policy and Terms modal states\n  const [showPrivacyPolicy, setShowPrivacyPolicy] = useState(false);\n  const [showTermsAndConditions, setShowTermsAndConditions] = useState(false);\n  const [showGeneralConditions, setShowGeneralConditions] = useState(false);\n  const [generalConditionsData, setGeneralConditionsData] = useState<any[]>([]);\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [marketingEmailsAccepted, setMarketingEmailsAccepted] = useState(false);\n  \n  // Countries of residence state\n  const [countriesOfResidence, setCountriesOfResidence] = useState<{country_id: number, country_name: string}[]>([]);\n  const [isLoadingCountriesOfResidence, setIsLoadingCountriesOfResidence] = useState(false);\n  \n  // Addons state - fetched from database based on selected policy type\n  const [availableAdditionalPolicies, setAvailableAdditionalPolicies] = useState<AdditionalPolicy[]>([]);\n  const [isLoadingAddons, setIsLoadingAddons] = useState(false);\n  \n  // Store the total GrossPrice from SOAP alterations response\n  const [totalGrossPriceWithAddons, setTotalGrossPriceWithAddons] = useState<number | null>(null);\n  \n  // Loading state for addon operations - track which specific addon is being processed\n  const [processingAddonId, setProcessingAddonId] = useState<string | null>(null);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  \n\n  // Load available Terracotta products on component mount\n  useEffect(() => {\n    const loadTerracottaProducts = async () => {\n      try {\n        setIsLoadingProducts(true);\n        console.log('Loading Terracotta products...');\n        const productResponse = await terracottaService.getUserProductList();\n        console.log('Terracotta products loaded:', productResponse);\n        console.log(`✅ Successfully loaded ${productResponse.Schemas?.length || 0} products for your account`);\n        setAvailableProducts(productResponse.Schemas || []);\n        setIsLoadingProducts(false);\n      } catch (error) {\n        console.error('Error loading Terracotta products:', error);\n        setIsLoadingProducts(false);\n        // Don't show error to user, just log it - we'll use fallback\n      }\n    };\n\n    loadTerracottaProducts();\n  }, [terracottaService]);\n\n  // Load policy types when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        setIsLoadingPolicyTypes(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema)\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        for (const product of availableProducts) {\n          try {\n            console.log(`Loading policy types for schema ${product.SchemaID}: ${product.SchemaName}`);\n            const policyResponse = await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());\n            console.log(`Policy types for schema ${product.SchemaID}:`, policyResponse);\n            \n            // Add schema context to each policy type\n            const policyTypesWithSchema = policyResponse.PolicyTypes.map(policyType => ({\n              ...policyType,\n              SchemaID: product.SchemaID,\n              SchemaName: product.SchemaName\n            }));\n            \n            allPolicyTypes.push(...policyTypesWithSchema);\n          } catch (error) {\n            console.error(`Error loading policy types for schema ${product.SchemaID}:`, error);\n          }\n        }\n        \n        // Remove duplicates based on TypePolicyID\n        const uniquePolicyTypes = allPolicyTypes.filter((policyType, index, self) => \n          index === self.findIndex(p => p.TypePolicyID === policyType.TypePolicyID)\n        );\n        \n        setAvailablePolicyTypes(uniquePolicyTypes);\n        console.log(`✅ Successfully loaded ${uniquePolicyTypes.length} unique policy types`);\n        setIsLoadingPolicyTypes(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypes(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Load policy types (Trip Types) when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        setIsLoadingPolicyTypeDestinations(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema) - Using schema 717 as specified\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        // Use schema 717 as specified in the requirement\n        const schemaToUse = availableProducts.find(p => p.SchemaID === 717) || availableProducts[0];\n        \n        try {\n          console.log(`Loading policy types for schema ${schemaToUse.SchemaID}: ${schemaToUse.SchemaName}`);\n          const policyTypeResponse = await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());\n          console.log(`Policy types for schema ${schemaToUse.SchemaID}:`, policyTypeResponse);\n          \n          allPolicyTypes.push(...policyTypeResponse.PolicyTypes);\n        } catch (error) {\n          console.error(`Error loading policy types for schema ${schemaToUse.SchemaID}:`, error);\n        }\n        \n        setAvailablePolicyTypes(allPolicyTypes);\n        console.log(`✅ Successfully loaded ${allPolicyTypes.length} policy types`);\n        setIsLoadingPolicyTypeDestinations(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypeDestinations(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Show a brief message when end date is cleared due to start date change\n  useEffect(() => {\n    if (formData.startDate && !formData.endDate) {\n      // This effect will run when start date exists but end date is empty\n      // We could add a toast notification here if needed\n    }\n  }, [formData.startDate, formData.endDate]);\n\n  // Load countries of residence on component mount\n  useEffect(() => {\n    const loadCountriesOfResidence = async () => {\n      try {\n        setIsLoadingCountriesOfResidence(true);\n        console.log('Loading countries of residence...');\n        const response = await fetch('http://localhost:5002/api/countries');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setCountriesOfResidence(data.countries);\n          console.log('✅ Countries of residence loaded:', data.countries.length, 'countries');\n        } else {\n          console.error('❌ Failed to load countries of residence:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries of residence:', error);\n      } finally {\n        setIsLoadingCountriesOfResidence(false);\n      }\n    };\n\n    loadCountriesOfResidence();\n  }, []);\n\n  // Load destination categories on component mount\n  useEffect(() => {\n    const loadDestinationCategories = async () => {\n      try {\n        setIsLoadingCategories(true);\n        console.log('Loading destination categories...');\n        const response = await fetch('http://localhost:5002/api/destination-categories');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setDestinationCategories(data.categories);\n          console.log('✅ Destination categories loaded:', data.categories);\n        } else {\n          console.error('❌ Failed to load destination categories:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading destination categories:', error);\n        // Set fallback categories if API fails\n        setDestinationCategories(['Europe', 'Worldwide']);\n      } finally {\n        setIsLoadingCategories(false);\n      }\n    };\n\n    loadDestinationCategories();\n  }, []);\n\n  // Load countries for each category when categories are loaded\n  useEffect(() => {\n    const loadCountriesForCategories = async () => {\n      if (destinationCategories.length === 0) return;\n      \n      try {\n        setIsLoadingCountries(true);\n        const countriesData: {[key: string]: string[]} = {};\n        \n        // Load countries for each category\n        for (const category of destinationCategories) {\n          try {\n            const response = await fetch(`http://localhost:5002/api/destination-categories/${encodeURIComponent(category)}/countries`);\n            const data = await response.json();\n            \n            if (data.status === 'success') {\n              countriesData[category] = data.countries;\n            }\n          } catch (error) {\n            console.error(`Error loading countries for ${category}:`, error);\n            countriesData[category] = [];\n          }\n        }\n        \n        setCountriesByCategory(countriesData);\n      } catch (error) {\n        console.error('Error loading countries:', error);\n      } finally {\n        setIsLoadingCountries(false);\n      }\n    };\n\n    loadCountriesForCategories();\n  }, [destinationCategories]);\n\n  // Generate quotes when component mounts or when form data is complete\n  useEffect(() => {\n    const generateQuotesIfNeeded = async () => {\n      // Only generate quotes if we have basic form data and we're in phase 2\n      if (currentPhase === 2 && quoteOptions.length === 0) {\n        console.log('🔄 Generating quotes on component load...');\n        try {\n          const options = await generateQuoteOptions();\n          setQuoteOptions(options);\n        } catch (error) {\n          console.error('Error generating quotes:', error);\n        }\n      }\n    };\n\n    generateQuotesIfNeeded();\n  }, [currentPhase]);\n\n  // Helper function to normalize SOAP policy type names to match database\n  const normalizePolicyTypeName = (soapPolicyType: string): string => {\n    if (!soapPolicyType) return '';\n    \n    // Trim and normalize whitespace\n    let normalized = soapPolicyType.trim();\n    \n    // Map common SOAP response values to database policy type names\n    const mappings: { [key: string]: string } = {\n      // Annual Multi-Trip variants (handle various capitalizations)\n      'Silver Annual Multi-Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi-Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi-Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi-trip': 'Silver Annual Multi-Trip', // lowercase 't'\n      'Gold Annual Multi-trip': 'Gold Annual Multi-Trip', // lowercase 't'\n      'Essential Annual Multi-trip': 'Essential Annual Multi-Trip', // lowercase 't'\n      \n      // Single Trip variants\n      'Silver Single Trip': 'Silver Single Trip',\n      'Gold Single Trip': 'Gold Single Trip',\n      'Essential Single Trip': 'Essential Single Trip',\n      'Value Single Trip': 'Value Single Trip',\n      \n      // Long Stay variants\n      'Long Stay Standard': 'Long Stay Standard',\n      'Long Stay Study Abroad': 'Long Stay Study Abroad',\n      'Longstay Standard': 'Long Stay Standard',\n      'Longstay Study Abroad': 'Long Stay Study Abroad',\n    };\n    \n    // Try exact match first (case-insensitive)\n    for (const [key, value] of Object.entries(mappings)) {\n      if (normalized.toLowerCase() === key.toLowerCase()) {\n        console.log(`✅ Exact match found! Normalized policy type: \"${normalized}\" -> \"${value}\"`);\n        return value;\n      }\n    }\n    \n    console.log(`⚠️ No exact mapping found for: \"${normalized}\", trying pattern matching...`);\n    \n    // Try pattern matching if exact match fails\n    const lowerNormalized = normalized.toLowerCase();\n    \n    // Silver Annual Multi-Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Annual Multi-Trip\"`);\n      return 'Silver Annual Multi-Trip';\n    }\n    \n    // Gold Annual Multi-Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Annual Multi-Trip\"`);\n      return 'Gold Annual Multi-Trip';\n    }\n    \n    // Essential Annual Multi-Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Annual Multi-Trip\"`);\n      return 'Essential Annual Multi-Trip';\n    }\n    \n    // Silver Single Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Single Trip\"`);\n      return 'Silver Single Trip';\n    }\n    \n    // Gold Single Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Single Trip\"`);\n      return 'Gold Single Trip';\n    }\n    \n    // Essential Single Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Single Trip\"`);\n      return 'Essential Single Trip';\n    }\n    \n    // Value Single Trip patterns\n    if (lowerNormalized.includes('value') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Value Single Trip\"`);\n      return 'Value Single Trip';\n    }\n    \n    // Long Stay patterns\n    if (lowerNormalized.includes('long') && lowerNormalized.includes('stay')) {\n      if (lowerNormalized.includes('study') || lowerNormalized.includes('abroad')) {\n        console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Study Abroad\"`);\n        return 'Long Stay Study Abroad';\n      }\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Standard\"`);\n      return 'Long Stay Standard';\n    }\n    \n    // If no match found, return original and log warning\n    console.warn(`⚠️ No mapping found for policy type: \"${normalized}\"`);\n    return normalized;\n  };\n\n  // Fetch addons when entering Step 3 (Add-ons phase)\n  useEffect(() => {\n    const fetchAddons = async () => {\n      // Only fetch addons when we're in Step 3 (Add-ons phase)\n      if (currentPhase !== 3) {\n        console.log('ℹ️ Not in Step 3, skipping addon fetch (current phase:', currentPhase, ')');\n        return;\n      }\n\n      // Debug: Log the entire selected quote to see all available fields\n      console.log('🔍 DEBUG - Selected Quote:', formData.selectedQuote);\n      console.log('📍 Current Phase:', currentPhase, '- Fetching add-ons for Step 3');\n      \n      // Only fetch if we have a selected quote with a policy type name\n      // IMPORTANT: prioritize policytypeName first as it contains the full name (e.g., \"Silver Annual Multi-Trip\")\n      // policyTypeName often just contains \"Annual Multi-Trip\" without the tier (Silver/Gold/Essential)\n      const rawPolicyTypeName = formData.selectedQuote?.policytypeName || formData.selectedQuote?.policyTypeName || formData.selectedQuote?.typePolicyName;\n      \n      console.log('🔍 DEBUG - Policy type field values:', {\n        policyTypeName: formData.selectedQuote?.policyTypeName,\n        policytypeName: formData.selectedQuote?.policytypeName,\n        typePolicyName: formData.selectedQuote?.typePolicyName,\n        rawPolicyTypeName: rawPolicyTypeName,\n        selectedField: formData.selectedQuote?.policytypeName ? 'policytypeName' : \n                       formData.selectedQuote?.policyTypeName ? 'policyTypeName' : 'typePolicyName'\n      });\n      \n      if (rawPolicyTypeName) {\n        // Normalize the policy type name to match database\n        const policyTypeName = normalizePolicyTypeName(rawPolicyTypeName);\n        console.log('📋 Fetching addons for policy type:', policyTypeName, '(raw:', rawPolicyTypeName, ')');\n        setIsLoadingAddons(true);\n        \n        try {\n          const response = await getAddonsByPolicyType(policyTypeName);\n          \n          if (response.status === 'success') {\n            const addonsData = (response as any).addons || [];\n            console.log(`✅ Loaded ${addonsData.length} addons for ${policyTypeName}`);\n            \n            // Transform database addons to AdditionalPolicy format\n            const transformedAddons: AdditionalPolicy[] = addonsData.map((addon: any) => {\n              // Create a descriptive name combining cover name and details\n              const displayName = addon.additional_cover_detail \n                ? `${addon.additional_cover_name} - ${addon.additional_cover_detail}`\n                : addon.additional_cover_name;\n              \n              // Determine icon based on addon type\n              const getIcon = (name: string) => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                if (lowerName.includes('business')) return '💼';\n                if (lowerName.includes('golf')) return '⛳';\n                if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                if (lowerName.includes('wedding')) return '💍';\n                if (lowerName.includes('event')) return '🎫';\n                if (lowerName.includes('cancellation')) return '❌';\n                if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                if (lowerName.includes('accident')) return '🚑';\n                if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                if (lowerName.includes('emigration')) return '🌍';\n                if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                return '📋'; // Default icon\n              };\n              \n              // Determine category based on addon type\n              const getCategory = (name: string) => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                if (lowerName.includes('business')) return 'Business';\n                if (lowerName.includes('cancellation')) return 'Cancellation';\n                if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                return 'Other';\n              };\n              \n              return {\n                id: `addon-${addon.alteration_id}`,\n                name: displayName,\n                description: addon.additional_cover_detail || addon.additional_cover_name,\n                price: 0, // Price will be updated from SOAP response\n                icon: getIcon(addon.additional_cover_name),\n                category: getCategory(addon.additional_cover_name),\n                alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n              };\n            });\n            \n            setAvailableAdditionalPolicies(transformedAddons);\n          } else {\n            console.warn('No addons found for policy type:', policyTypeName);\n            setAvailableAdditionalPolicies([]);\n          }\n        } catch (error) {\n          console.error('Error fetching addons:', error);\n          // Keep empty array on error\n          setAvailableAdditionalPolicies([]);\n        } finally {\n          setIsLoadingAddons(false);\n        }\n      } else {\n        // No policy type selected, try to extract from quote name as fallback\n        if (formData.selectedQuote?.name) {\n          console.warn('⚠️ No policy type field found, attempting to extract from quote name:', formData.selectedQuote.name);\n          \n          // Try to extract policy type from the name field\n          // Format is usually: \"SchemaName - PolicyTypeName\"\n          const nameParts = formData.selectedQuote.name.split(' - ');\n          if (nameParts.length > 1) {\n            const extractedPolicyType = nameParts[1].trim();\n            console.log('🔍 Extracted policy type from name:', extractedPolicyType);\n            \n            const normalizedType = normalizePolicyTypeName(extractedPolicyType);\n            if (normalizedType) {\n              setIsLoadingAddons(true);\n              try {\n                const response = await getAddonsByPolicyType(normalizedType);\n                if (response.status === 'success') {\n                  const addonsData = (response as any).addons || [];\n                  console.log(`✅ Loaded ${addonsData.length} addons using extracted type: ${normalizedType}`);\n                  \n                  const transformedAddons: AdditionalPolicy[] = addonsData.map((addon: any) => {\n                    const displayName = addon.additional_cover_detail \n                      ? `${addon.additional_cover_name} - ${addon.additional_cover_detail}`\n                      : addon.additional_cover_name;\n                    \n                    const getIcon = (name: string) => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                      if (lowerName.includes('business')) return '💼';\n                      if (lowerName.includes('golf')) return '⛳';\n                      if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                      if (lowerName.includes('wedding')) return '💍';\n                      if (lowerName.includes('event')) return '🎫';\n                      if (lowerName.includes('cancellation')) return '❌';\n                      if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                      if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                      if (lowerName.includes('accident')) return '🚑';\n                      if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                      if (lowerName.includes('emigration')) return '🌍';\n                      if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                      if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                      return '📋';\n                    };\n                    \n                    const getCategory = (name: string) => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                      if (lowerName.includes('business')) return 'Business';\n                      if (lowerName.includes('cancellation')) return 'Cancellation';\n                      if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                      if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                      if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                      return 'Other';\n                    };\n                    \n                    return {\n                      id: `addon-${addon.alteration_id}`,\n                      name: displayName,\n                      description: addon.additional_cover_detail || addon.additional_cover_name,\n                      price: 0, // Price will be updated from SOAP response\n                      icon: getIcon(addon.additional_cover_name),\n                      category: getCategory(addon.additional_cover_name),\n                      alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n                    };\n                  });\n                  \n                  setAvailableAdditionalPolicies(transformedAddons);\n                }\n              } catch (error) {\n                console.error('Error fetching addons with extracted type:', error);\n                setAvailableAdditionalPolicies([]);\n              } finally {\n                setIsLoadingAddons(false);\n              }\n              return;\n            }\n          }\n        }\n        \n        console.warn('⚠️ No policy type found in selected quote, clearing addons');\n        setAvailableAdditionalPolicies([]);\n      }\n    };\n\n    fetchAddons();\n  }, [currentPhase, formData.selectedQuote]); // Trigger when entering Step 3 OR when quote changes\n\n  // Reset addons and pricing when the selected quote changes\n  useEffect(() => {\n    if (formData.selectedQuote) {\n      console.log('Quote changed, resetting addons and pricing...');\n      \n      // Clear existing addons\n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: []\n      }));\n      \n      // Reset SOAP pricing\n      setTotalGrossPriceWithAddons(null);\n      \n      // Clear available addons to force refresh\n      setAvailableAdditionalPolicies([]);\n      \n      console.log('✅ Addons and pricing reset for new quote');\n    }\n  }, [formData.selectedQuote?.id]); // Only trigger when the quote ID actually changes\n\n  // REMOVED: Auto-loading sample quotes - now using real SOAP response\n  // useEffect(() => {\n  //   if (currentPhase === 2) {\n  //     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n  //     const sampleQuotes = generateSampleSOAPQuotes();\n  //     setQuoteOptions(sampleQuotes);\n  //     setIsLoadingQuotes(false);\n  //   }\n  // }, [currentPhase]);\n\n  const generateQuoteOptions = async (): Promise<QuoteOption[]> => {\n    setIsLoadingQuotes(true);\n    setQuoteError('');\n\n    try {\n      console.log('🚀 Getting real quotes from Terracotta SOAP API...');\n      console.log('Form data:', formData);\n      \n      // Make a single SOAP request to get all available quotes\n      const terracottaRequest = TerracottaService.convertToTerracottaFormat(formData, availablePolicyTypes);\n      console.log('SOAP Request:', terracottaRequest);\n      \n      // Get quotes from Terracotta SOAP API\n      const response: TerracottaQuoteResponse = await terracottaService.provideQuotation(terracottaRequest);\n      console.log('SOAP Response:', response);\n      \n      console.log('📊 SOAP Response Message:', response.Message);\n      console.log('📊 Quote Results Count:', response.quoteResults?.length || 0);\n      \n      if (response.quoteResults && response.quoteResults.length > 0) {\n        console.log('📊 Processing SOAP results:', response.quoteResults);\n        // Convert SOAP response directly to QuoteOption format\n        const realQuotes: QuoteOption[] = response.quoteResults.map((result, index) => {\n          console.log(`Processing quote ${index + 1}:`, result);\n          return {\n            id: `soap-${result.QuoteID}`,\n            name: `${result.schemaName} - ${result.policytypeName || result.typePolicyName}`,\n            type: result.isBestBuy === 1 ? 'premium' : result.GrossPrice > 100 ? 'standard' : 'basic',\n            price: result.GrossPrice || 0,\n            coverage: {\n              medical: result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : '€2,000,000',\n              baggage: '€1,000', // This would ideally come from SOAP response\n              cancellation: '€2,000', // This would ideally come from SOAP response\n              activities: ['Standard activities', 'Adventure sports']\n            },\n            features: [\n              '24/7 Emergency Assistance',\n              'Medical Coverage',\n              'Trip Cancellation',\n              'Baggage Protection',\n              ...(result.isAnnual === 1 ? ['Annual Multi-Trip Coverage'] : []),\n              ...(result.isBestBuy === 1 ? ['Best Buy Option'] : []),\n              ...(result.maxDaysPerTrip > 0 ? [`Up to ${result.maxDaysPerTrip} days per trip`] : [])\n            ],\n            // Real SOAP response data\n            terracottaQuoteId: result.QuoteID,\n            schemaName: result.schemaName,\n            policytypeName: result.policytypeName,\n            policyTypeName: result.typePolicyName || result.policytypeName,\n            typePolicyName: result.typePolicyName || result.policytypeName,\n            summaryOfCoverUrl: result.SI,\n            policyWordingUrl: result.PW,\n            currency: result.currency,\n            ipt: result.IPT,\n            // Complete SOAP response fields\n            schemaID: result.SchemaID,\n            destinationCategory: result.destinationName,\n            tripType: formData.tripType,\n            residenceName: result.residenceName,\n            destinationName: result.destinationName,\n            packageName: result.packageName,\n            typePackageName: result.typePackageName,\n            isAnnual: result.isAnnual,\n            isBestBuy: result.isBestBuy,\n            isBestBuyText: result.isBestBuyText,\n            maxDaysPerTrip: result.maxDaysPerTrip,\n            coverLevel: result.coverLevel,\n            discount: result.Discount,\n            iconURL: result.IconURL,\n            helpFile: result.HelpFile,\n            policytypeShortName: result.policytypeShortName,\n            // Additional SOAP fields\n            keyFactsUrl: result.KF,\n            policyTypeID: result.PolicyTypeID,\n            destinationID: result.DestinationID,\n            packageID: result.PackageID,\n            screeningPremium: result.screeningPremium,\n            ipRate: result.IPTRate,\n            netUW: result.netUW,\n            wbComm: result.wbComm,\n            agentComm: result.agentComm,\n            SummaryCovers: result.SummaryCovers || [],\n            // Document URLs\n            SI: result.SI,\n            PW: result.PW\n          };\n        });\n        \n        console.log(`✅ Received ${realQuotes.length} real quotes from Terracotta SOAP API`);\n        \n        // Sort by IPT (highest first) and take top 3\n        const sortedByIPT = realQuotes.sort((a, b) => {\n          const iptA = a.ipt || 0;\n          const iptB = b.ipt || 0;\n          return iptB - iptA; // Descending order (highest IPT first)\n        });\n        \n        const top3Quotes = sortedByIPT.slice(0, 3);\n        \n        // Sort the top 3 by price (ascending - least expensive to most expensive)\n        const sortedByPrice = top3Quotes.sort((a, b) => a.price - b.price);\n        \n        console.log(`📊 Filtered to top 3 quotes with highest IPT, sorted by price:`, sortedByPrice.map(q => ({ \n          name: q.name, \n          price: q.price,\n          ipt: q.ipt \n        })));\n        \n        setIsLoadingQuotes(false);\n        return sortedByPrice;\n      } else {\n        console.log('⚠️ No quotes in SOAP response, using sample data');\n        console.log('⚠️ Response message:', response.Message);\n        console.log('⚠️ This might be due to:');\n        console.log('   - Incorrect API credentials');\n        console.log('   - Invalid parameter values');\n        console.log('   - API restrictions or downtime');\n        console.log('   - Date range issues (past dates)');\n        setIsLoadingQuotes(false);\n        return generateSampleSOAPQuotes();\n      }\n      \n    } catch (error) {\n      console.error('❌ Error getting real SOAP quotes:', error);\n      setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');\n      setIsLoadingQuotes(false);\n      \n      // Fallback to sample SOAP response data\n      console.log('🔄 Using sample SOAP response data');\n      return generateSampleSOAPQuotes();\n    }\n  };\n\n  // Generate sample quotes using your SOAP response data\n  const generateSampleSOAPQuotes = (): QuoteOption[] => {\n    const allSampleQuotes: QuoteOption[] = [\n      {\n        id: 'soap-12345',\n        name: 'TravelSafe Basic 2024 - Single Trip Travel Insurance',\n        type: 'premium' as const, // Best buy\n        price: 72.60,\n        coverage: {\n          medical: '€5,000,000', // Cover level 5\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Best Buy Option',\n          'Up to 90 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12345\n        terracottaQuoteId: '12345',\n        schemaName: 'TravelSafe Basic 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12345.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12345.pdf',\n        currency: 'EUR',\n        ipt: 12.60,\n        // Complete SOAP response fields\n        schemaID: 683,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Standard',\n        typePackageName: 'Standard Package',\n        isAnnual: 0,\n        isBestBuy: 1,\n        isBestBuyText: 'Best Value Option',\n        maxDaysPerTrip: 90,\n        coverLevel: 5,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/basic.png',\n        helpFile: 'https://terracotta.example.com/help/12345.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12345.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 1,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 60.00,\n        wbComm: 5.40,\n        agentComm: 7.20\n      },\n      {\n        id: 'soap-12346',\n        name: 'TravelSafe Premium 2024 - Single Trip Travel Insurance',\n        type: 'standard' as const,\n        price: 108.90,\n        coverage: {\n          medical: '€10,000,000', // Cover level 10\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Up to 120 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12346\n        terracottaQuoteId: '12346',\n        schemaName: 'TravelSafe Premium 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12346.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12346.pdf',\n        currency: 'EUR',\n        ipt: 18.90,\n        // Complete SOAP response fields\n        schemaID: 717,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Premium',\n        typePackageName: 'Premium Package',\n        isAnnual: 0,\n        isBestBuy: 0,\n        isBestBuyText: '',\n        maxDaysPerTrip: 120,\n        coverLevel: 10,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/premium.png',\n        helpFile: 'https://terracotta.example.com/help/12346.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12346.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 2,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 90.00,\n        wbComm: 8.10,\n        agentComm: 10.80\n      }\n    ];\n    \n    // Sort by IPT (highest first) and take top 3\n    const sortedByIPT = allSampleQuotes.sort((a, b) => {\n      const iptA = a.ipt || 0;\n      const iptB = b.ipt || 0;\n      return iptB - iptA; // Descending order (highest IPT first)\n    });\n    \n    const top3 = sortedByIPT.slice(0, 3);\n    \n    // Sort the top 3 by price (ascending - least expensive to most expensive)\n    return top3.sort((a, b) => a.price - b.price);\n  };\n\n  // Helper function to calculate coverage levels using real SOAP data\n  const calculateRealCoverageLevels = (result: any, destination: string, tripType: string) => {\n    // Use real data from SOAP response when available, fallback to calculated values\n    const baseMedical = result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : \n                       tripType === 'annual' ? '€5,000,000' : '€2,000,000';\n    \n    const baseBaggage = '€1,000'; // This would ideally come from SOAP response\n    const baseCancellation = '€2,000'; // This would ideally come from SOAP response\n    \n    // Enhance coverage based on destination category and SOAP data\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n    \n    // Use SOAP cover level if available\n    if (result.coverLevel > 0) {\n      medicalMultiplier = 1; // Use the real cover level from SOAP\n    }\n    \n    return {\n      medical: result.coverLevel > 0 ? baseMedical : \n               `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to generate features using real SOAP data\n  const generateFeaturesFromSOAPData = (result: any, destination: string, tripType: string): string[] => {\n    const baseFeatures = [\n      '24/7 Emergency Assistance',\n      'Medical Coverage',\n      'Trip Cancellation',\n      'Baggage Protection'\n    ];\n    \n    const soapFeatures: string[] = [];\n    const destinationFeatures: string[] = [];\n    \n    // Add features based on SOAP response data\n    if (result.isAnnual === 1) {\n      soapFeatures.push('Annual Multi-Trip Coverage', 'Unlimited Trips', 'Annual Policy Benefits');\n    }\n    \n    if (result.isBestBuy === 1) {\n      soapFeatures.push('Best Buy Policy', result.isBestBuyText || 'Recommended Option');\n    }\n    \n    if (result.maxDaysPerTrip > 0) {\n      soapFeatures.push(`Up to ${result.maxDaysPerTrip} days per trip`);\n    }\n    \n    if (result.discount > 0) {\n      soapFeatures.push(`${result.discount}% Discount Applied`);\n    }\n    \n    // Add destination-specific features\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    \n    if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    \n    return [...baseFeatures, ...soapFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to calculate coverage levels based on destination and trip type (fallback)\n  const calculateCoverageLevels = (destination: string, tripType: string, price: number) => {\n    const baseMedical = tripType === 'annual' ? '€5,000,000' : tripType === 'longstay' ? '€3,000,000' : '€2,000,000';\n    const baseBaggage = '€1,000';\n    const baseCancellation = '€2,000';\n    \n    // Enhance coverage based on destination category\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n    \n    // Enhance based on price level\n    if (price > 200) {\n      medicalMultiplier *= 2;\n      baggageMultiplier *= 2;\n      cancellationMultiplier *= 2;\n    } else if (price > 100) {\n      medicalMultiplier *= 1.5;\n      baggageMultiplier *= 1.5;\n      cancellationMultiplier *= 1.5;\n    }\n    \n    return {\n      medical: `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to determine quote type based on price and index\n  const determineQuoteType = (price: number, index: number): 'basic' | 'standard' | 'premium' => {\n    if (price < 50) return 'basic';\n    if (price < 150) return 'standard';\n    return 'premium';\n  };\n\n  // Helper function to generate features based on destination and trip type\n  const generateFeaturesForDestination = (destination: string, tripType: string): string[] => {\n    const baseFeatures = [\n      '24/7 Emergency Assistance',\n      'Medical Coverage',\n      'Trip Cancellation',\n      'Baggage Protection'\n    ];\n    \n    const destinationFeatures: string[] = [];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    \n    if (tripType === 'annual') {\n      destinationFeatures.push('Multiple Trip Coverage', 'Annual Policy Benefits', 'Unlimited Trips');\n    } else if (tripType === 'longstay') {\n      destinationFeatures.push('Extended Stay Coverage', 'Long Term Medical', 'Extended Baggage Protection', 'Long Stay Benefits');\n    } else if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    \n    return [...baseFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to generate activities based on destination\n  const generateActivitiesForDestination = (destination: string): string[] => {\n    const baseActivities = ['Standard activities'];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      return ['Standard activities', 'Adventure sports', 'Extreme sports', 'Water sports', 'Winter sports'];\n    } else if (destination.toLowerCase().includes('europe')) {\n      return ['Standard activities', 'Adventure sports', 'Winter sports'];\n    }\n    \n    return baseActivities;\n  };\n\n  // Enhanced mock quote generation that simulates Terracotta-style data\n  const generateEnhancedMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    // Generate multiple mock quotes based on available schemas\n    const mockQuotes: QuoteOption[] = [];\n    \n    // Create quotes for each available schema if we have them, otherwise use defaults\n    const schemasToUse = availableProducts.length > 0 ? availableProducts : [\n      { SchemaID: 683, SchemaName: 'TravelSafe Basic' },\n      { SchemaID: 717, SchemaName: 'TravelSafe Premium' }\n    ];\n\n    schemasToUse.forEach((schema, index) => {\n      const price = Math.round((basePrice + (days * dailyRate) + (index * 30)) * formData.numberOfTravelers * tripMultiplier);\n      const coverage = calculateCoverageLevels(formData.destination, formData.tripType, price);\n      const features = generateFeaturesForDestination(formData.destination, formData.tripType);\n      const quoteType = determineQuoteType(price, index);\n\n      mockQuotes.push({\n        id: `mock-${schema.SchemaID}-${index}`,\n        name: `${schema.SchemaName} - ${formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip'}`,\n        type: quoteType,\n        price: price,\n        coverage: coverage,\n        features: features,\n        // Terracotta specific fields (mock)\n        terracottaQuoteId: `mock-${schema.SchemaID}-${Date.now()}`,\n        schemaName: schema.SchemaName,\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/mock.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/mock.pdf',\n        currency: 'EUR',\n        ipt: Math.round(price * 0.21), // 21% IPT\n        // Additional metadata\n        schemaID: schema.SchemaID,\n        destinationCategory: formData.destination,\n        tripType: formData.tripType\n      });\n    });\n\n    return mockQuotes;\n  };\n\n  // Legacy mock quotes (kept for backward compatibility)\n  const generateLegacyMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    const options: QuoteOption[] = [\n      {\n        id: 'terracotta-basic',\n        name: 'Terracotta TravelSafe Basic',\n        type: 'basic',\n        price: Math.round((basePrice + (days * dailyRate)) * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€5,000,000' : '€2,000,000',\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities']\n        },\n        features: [\n          'Emergency Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          '24/7 Assistance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-001`,\n        schemaName: 'TravelSafe Basic',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/basic.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/basic.pdf',\n        currency: 'EUR',\n        ipt: 15.50\n      },\n      {\n        id: 'terracotta-standard',\n        name: 'Terracotta TravelSafe Standard',\n        type: 'standard',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.3 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€5,000,000',\n          baggage: '€2,500',\n          cancellation: '€5,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          'Enhanced Medical Coverage',\n          'Trip Cancellation & Curtailment',\n          'Enhanced Baggage Protection',\n          'Adventure Sports Coverage',\n          '24/7 Assistance',\n          'Travel Delay Compensation'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-002`,\n        schemaName: 'TravelSafe Standard',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/standard.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/standard.pdf',\n        currency: 'EUR',\n        ipt: 22.75\n      },\n      {\n        id: 'terracotta-premium',\n        name: 'Terracotta TravelSafe Premium',\n        type: 'premium',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.8 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€10,000,000',\n          baggage: '€5,000',\n          cancellation: '€10,000',\n          activities: ['All activities', 'Extreme sports', 'Winter sports']\n        },\n        features: [\n          'Maximum Medical Coverage',\n          'Comprehensive Trip Protection',\n          'Premium Baggage Coverage',\n          'All Sports & Activities',\n          '24/7 VIP Assistance',\n          'Travel Delay & Missed Connections',\n          'Personal Liability Coverage',\n          'Emergency Cash Advance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-003`,\n        schemaName: 'TravelSafe Premium',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/premium.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/premium.pdf',\n        currency: 'EUR',\n        ipt: 35.00\n      }\n    ];\n\n    return options;\n  };\n\n  // Custom Date Picker Component\n  const CustomDatePicker: React.FC<{\n    id: string;\n    value: string;\n    onChange: (value: string) => void;\n    placeholder: string;\n    required?: boolean;\n    minDate?: string; // ISO date string for minimum selectable date\n  }> = ({ id, value, onChange, placeholder, required, minDate }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentDate, setCurrentDate] = useState(() => {\n      // Initialize with selected date if available, otherwise current date\n      return value ? new Date(value) : new Date();\n    });\n    const pickerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (pickerRef.current && !pickerRef.current.contains(event.target as Node)) {\n          setIsOpen(false);\n        }\n      };\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n      }\n\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [isOpen]);\n\n    // Update current date when value changes to show the correct month\n    useEffect(() => {\n      if (value) {\n        setCurrentDate(new Date(value));\n      }\n    }, [value]);\n\n    // Helper function to check if a date is valid (not in past and not before minDate)\n    const isDateValid = (date: Date): boolean => {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n      \n      // Reset the input date to start of day for accurate comparison\n      const inputDate = new Date(date);\n      inputDate.setHours(0, 0, 0, 0);\n      \n      // Check if date is in the past\n      if (inputDate < today) {\n        return false;\n      }\n      \n      // Check if date is before minimum date\n      if (minDate) {\n        const minDateObj = new Date(minDate);\n        minDateObj.setHours(0, 0, 0, 0);\n        if (inputDate < minDateObj) {\n          return false;\n        }\n      }\n      \n      return true;\n    };\n\n    const generateCalendar = () => {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const days = [];\n      \n      // Add empty cells for days before the first day of the month\n      for (let i = 0; i < startingDayOfWeek; i++) {\n        days.push(<div key={`empty-${i}`} className=\"calendar-day empty\"></div>);\n      }\n\n      // Add days of the month\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = new Date(year, month, day);\n        // Create ISO string manually to avoid timezone issues\n        const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        const isSelected = value === dateString;\n        const isToday = new Date().toDateString() === date.toDateString();\n        const isValid = isDateValid(date);\n\n        days.push(\n          <div\n            key={day}\n            className={`calendar-day ${isSelected ? 'selected' : ''} ${isToday ? 'today' : ''} ${!isValid ? 'disabled' : ''}`}\n            onClick={() => {\n              if (isValid) {\n                onChange(dateString);\n                setIsOpen(false);\n              }\n            }}\n            style={{\n              cursor: isValid ? 'pointer' : 'not-allowed',\n              opacity: isValid ? 1 : 0.4\n            }}\n          >\n            {day}\n          </div>\n        );\n      }\n\n      return days;\n    };\n\n    const navigateMonth = (direction: number) => {\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n    };\n\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    return (\n      <div className=\"custom-date-picker\" ref={pickerRef}>\n        <div className=\"date-input-wrapper\">\n          <input\n            type=\"text\"\n            id={id}\n            value={value ? formatDateToEuropean(value) : ''}\n            onChange={(e) => {\n              const formattedValue = formatDateInput(e.target.value);\n              const isoDate = formattedValue.length === 10 ? convertToISO(formattedValue) : '';\n              \n              // Validate that the date is valid (not in past and not before minDate)\n              if (isoDate) {\n                const inputDate = new Date(isoDate);\n                if (!isDateValid(inputDate)) {\n                  // Don't update the value if it's an invalid date\n                  return;\n                }\n              }\n              \n              onChange(isoDate);\n            }}\n            placeholder={placeholder}\n            title={minDate ? \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\" : \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\"\n            }\n            pattern=\"\\d{2}/\\d{2}/\\d{4}\"\n            maxLength={10}\n            required={required}\n          />\n          <span \n            className=\"date-icon clickable\" \n            onClick={() => setIsOpen(!isOpen)}\n            title=\"Open calendar\"\n          >\n            📅\n          </span>\n        </div>\n        \n        {isOpen && (\n          <div className=\"calendar-popup\">\n            <div className=\"calendar-header\">\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(-1)}\n              >\n                ‹\n              </button>\n              <span className=\"calendar-month-year\">\n                {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\n              </span>\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(1)}\n              >\n                ›\n              </button>\n            </div>\n            <div className=\"calendar-weekdays\">\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                <div key={day} className=\"calendar-weekday\">{day}</div>\n              ))}\n            </div>\n            <div className=\"calendar-days\">\n              {generateCalendar()}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleInputChange = (field: string, value: string | number) => {\n    setFormData(prev => {\n      const newData = {\n        ...prev,\n        [field]: value\n      };\n      \n      // If start date is changed, clear end date if it's now invalid\n      if (field === 'startDate' && value && prev.endDate) {\n        const startDate = new Date(value as string);\n        const endDate = new Date(prev.endDate);\n        startDate.setDate(startDate.getDate() + 1); // Add 1 day to start date\n        \n        // If end date is before or equal to start date, clear it\n        if (endDate <= startDate) {\n          newData.endDate = '';\n        }\n      }\n      \n      return newData;\n    });\n  };\n\n  const handleTravelerChange = (index: number, field: keyof TravelerInfo, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      travelers: prev.travelers.map((traveler, i) => \n        i === index ? { ...traveler, [field]: value } : traveler\n      )\n    }));\n  };\n\n  const handleNumberOfTravelersChange = (count: number) => {\n    setFormData(prev => {\n      const travelers = [...prev.travelers];\n      \n      if (count > travelers.length) {\n        // Add new travelers\n        for (let i = travelers.length; i < count; i++) {\n          travelers.push({\n            firstName: '',\n            lastName: '',\n            age: '',\n            email: '',\n            phone: '',\n            vaxId: '',\n            nationality: ''\n          });\n        }\n      } else if (count < travelers.length) {\n        // Remove travelers\n        travelers.splice(count);\n      }\n      \n      return {\n        ...prev,\n        numberOfTravelers: count,\n        travelers\n      };\n    });\n  };\n\n  const handleBillingAddressChange = (field: keyof QuoteFormData['billingAddress'], value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      billingAddress: {\n        ...prev.billingAddress,\n        [field]: value\n      }\n    }));\n  };\n\n  // Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\n  const convertToISO = (ddmmyyyy: string): string => {\n    if (!ddmmyyyy || ddmmyyyy.length !== 10) return '';\n    const [day, month, year] = ddmmyyyy.split('/');\n    // Create date in local timezone to avoid timezone issues\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n    return date.toISOString().split('T')[0];\n  };\n\n  // Helper function to format input as DD/MM/YYYY\n  const formatDateInput = (value: string): string => {\n    // Remove all non-digits\n    const digits = value.replace(/\\D/g, '');\n    \n    // Format as DD/MM/YYYY\n    if (digits.length >= 8) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4, 8)}`;\n    } else if (digits.length >= 4) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4)}`;\n    } else if (digits.length >= 2) {\n      return `${digits.slice(0, 2)}/${digits.slice(2)}`;\n    }\n    return digits;\n  };\n\n  const fetchGeneralConditions = async () => {\n    if (formData.selectedQuote?.terracottaQuoteId) {\n      try {\n        console.log('🔄 Fetching general conditions (screening questions) for QuoteID:', formData.selectedQuote.terracottaQuoteId);\n        const screeningResponse = await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);\n        console.log('📥 General Conditions Response:', screeningResponse);\n        \n        if (screeningResponse.screeningQuestions && screeningResponse.screeningQuestions.length > 0) {\n          setGeneralConditionsData(screeningResponse.screeningQuestions);\n          console.log('✅ General conditions loaded from API:', screeningResponse.screeningQuestions);\n          setShowGeneralConditions(true);\n        } else {\n          console.warn('⚠️ No general conditions in API response');\n          setGeneralConditionsData([]);\n          setShowGeneralConditions(true);\n        }\n      } catch (error) {\n        console.error('❌ Error fetching general conditions:', error);\n        // Show empty popup on error\n        setGeneralConditionsData([]);\n        setShowGeneralConditions(true);\n      }\n    }\n  };\n\n  const handleTermsAcceptance = (checked: boolean) => {\n    setTermsAccepted(checked);\n    \n    if (checked && screeningQuestions.length > 0) {\n      // When checkbox is checked, automatically answer \"yes\" to all screening questions (yesAction)\n      const allYesAnswers: {[key: number]: 'yes'} = {};\n      screeningQuestions.forEach((question) => {\n        allYesAnswers[question.questionNumber] = 'yes';\n      });\n      setScreeningAnswers(allYesAnswers);\n      console.log('✅ Terms accepted - All screening questions answered as \"Yes\" (yesAction triggered)');\n    } else if (!checked) {\n      // When unchecked, clear the screening answers\n      setScreeningAnswers({});\n      console.log('❌ Terms not accepted - Screening answers cleared');\n    }\n  };\n\n  const nextPhase = async () => {\n    if (currentPhase === 1) {\n      // Generate quotes when moving from phase 1 to 2\n      try {\n        console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');\n        console.log('📋 Current Form Data:', JSON.stringify(formData, null, 2));\n        \n        const options = await generateQuoteOptions();\n        \n        console.log('✅ Quote options received:', options);\n        console.log('📊 Number of quotes:', options.length);\n        \n        setQuoteOptions(options);\n        \n        // Automatically pre-select the Essential plan\n        const essentialPlan = options.find(option => \n          option.name?.toLowerCase().includes('essential') || \n          option.policytypeName?.toLowerCase().includes('essential')\n        );\n        if (essentialPlan) {\n          console.log('✅ Auto-selected Essential plan:', essentialPlan);\n          setFormData(prev => ({\n            ...prev,\n            selectedQuote: essentialPlan\n          }));\n        } else {\n          console.log('⚠️ No Essential plan found, selecting first available quote');\n          if (options.length > 0) {\n            setFormData(prev => ({\n              ...prev,\n              selectedQuote: options[0]\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('❌ CRITICAL ERROR generating quotes:', error);\n        console.error('Error details:', error instanceof Error ? error.message : String(error));\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n        setQuoteError('Failed to generate quotes. Please try again.');\n        return; // Don't proceed to next phase if quotes failed\n      }\n    }\n    \n    if (currentPhase < 6) {\n      setCurrentPhase((prev) => (prev + 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const prevPhase = () => {\n    if (currentPhase > 1) {\n      setCurrentPhase((prev) => (prev - 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const selectQuote = (quote: QuoteOption) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedQuote: quote\n    }));\n  };\n\n  const addAdditionalPolicy = async (policy: AdditionalPolicy) => {\n    // Prevent multiple simultaneous requests\n    if (processingAddonId) {\n      return;\n    }\n    \n    try {\n      setProcessingAddonId(policy.id);\n      \n      // Check if quoteID is available\n      if (!formData.selectedQuote?.terracottaQuoteId) {\n        alert('Error: No quote selected. Please select a quote first.');\n        return;\n      }\n\n      // Build comma-separated list of alteration IDs (existing + new one)\n      const existingAlterationIds = formData.additionalPolicies.map(p => p.alterationId);\n      const allAlterationIds = [...existingAlterationIds, policy.alterationId].join(',');\n      \n      // Convert travelers to Terracotta format\n      const travelers: TerracottaTraveler[] = formData.travelers.map((traveler, index) => {\n        const age = traveler.dateOfBirth ? \n          calculateAgeFromDOB(traveler.dateOfBirth) : \n          parseInt(traveler.age) || 25;\n        \n        const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n        \n        return {\n          TravellerNumber: index + 1,\n          Title: traveler.title || 'Mr',\n          FirstName: traveler.firstName || 'Customer',\n          LastName: traveler.lastName || 'Name',\n          DateOfBirth: formatDateForTerracotta(dateOfBirth),\n          Age: age,\n          TitleID: getTitleID(traveler.title || 'Mr'),\n          AlterationID: '' // Empty for individual traveler alterations\n        };\n      });\n      \n      // Build contact details\n      const contactDetails: TerracottaContactDetails = {\n        Address: formData.billingAddress?.street || '123 Main Street',\n        Postcode: formData.billingAddress?.postalCode || '12345',\n        Email: formData.travelers[0]?.email || 'customer@example.com',\n        Telephone: formData.travelers[0]?.phone || '+302101234567'\n      };\n      \n      // Build SOAP request\n      const alterationsRequest: TerracottaQuoteWithAlterationsRequest = {\n        userID: '4072',\n        userCode: '111427',\n        quoteID: formData.selectedQuote.terracottaQuoteId,\n        specificQuoteDetails: {\n          AlterationID: allAlterationIds,\n          Travellers: travelers,\n          ContactDetails: contactDetails\n        }\n      };\n      \n      // Call SOAP service\n      const response: TerracottaQuoteResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n      \n      // Extract the updated price from the response\n      if (response.quoteResults && response.quoteResults.length > 0) {\n        const updatedQuote = response.quoteResults[0];\n        const newGrossPrice = updatedQuote.GrossPrice;\n        \n        // Store the total GrossPrice (this is the complete price including base + all addons)\n        setTotalGrossPriceWithAddons(newGrossPrice);\n        \n        // Add the policy to state (price will be calculated from total)\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      } else {\n        // Still add the addon but with 0 price\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      }\n      \n    } catch (error) {\n      console.error('Error adding addon with alterations:', error);\n      alert(`Error adding addon: ${error instanceof Error ? error.message : 'Unknown error'}. Please try again.`);\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n  \n  // Helper functions for date/age calculations\n  const calculateAgeFromDOB = (dob: string): number => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return Math.max(0, age);\n  };\n  \n  const calculateDOBFromAge = (age: number): string => {\n    const currentYear = new Date().getFullYear();\n    const birthYear = currentYear - age;\n    return `${birthYear}/05/20`; // Use May 20 as default date\n  };\n  \n  const formatDateForTerracotta = (dateString: string): string => {\n    if (!dateString) return '';\n    // Handle different formats\n    if (dateString.includes('/')) {\n      const parts = dateString.split('/');\n      if (parts.length === 3 && parts[0].length === 4) {\n        return dateString; // Already in YYYY/MM/DD format\n      } else if (parts.length === 3) {\n        // Convert DD/MM/YYYY to YYYY/MM/DD\n        return `${parts[2]}/${parts[1]}/${parts[0]}`;\n      }\n    }\n    if (dateString.includes('-')) {\n      return dateString.replace(/-/g, '/');\n    }\n    return dateString;\n  };\n  \n  const getTitleID = (title: string): number => {\n    const titleMap: { [key: string]: number } = {\n      'Mr': 1, 'Mrs': 2, 'Miss': 3, 'Ms': 4, 'Dr': 5, 'Prof': 6\n    };\n    return titleMap[title] || 1;\n  };\n\n  const removeAdditionalPolicy = async (policyId: string) => {\n    try {\n      setProcessingAddonId(policyId);\n      \n      // Remove the addon from the list first\n      const remainingAddons = formData.additionalPolicies.filter(p => p.id !== policyId);\n      \n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: remainingAddons\n      }));\n      \n      // If no addons remaining, reset to base price\n      if (remainingAddons.length === 0) {\n        setTotalGrossPriceWithAddons(null);\n        setProcessingAddonId(null);\n        return;\n      }\n      \n      // If there are still addons, call SOAP to get updated price\n      if (formData.selectedQuote?.terracottaQuoteId) {\n        // Build comma-separated list of remaining alteration IDs\n        const remainingAlterationIds = remainingAddons.map(p => p.alterationId).join(',');\n        \n        // Convert travelers to Terracotta format\n        const travelers: TerracottaTraveler[] = formData.travelers.map((traveler, index) => {\n          const age = traveler.dateOfBirth ? \n            calculateAgeFromDOB(traveler.dateOfBirth) : \n            parseInt(traveler.age) || 25;\n          \n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          \n          return {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || 'Customer',\n            LastName: traveler.lastName || 'Name',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            AlterationID: ''\n          };\n        });\n        \n        // Build contact details\n        const contactDetails: TerracottaContactDetails = {\n          Address: formData.billingAddress?.street || '123 Main Street',\n          Postcode: formData.billingAddress?.postalCode || '12345',\n          Email: formData.travelers[0]?.email || 'customer@example.com',\n          Telephone: formData.travelers[0]?.phone || '+302101234567'\n        };\n        \n        // Build SOAP request\n        const alterationsRequest: TerracottaQuoteWithAlterationsRequest = {\n          userID: '4072',\n          userCode: '111427',\n          quoteID: formData.selectedQuote.terracottaQuoteId,\n          specificQuoteDetails: {\n            AlterationID: remainingAlterationIds,\n            Travellers: travelers,\n            ContactDetails: contactDetails\n          }\n        };\n        \n        // Call SOAP service\n        const response: TerracottaQuoteResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n        \n        // Update the GrossPrice\n        if (response.quoteResults && response.quoteResults.length > 0) {\n          const updatedQuote = response.quoteResults[0];\n          const newGrossPrice = updatedQuote.GrossPrice;\n          setTotalGrossPriceWithAddons(newGrossPrice);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating price after addon removal:', error);\n      // Keep the addon removed even if SOAP call fails\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n\n  const calculateTotalPrice = (): number => {\n    // If we have a GrossPrice from SOAP alterations, use that\n    if (totalGrossPriceWithAddons !== null && formData.additionalPolicies.length > 0) {\n      return totalGrossPriceWithAddons;\n    }\n    \n    // Otherwise, use the base price + individual addon prices (fallback)\n    const basePrice = typeof formData.selectedQuote?.price === 'number' \n      ? formData.selectedQuote.price \n      : parseFloat(formData.selectedQuote?.price || '0');\n    const additionalPrice = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n    return basePrice + additionalPrice;\n  };\n\n  const generatePolicyPDF = async () => {\n    if (!policyNumber) {\n      console.error('⚠️ Cannot generate PDF: No policy number available');\n      alert('Policy number not available. Please contact support.');\n      return;\n    }\n    console.log('📄 Generating PDF for Policy ID:', policyNumber);\n    await generatePDF(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  };\n\n  const downloadPolicyPDF = () => {\n    generatePolicyPDF();\n  };\n\n  const processPayment = async () => {\n    // Validate that both checkboxes are checked before processing payment\n    if (!termsAccepted || !marketingEmailsAccepted) {\n      alert('Please check both checkboxes:\\n\\n1. Accept the Privacy Policy, Terms and Conditions and General conditions\\n2. Accept to receive marketing emails about travel insurance offers\\n\\nBoth are required to proceed with payment.');\n      return;\n    }\n    \n    setIsProcessing(true);\n    \n    try {\n      // First save the quote to database\n      const quoteData = {\n        destination: formData.destination,\n        countryOfResidence: formData.countryOfResidence,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        tripType: formData.tripType,\n        numberOfTravelers: formData.numberOfTravelers,\n        travelers: formData.travelers,\n        selectedQuote: formData.selectedQuote,\n        additionalPolicies: formData.additionalPolicies,\n        totalAmount: calculateTotalPrice()\n      };\n\n      // console.log('Saving quote to database...', quoteData);\n      // console.log('Quote data JSON string:', JSON.stringify(quoteData));\n      const quoteResponse = await createQuote(quoteData);\n      \n      if (quoteResponse.status === 'success' && quoteResponse.data) {\n        const quoteId = quoteResponse.data.quoteId;\n        \n        // Convert screening answers to Terracotta format\n        const terracottaScreeningAnswers = Object.entries(screeningAnswers).map(([questionNumber, answer]) => ({\n          questionNumber: parseInt(questionNumber),\n          answer: answer as 'yes' | 'no'\n        }));\n\n        // Build travelers array and contact details with REAL data from payment step\n        const travelers = formData.travelers.map((traveler, index) => {\n          const age = traveler.dateOfBirth ? \n            calculateAgeFromDOB(traveler.dateOfBirth) : \n            parseInt(traveler.age) || 30;\n          \n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          \n          return {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName,\n            LastName: traveler.lastName,\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            minAge: age,\n            maxAge: age,\n            ScreeningInformation: null\n          };\n        });\n        \n        // Build contact details with REAL data from payment step\n        const contactDetails = {\n          Address: formData.billingAddress.street,\n          Postcode: formData.billingAddress.postalCode,\n          Email: formData.travelers[0]?.email || '',\n          Telephone: formData.travelers[0]?.phone || ''\n        };\n        \n        console.log('✅ Using REAL Travelers:', travelers);\n        console.log('✅ Using REAL Contact Details:', contactDetails);\n\n        // Re-fetch quote with REAL traveler data using ProvideQuotation\n        if (formData.selectedQuote?.terracottaQuoteId) {\n          try {\n            console.log('🔄 Re-fetching quote with REAL traveler data using ProvideQuotation...');\n            \n            // Build quote request with REAL traveler and contact data\n            const quoteRequestWithRealData = {\n              userID: '4072',\n              userCode: '111427',\n              quoteDetails: {\n                ResidenceID: getResidenceID(formData.countryOfResidence),\n                TypePolicyID: getTypePolicyID(formData.tripType, availablePolicyTypes),\n                TypePackageID: '1',\n                Destination: formData.destination || 'Europe',\n                StartDate: formatDateForTerracotta(formData.startDate),\n                EndDate: formatDateForTerracotta(formData.endDate),\n                Travellers: travelers, // REAL traveler data\n                ContactDetails: contactDetails, // REAL contact data\n                includeAnnualQuotes: formData.tripType === 'annual' ? 1 : 0,\n                includeUpsell: 0,\n                currencyID: 1,\n                schemaIDFilter: '717'\n              }\n            };\n            \n            console.log('📤 ProvideQuotation with REAL data:', quoteRequestWithRealData);\n            const updatedQuoteResponse = await terracottaService.provideQuotation(quoteRequestWithRealData);\n            console.log('📥 Updated quote response:', updatedQuoteResponse);\n            \n            // If add-ons were selected, re-fetch with alterations using REAL data\n            if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n              console.log('🔄 Re-fetching quote with add-ons using ProvideQuotationWithAlterations...');\n              \n              const alterationIds = formData.additionalPolicies.map(p => p.alterationId).join(',');\n              \n              const alterationsRequestWithRealData = {\n                userID: '4072',\n                userCode: '111427',\n                quoteID: formData.selectedQuote.terracottaQuoteId,\n                specificQuoteDetails: {\n                  AlterationID: alterationIds,\n                  Travellers: travelers, // REAL traveler data\n                  ContactDetails: contactDetails // REAL contact data\n                }\n              };\n              \n              console.log('📤 ProvideQuotationWithAlterations with REAL data:', alterationsRequestWithRealData);\n              const updatedAlterationsResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequestWithRealData);\n              console.log('📥 Updated alterations response:', updatedAlterationsResponse);\n            }\n          } catch (updateError) {\n            console.warn('⚠️ Could not update quote with real data, continuing with existing quote:', updateError);\n          }\n        }\n\n        // Save policy details with Terracotta\n        if (formData.selectedQuote?.terracottaQuoteId) {\n          try {\n            console.log('💾 Saving policy details with Terracotta...');\n            console.log('📋 QuoteID:', formData.selectedQuote.terracottaQuoteId);\n            console.log('📋 Screening Answers:', terracottaScreeningAnswers);\n            console.log('👥 Traveler Data (REAL from Payment Step):', formData.travelers);\n            console.log('🏠 Billing Address (REAL from Payment Step):', formData.billingAddress);\n            \n            const savePolicyResponse = await terracottaService.savePolicyDetails({\n              userID: '4072',\n              userCode: '111427',\n              quoteID: formData.selectedQuote.terracottaQuoteId,\n              screeningQuestionAnswers: terracottaScreeningAnswers,\n              medicalScreeningReference: 'string',\n              useDefaultAnswers: 1,\n              travelers: travelers,\n              contactDetails: contactDetails\n            });\n\n            console.log('✅ SavePolicyDetails response:', savePolicyResponse);\n            console.log('📋 Policy Saved Status:', savePolicyResponse.policySaved);\n            console.log('📋 Policy ID:', savePolicyResponse.policyID);\n            console.log('📄 Certificate URL:', savePolicyResponse.certificate);\n            console.log('📄 Policy Wording URL:', savePolicyResponse.PW);\n            console.log('📄 Summary of Cover URL:', savePolicyResponse.SI);\n\n            // Handle both \"Yes\" and \"true\" formats for policySaved\n            if (savePolicyResponse.policySaved === 'Yes' || savePolicyResponse.policySaved === 'true') {\n              if (!savePolicyResponse.policyID) {\n                console.error('⚠️ Warning: Policy saved but no Policy ID received!');\n                throw new Error('Policy saved but no Policy ID received from Terracotta');\n              }\n              \n              console.log('✅ Policy saved successfully! Policy ID:', savePolicyResponse.policyID);\n              setPolicyNumber(savePolicyResponse.policyID);\n              \n              // Store policy document URLs from SavePolicyDetails response\n              const documents = {\n                certificate: savePolicyResponse.certificate || '',\n                policyWording: savePolicyResponse.PW || '',\n                summaryOfCover: savePolicyResponse.SI || '',\n                keyFacts: savePolicyResponse.KF || '',\n                ipid: savePolicyResponse.IPID || ''\n              };\n              \n              console.log('📄 Setting policy documents:', documents);\n              console.log('📄 SavePolicyDetails full response:', savePolicyResponse);\n              setPolicyDocuments(documents);\n              \n              // Debug: Check if documents are empty and log\n              if (!documents.certificate) {\n                console.warn('⚠️ Certificate URL not found in SavePolicyDetails response!');\n                console.warn('💡 This might be normal - certificate may need to be generated separately');\n              }\n              if (!documents.policyWording) {\n                console.warn('⚠️ Policy Wording URL not found in SavePolicyDetails response!');\n              }\n              if (!documents.summaryOfCover) {\n                console.warn('⚠️ Summary of Cover URL not found in SavePolicyDetails response!');\n              }\n              \n              if (!documents.certificate && !documents.policyWording && !documents.summaryOfCover) {\n                console.warn('⚠️ No document URLs received from SavePolicyDetails response!');\n                console.warn('💡 Full SavePolicyDetails response:', JSON.stringify(savePolicyResponse, null, 2));\n              }\n              \n              // Update database with Terracotta Policy ID and status\n              console.log('💾 Updating database with Terracotta Policy ID...');\n              const paymentData = {\n                quoteId: quoteId,\n                paymentMethod: formData.paymentMethod || 'card',\n                cardNumber: formData.cardNumber || '',\n                expiryDate: formData.expiryDate || '',\n                cvv: formData.cvv || '',\n                billingAddress: formData.billingAddress,\n                amount: calculateTotalPrice(),\n                policyNumber: savePolicyResponse.policyID // Include Terracotta Policy ID\n              };\n\n              console.log('💳 Updating quote in database with policy details...');\n              const paymentResponse = await apiProcessPayment(paymentData);\n              \n              if (paymentResponse.status === 'success') {\n                console.log('✅ Database updated successfully with Policy ID:', savePolicyResponse.policyID);\n              } else {\n                console.warn('⚠️ Database update failed, but policy was saved in Terracotta');\n              }\n              \n              setIsProcessing(false);\n              nextPhase(); // Move to documents phase\n              return;\n            } else {\n              console.error('❌ Policy save failed. Message:', savePolicyResponse.Message);\n              throw new Error(savePolicyResponse.Message || 'Failed to save policy with Terracotta');\n            }\n          } catch (terracottaError) {\n            console.error('❌ Terracotta policy save error:', terracottaError);\n            // Fall through to regular payment processing\n          }\n        }\n        \n        // Fallback to regular payment processing if Terracotta fails\n        const paymentData = {\n          quoteId: quoteId,\n          paymentMethod: formData.paymentMethod,\n          cardNumber: formData.cardNumber, // Note: In production, this should be tokenized\n          expiryDate: formData.expiryDate,\n          cvv: formData.cvv,\n          billingAddress: formData.billingAddress,\n          amount: calculateTotalPrice(),\n          policyNumber: policyNumber || undefined // Include Terracotta Policy ID if available\n        };\n\n        console.log('💳 Processing payment with data:', { ...paymentData, cardNumber: '****', cvv: '***' });\n        const paymentResponse = await apiProcessPayment(paymentData);\n        \n        if (paymentResponse.status === 'success') {\n          if (paymentResponse.data?.policyNumber) {\n            setPolicyNumber(paymentResponse.data.policyNumber);\n          }\n          setIsProcessing(false);\n          nextPhase(); // Move to documents phase\n        } else {\n          throw new Error(paymentResponse.message || 'Payment failed');\n        }\n      } else {\n        throw new Error(quoteResponse.message || 'Failed to save quote');\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      setIsProcessing(false);\n      alert('Payment processing failed. Please try again. Error: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  };\n\n  const isPhaseValid = (phase: WizardPhase): boolean => {\n    switch (phase) {\n      case 1:\n        return !!(\n          formData.destination &&\n          formData.startDate &&\n          formData.endDate &&\n          formData.tripType &&\n          formData.countryOfResidence\n        );\n      case 2:\n        return !!formData.selectedQuote;\n      case 3:\n        return true; // Additional policies phase is always valid (optional)\n      case 4:\n        return true; // Review phase is always valid\n      case 5:\n        const travelersValid = formData.travelers.every(t => t.firstName && t.lastName && t.age && t.email);\n        const paymentValid = !!(\n          formData.cardNumber && \n          formData.expiryDate && \n          formData.cvv && \n          formData.billingAddress.street && \n          formData.billingAddress.city && \n          formData.billingAddress.postalCode && \n          formData.billingAddress.country\n        );\n        return travelersValid && paymentValid;\n      case 6:\n        return true; // Documents phase is always valid\n      default:\n        return false;\n    }\n  };\n\n  const renderPhase1 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Trip Details</h2>\n      \n      <div className=\"form-section\">\n        <h3>Trip Details</h3>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"tripType\">\n            Trip Type \n            <span style={{ fontSize: '0.8em', color: '#666', marginLeft: '5px' }}>\n              {isLoadingPolicyTypeDestinations ? '(Loading...)' : `(${availablePolicyTypes.length} types available)`}\n            </span>\n          </label>\n          <select\n            id=\"tripType\"\n            value={formData.tripType}\n            onChange={(e) => handleInputChange('tripType', e.target.value)}\n            required\n            disabled={isLoadingPolicyTypeDestinations}\n          >\n            <option value=\"\">\n              {isLoadingPolicyTypeDestinations ? 'Loading trip types...' : 'Select trip type'}\n            </option>\n            {availablePolicyTypes.map((policyType) => {\n              // Map policy type names to trip type values\n              let tripTypeValue = 'single';\n              const name = policyType.TypePolicyName.toLowerCase();\n              if (name.includes('annual')) {\n                tripTypeValue = 'annual';\n              } else if (name.includes('comprehensive')) {\n                tripTypeValue = 'comprehensive';\n              } else if (name.includes('longstay') || name.includes('long stay')) {\n                tripTypeValue = 'longstay';\n              }\n              \n              return (\n                <option key={policyType.TypePolicyID} value={tripTypeValue}>\n                  {policyType.TypePolicyName}\n                </option>\n              );\n            })}\n            {/* Fallback options if no policy types loaded */}\n            {!isLoadingPolicyTypeDestinations && availablePolicyTypes.length === 0 && (\n              <>\n                <option value=\"single\">Regular Single Trip Insurance</option>\n                <option value=\"annual\">Annual Multi-Trip Travel Insurance</option>\n                <option value=\"comprehensive\">Comprehensive Single Trip Insurance</option>\n                <option value=\"longstay\">Long Stay Travel Insurance</option>\n              </>\n            )}\n          </select>\n        </div>\n        \n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"countryOfResidence\">Country of Residence</label>\n            <select\n              id=\"countryOfResidence\"\n              value={formData.countryOfResidence}\n              onChange={(e) => handleInputChange('countryOfResidence', e.target.value)}\n              required\n              disabled={isLoadingCountriesOfResidence}\n            >\n              <option value=\"\">\n                {isLoadingCountriesOfResidence ? 'Loading countries...' : 'Select your country of residence'}\n              </option>\n              {countriesOfResidence.map((country) => (\n                <option key={country.country_id} value={country.country_name}>\n                  {country.country_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"destination\">\n              Destination Category \n              <span \n                className=\"help-icon\" \n                onClick={() => setShowHelpPopup(true)}\n                title=\"Click to see all countries by category\"\n              >\n                (?)\n              </span>\n            </label>\n            <select\n              id=\"destination\"\n              value={formData.destination}\n              onChange={(e) => handleInputChange('destination', e.target.value)}\n              required\n              disabled={isLoadingCategories}\n            >\n              <option value=\"\">\n                {isLoadingCategories ? 'Loading categories...' : 'Select destination category'}\n              </option>\n              {destinationCategories.map((category) => (\n                <option key={category} value={category}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"startDate\">Departure Date <span className=\"date-format-hint\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"startDate\"\n              value={formData.startDate}\n              onChange={(value) => handleInputChange('startDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"endDate\">Return Date <span className=\"date-format-hint\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"endDate\"\n              value={formData.endDate}\n              onChange={(value) => handleInputChange('endDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n              minDate={formData.startDate ? (() => {\n                // Set minimum date to start date + 1 day\n                const startDate = new Date(formData.startDate);\n                startDate.setDate(startDate.getDate() + 1);\n                return startDate.toISOString().split('T')[0];\n              })() : undefined}\n            />\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"numberOfTravelers\">Number of Travelers</label>\n          <select\n            id=\"numberOfTravelers\"\n            value={formData.numberOfTravelers}\n            onChange={(e) => handleNumberOfTravelersChange(parseInt(e.target.value))}\n          >\n            {[1,2,3,4,5,6,7,8].map(num => (\n              <option key={num} value={num}>{num} Traveler{num > 1 ? 's' : ''}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase2 = () => (\n    <div className=\"wizard-phase\">\n      <div style={{ textAlign: 'center', marginBottom: '40px' }}>\n        <h2 style={{ \n          fontSize: '2.2em', \n          color: '#333',\n          margin: '0 0 10px 0',\n          fontWeight: 'bold',\n          fontFamily: 'sans-serif'\n        }}>\n          Choose Your Insurance Plan\n        </h2>\n        <p style={{ \n          fontSize: '1.1em', \n          color: '#666',\n          margin: '0',\n          fontWeight: '400'\n        }}>\n          Select the coverage that best fits your travel needs.\n        </p>\n      </div>\n      \n      \n      {isLoadingQuotes && (\n        <div className=\"loading-message\">\n          <p>Loading insurance quotes from Terracotta...</p>\n        </div>\n      )}\n      \n      {quoteError && (\n        <div className=\"error-message\">\n          <p>⚠️ {quoteError}</p>\n          <p>Using fallback quotes for demonstration.</p>\n        </div>\n      )}\n      \n      <div className=\"quote-options\" style={{ \n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        gap: '20px',\n        marginTop: '20px',\n        overflowX: 'auto',\n        padding: '20px 0',\n        maxWidth: '100%'\n      }}>\n        {quoteOptions.length > 0 ? quoteOptions.map((option) => (\n          <div \n            key={option.id} \n            className={`quote-option ${formData.selectedQuote?.id === option.id ? 'selected' : ''}`}\n            onClick={() => selectQuote(option)}\n            style={{\n              background: 'white',\n              border: formData.selectedQuote?.id === option.id ? '2px solid #1976d2' : '1px solid #e0e0e0',\n              borderRadius: '8px',\n              padding: '24px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              boxShadow: formData.selectedQuote?.id === option.id \n                ? '0 4px 12px rgba(25, 118, 210, 0.15)'\n                : '0 2px 8px rgba(0,0,0,0.1)',\n              position: 'relative',\n              minWidth: '320px',\n              maxWidth: '320px',\n              flexShrink: 0\n            }}\n            onMouseEnter={(e) => {\n              if (formData.selectedQuote?.id !== option.id) {\n                e.currentTarget.style.boxShadow = '0 4px 16px rgba(0,0,0,0.15)';\n                e.currentTarget.style.borderColor = '#1976d2';\n              }\n            }}\n            onMouseLeave={(e) => {\n              if (formData.selectedQuote?.id !== option.id) {\n                e.currentTarget.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n                e.currentTarget.style.borderColor = '#e0e0e0';\n              }\n            }}\n          >\n            {/* Plan Header */}\n            <div style={{ marginBottom: '20px' }}>\n              <h3 style={{ \n                margin: '0 0 8px 0', \n                fontSize: '1.3em', \n                color: '#1976d2',\n                fontWeight: 'bold'\n              }}>\n                {option.policytypeName || option.policyTypeName || option.name}\n              </h3>\n              <p style={{ \n                margin: '0 0 12px 0', \n                fontSize: '0.9em', \n                color: '#666'\n              }}>\n                {option.packageName || option.typePackageName}\n              </p>\n              <div style={{ marginBottom: '16px' }}>\n                <div style={{ \n                  fontSize: '2em', \n                  fontWeight: 'bold', \n                  color: '#333',\n                  lineHeight: '1'\n                }}>\n                  {option.currency || '€'}{option.price}\n                </div>\n                <div style={{ \n                  fontSize: '0.9em', \n                  color: '#666',\n                  marginTop: '4px'\n                }}>\n                  per trip\n                </div>\n              </div>\n            </div>\n            \n            {/* Best Buy Text */}\n            {option.isBestBuy === 1 && option.isBestBuyText && (\n              <div style={{ \n                marginBottom: '20px',\n                background: '#e8f5e8',\n                border: '1px solid #4caf50',\n                borderRadius: '6px',\n                padding: '8px',\n                fontSize: '0.85em',\n                color: '#2e7d32',\n                textAlign: 'center',\n                fontWeight: 'bold'\n              }}>\n                ✨ {option.isBestBuyText} ✨\n              </div>\n            )}\n            \n            {/* Summary Covers */}\n            {option.SummaryCovers && option.SummaryCovers.length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ \n                  fontSize: '1em', \n                  fontWeight: 'bold', \n                  marginBottom: '12px',\n                  color: '#333'\n                }}>Coverage Details</h4>\n                {option.SummaryCovers.map((cover, index) => (\n                  <div key={index} style={{ \n                    marginBottom: '10px',\n                    padding: '8px',\n                    background: '#f8f9fa',\n                    borderRadius: '4px',\n                    fontSize: '0.85em'\n                  }}>\n                    <div style={{ \n                      fontWeight: 'bold', \n                      color: '#1976d2',\n                      marginBottom: '4px'\n                    }}>\n                      {cover.name}\n                    </div>\n                    <div style={{ fontSize: '0.9em' }}>\n                      <span><strong>Limit:</strong> {cover.Limit}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Action Button */}\n            <button \n              style={{\n                width: '100%',\n                padding: '12px',\n                backgroundColor: formData.selectedQuote?.id === option.id ? '#ff6b35' : '#1976d2',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                fontSize: '0.95em',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n                transition: 'background-color 0.3s ease',\n                textTransform: 'uppercase'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = formData.selectedQuote?.id === option.id ? '#e55a2b' : '#1565c0';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = formData.selectedQuote?.id === option.id ? '#ff6b35' : '#1976d2';\n              }}\n            >\n              {formData.selectedQuote?.id === option.id ? 'SELECTED' : 'SELECT PLAN'}\n            </button>\n          </div>\n        )) : (\n          <div style={{ \n            gridColumn: '1 / -1', \n            textAlign: 'center', \n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>Loading SOAP quotes...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase3 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Enhance Your Coverage</h2>\n      <p>Add optional coverage for extra protection during your trip.</p>\n      \n      <div className=\"selected-plan-summary\">\n        <div className=\"current-plan\">\n          <h3>Your Selected Plan</h3>\n          {formData.selectedQuote && (\n            <div className=\"plan-info\">\n              <div className=\"plan-name\">{formData.selectedQuote.name}</div>\n              <div className=\"plan-price\">€{formData.selectedQuote.price}</div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"additional-policies\">\n        <h3>Optional Coverage Add-ons</h3>\n        {isLoadingAddons ? (\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>Loading available add-ons...</p>\n          </div>\n        ) : availableAdditionalPolicies.length === 0 ? (\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>No additional coverage options available for this policy type.</p>\n          </div>\n        ) : (\n          <div className=\"policies-grid\">\n            {availableAdditionalPolicies.map(policy => {\n              const isSelected = formData.additionalPolicies.some(p => p.id === policy.id);\n              return (\n                <div key={policy.id} className={`policy-card ${isSelected ? 'selected' : ''}`}>\n                  <div className=\"policy-header\">\n                    <div className=\"policy-icon\">{policy.icon}</div>\n                    <div className=\"policy-info\">\n                      <h4>{policy.name}</h4>\n                      {policy.price > 0 && (\n                        <div className=\"policy-price\">€{policy.price.toFixed(2)}</div>\n                      )}\n                    </div>\n                    <button \n                      className={`policy-btn ${isSelected ? 'remove' : 'add'}`}\n                      onClick={() => isSelected ? removeAdditionalPolicy(policy.id) : addAdditionalPolicy(policy)}\n                      disabled={processingAddonId !== null}\n                    >\n                      {processingAddonId === policy.id ? 'PROCESSING...' : (isSelected ? 'REMOVE' : 'ADD')}\n                    </button>\n                  </div>\n                  <div className=\"policy-description\">\n                    <p>{policy.description}</p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      <div className=\"total-summary-box\">\n        <div className=\"summary-content\">\n          <div className=\"base-plan\">\n            <span>Base Plan: {formData.selectedQuote?.name}</span>\n            <span>€{formData.selectedQuote?.price}</span>\n          </div>\n          {formData.additionalPolicies.map(policy => (\n            <div key={policy.id} className=\"additional-item\">\n              <span>{policy.name}</span>\n              <span>{policy.price > 0 ? `€${policy.price.toFixed(2)}` : 'Included in total'}</span>\n            </div>\n          ))}\n          <div className=\"total-line\">\n            <span className=\"total-label\">Total Premium:</span>\n            <span className=\"total-amount\">€{calculateTotalPrice().toFixed(2)}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase4 = () => {\n    const calculateTripDuration = () => {\n      if (formData.startDate && formData.endDate) {\n        const start = new Date(formData.startDate);\n        const end = new Date(formData.endDate);\n        const days = Math.ceil((end.getTime() - start.getTime()) / (1000 * 3600 * 24));\n        return days;\n      }\n      return 0;\n    };\n\n    return (\n      <div className=\"wizard-phase\">\n        <h2>Review Your Details</h2>\n        <p>Please carefully review all information below. You can go back to make changes if needed.</p>\n        \n        <div className=\"professional-summary\">\n          {/* Trip Overview Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🌍 Trip Overview</h3>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"summary-grid\">\n                <div className=\"summary-row\">\n                  <span className=\"label\">Insurance Type:</span>\n                  <span className=\"value\">{\n                    formData.tripType === 'single' ? 'Single Trip Insurance' :\n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' :\n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance'\n                  }</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Country of Residence:</span>\n                  <span className=\"value\">{formData.countryOfResidence}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Destination:</span>\n                  <span className=\"value\">{formData.destination}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Departure Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.startDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Return Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.endDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Trip Duration:</span>\n                  <span className=\"value\">{calculateTripDuration()} days</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Number of Travelers:</span>\n                  <span className=\"value\">{formData.numberOfTravelers} {formData.numberOfTravelers === 1 ? 'person' : 'people'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insurance Plan Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🛡️ Selected Insurance Plan</h3>\n            </div>\n            <div className=\"card-content\">\n              {formData.selectedQuote && (\n                <div className=\"plan-summary\">\n                  <div className=\"plan-header\">\n                    <h4>{formData.selectedQuote.name}</h4>\n                    <div className=\"plan-price\">\n                      <span className=\"price-label\">Total Premium:</span>\n                      <span className=\"price-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"coverage-overview\">\n                    <h5 style={{\n                      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                      WebkitBackgroundClip: 'text',\n                      WebkitTextFillColor: 'transparent',\n                      fontSize: '1.5em',\n                      fontWeight: '700',\n                      marginBottom: '20px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '10px'\n                    }}>\n                      <span style={{ fontSize: '1.2em' }}>🛡️</span>\n                      Coverage Limits\n                    </h5>\n                    {formData.selectedQuote.SummaryCovers && formData.selectedQuote.SummaryCovers.length > 0 ? (\n                      <div style={{\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n                        gap: '15px',\n                        marginTop: '15px'\n                      }}>\n                        {formData.selectedQuote.SummaryCovers.map((cover, index) => {\n                          // Determine icon and color based on cover name\n                          const getIconAndColor = (name: string) => {\n                            const lowerName = name.toLowerCase();\n                            if (lowerName.includes('medical') || lowerName.includes('emergency')) \n                              return { icon: '🏥', color: '#e74c3c', bgColor: '#fdeaea' };\n                            if (lowerName.includes('baggage') || lowerName.includes('luggage')) \n                              return { icon: '🧳', color: '#3498db', bgColor: '#eaf2f8' };\n                            if (lowerName.includes('cancellation')) \n                              return { icon: '❌', color: '#e67e22', bgColor: '#fef5e7' };\n                            if (lowerName.includes('delay')) \n                              return { icon: '⏰', color: '#9b59b6', bgColor: '#f4ecf7' };\n                            if (lowerName.includes('personal') && lowerName.includes('liability')) \n                              return { icon: '⚖️', color: '#16a085', bgColor: '#e8f8f5' };\n                            if (lowerName.includes('accident')) \n                              return { icon: '🚑', color: '#c0392b', bgColor: '#fadbd8' };\n                            if (lowerName.includes('legal')) \n                              return { icon: '⚖️', color: '#2c3e50', bgColor: '#ecf0f1' };\n                            if (lowerName.includes('money') || lowerName.includes('cash')) \n                              return { icon: '💰', color: '#f39c12', bgColor: '#fef9e7' };\n                            if (lowerName.includes('passport') || lowerName.includes('document')) \n                              return { icon: '📄', color: '#7f8c8d', bgColor: '#f2f3f4' };\n                            if (lowerName.includes('rental') || lowerName.includes('vehicle')) \n                              return { icon: '🚗', color: '#34495e', bgColor: '#ebedef' };\n                            if (lowerName.includes('winter') || lowerName.includes('sport')) \n                              return { icon: '⛷️', color: '#3498db', bgColor: '#ebf5fb' };\n                            if (lowerName.includes('personal') && lowerName.includes('effect')) \n                              return { icon: '👜', color: '#8e44ad', bgColor: '#f5eef8' };\n                            return { icon: '📋', color: '#27ae60', bgColor: '#eafaf1' };\n                          };\n\n                          const { icon, color, bgColor } = getIconAndColor(cover.name);\n\n                          return (\n                            <div key={index} style={{\n                              background: `linear-gradient(135deg, ${bgColor} 0%, #ffffff 100%)`,\n                              border: `2px solid ${bgColor}`,\n                              borderRadius: '12px',\n                              padding: '18px',\n                              transition: 'all 0.3s ease',\n                              cursor: 'pointer',\n                              position: 'relative',\n                              overflow: 'hidden'\n                            }}\n                            onMouseEnter={(e) => {\n                              e.currentTarget.style.transform = 'translateY(-5px)';\n                              e.currentTarget.style.boxShadow = `0 8px 25px rgba(0,0,0,0.15)`;\n                              e.currentTarget.style.borderColor = color;\n                            }}\n                            onMouseLeave={(e) => {\n                              e.currentTarget.style.transform = 'translateY(0)';\n                              e.currentTarget.style.boxShadow = 'none';\n                              e.currentTarget.style.borderColor = bgColor;\n                            }}>\n                              {/* Decorative background element */}\n                              <div style={{\n                                position: 'absolute',\n                                top: '-20px',\n                                right: '-20px',\n                                width: '80px',\n                                height: '80px',\n                                background: color,\n                                opacity: '0.1',\n                                borderRadius: '50%'\n                              }}></div>\n                              \n                              <div style={{ display: 'flex', alignItems: 'flex-start', gap: '12px', position: 'relative', zIndex: 1 }}>\n                                <div style={{\n                                  fontSize: '2.5em',\n                                  background: color,\n                                  width: '60px',\n                                  height: '60px',\n                                  borderRadius: '12px',\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  flexShrink: 0,\n                                  boxShadow: `0 4px 15px ${color}40`\n                                }}>\n                                  {icon}\n                                </div>\n                                <div style={{ flex: 1, minWidth: 0 }}>\n                                  <div style={{\n                                    fontSize: '0.9em',\n                                    color: '#555',\n                                    fontWeight: '500',\n                                    marginBottom: '8px',\n                                    lineHeight: '1.3'\n                                  }}>\n                                    {cover.name}\n                                  </div>\n                                  <div style={{\n                                    fontSize: '1.3em',\n                                    fontWeight: '700',\n                                    color: color,\n                                    marginBottom: '4px'\n                                  }}>\n                                    {cover.Limit}\n                                  </div>\n                                  {cover.Excess && cover.Excess !== '€0' && cover.Excess !== 'Nil' && (\n                                    <div style={{\n                                      fontSize: '0.85em',\n                                      color: '#888',\n                                      background: '#f8f9fa',\n                                      padding: '4px 8px',\n                                      borderRadius: '6px',\n                                      display: 'inline-block',\n                                      marginTop: '4px'\n                                    }}>\n                                      <span style={{ fontWeight: '600' }}>Excess:</span> {cover.Excess}\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : (\n                      <div className=\"coverage-grid\">\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">🏥</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Medical Emergency</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.medical}</span>\n                          </div>\n                        </div>\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">🧳</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Baggage Protection</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.baggage}</span>\n                          </div>\n                        </div>\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">❌</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Trip Cancellation</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.cancellation}</span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Summary Totals */}\n          <div className=\"summary-card total-card\">\n            <div className=\"card-content\">\n              <div className=\"total-summary\">\n                <div className=\"total-row\">\n                  <span className=\"total-label\">Base Premium:</span>\n                  <span className=\"total-value\">€{formData.selectedQuote?.price}</span>\n                </div>\n                {formData.additionalPolicies.length > 0 && (\n                  <div className=\"total-row\">\n                    <span className=\"total-label\">Additional Policies:</span>\n                    <span className=\"total-value\">€{(() => {\n                      // Calculate addon amount as Total Amount - Base Premium\n                      const basePrice = typeof formData.selectedQuote?.price === 'number' \n                        ? formData.selectedQuote.price \n                        : parseFloat(formData.selectedQuote?.price || '0');\n                      const totalAmount = calculateTotalPrice();\n                      const addonAmount = totalAmount - basePrice;\n                      return addonAmount.toFixed(2);\n                    })()}</span>\n                  </div>\n                )}\n                <div className=\"total-row\">\n                  <span className=\"total-label\">Taxes & Fees:</span>\n                  <span className=\"total-value\">Included</span>\n                </div>\n                <div className=\"total-row final-total\">\n                  <span className=\"total-label\">Total Amount:</span>\n                  <span className=\"total-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderPhase5 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Confirmation</h2>\n      <p>Please confirm that all details are correct before proceeding to payment.</p>\n      \n      <div className=\"confirmation-box\">\n        <div className=\"confirmation-item\">\n          <strong>Trip:</strong> {formData.destination} ({formatDateToEuropean(formData.startDate)} to {formatDateToEuropean(formData.endDate)})\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Country of Residence:</strong> {formData.countryOfResidence}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Travelers:</strong> {formData.numberOfTravelers} person{formData.numberOfTravelers > 1 ? 's' : ''}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Plan:</strong> {formData.selectedQuote?.name}\n        </div>\n        <div className=\"confirmation-item total\">\n          <strong>Total Amount:</strong> €{calculateTotalPrice().toFixed(2)}\n        </div>\n      </div>\n    </div>\n  );\n\n  // Helper function to decode HTML entities and format question text\n  const decodeQuestionText = (text: string): string => {\n    if (!text) return '';\n    \n    // Create a temporary element to decode HTML entities\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = text;\n    let decoded = textarea.value;\n    \n    // Replace <BR> tags (after decoding &lt;BR&gt;) with actual line breaks\n    decoded = decoded.replace(/<BR>/gi, '\\n');\n    decoded = decoded.replace(/&lt;BR&gt;/gi, '\\n');\n    \n    return decoded;\n  };\n\n  const renderPhase6 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Screening Questions</h2>\n      <p>Please answer the following questions to complete your insurance application.</p>\n      \n      <div className=\"screening-questions\">\n        {screeningQuestions.length === 0 ? (\n          <div className=\"no-questions\">\n            <p>No screening questions required for this policy.</p>\n            <p style={{ fontSize: '14px', color: '#666', marginTop: '10px' }}>\n              The API returned an empty response or no questions are configured for this quote.\n            </p>\n          </div>\n        ) : (\n          screeningQuestions.map((question, index) => {\n            const decodedQuestion = decodeQuestionText(question.question);\n            \n            return (\n              <div key={question.questionNumber} className=\"screening-question\">\n                <h3>Question {question.questionNumber}</h3>\n                <div className=\"question-text\" style={{ \n                  whiteSpace: 'pre-wrap',\n                  lineHeight: '1.6',\n                  padding: '15px',\n                  background: '#f9f9f9',\n                  borderRadius: '8px',\n                  border: '1px solid #e0e0e0'\n                }}>\n                  {decodedQuestion}\n                </div>\n                \n                <div className=\"question-options\" style={{ marginTop: '20px' }}>\n                  <label className=\"radio-option\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${question.questionNumber}`}\n                      value=\"yes\"\n                      checked={screeningAnswers[question.questionNumber] === 'yes'}\n                      onChange={(e) => setScreeningAnswers(prev => ({\n                        ...prev,\n                        [question.questionNumber]: 'yes'\n                      }))}\n                    />\n                    <span>Yes</span>\n                  </label>\n                  <label className=\"radio-option\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${question.questionNumber}`}\n                      value=\"no\"\n                      checked={screeningAnswers[question.questionNumber] === 'no'}\n                      onChange={(e) => setScreeningAnswers(prev => ({\n                        ...prev,\n                        [question.questionNumber]: 'no'\n                      }))}\n                    />\n                    <span>No</span>\n                  </label>\n                </div>\n                \n                {/* Show messages based on answer */}\n                {screeningAnswers[question.questionNumber] && (\n                  <div className={`answer-message ${screeningAnswers[question.questionNumber]}`}>\n                    <p style={{ whiteSpace: 'pre-wrap' }}>\n                      {screeningAnswers[question.questionNumber] === 'yes' \n                        ? decodeQuestionText(question.yesMessage)\n                        : decodeQuestionText(question.noMessage)}\n                    </p>\n                    {/* Show action text if available */}\n                    {question.yesAction && screeningAnswers[question.questionNumber] === 'yes' && question.yesActionText && (\n                      <p style={{ fontSize: '13px', marginTop: '5px', fontStyle: 'italic' }}>\n                        Action: {question.yesActionText}\n                      </p>\n                    )}\n                    {question.noAction && screeningAnswers[question.questionNumber] === 'no' && question.noActionText && (\n                      <p style={{ fontSize: '13px', marginTop: '5px', fontStyle: 'italic' }}>\n                        Action: {question.noActionText}\n                      </p>\n                    )}\n                  </div>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase7 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Payment Details</h2>\n      <p>Enter your payment information to complete your purchase.</p>\n      \n      {/* Traveler Information and Billing Address - Grouped Background */}\n      <div className=\"payment-traveler-billing-group\">\n        {/* Traveler Information Section */}\n        <div className=\"form-section\">\n          <h3>Traveler Information</h3>\n          {formData.travelers.map((traveler, index) => (\n            <div key={index} className=\"traveler-info\">\n              <h4>Traveler {index + 1}</h4>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`title-${index}`}>Title</label>\n                <select\n                  id={`title-${index}`}\n                  value={traveler.title || 'Mr'}\n                  onChange={(e) => handleTravelerChange(index, 'title', e.target.value)}\n                  title=\"Select the traveler's title\"\n                >\n                  <option value=\"Mr\">Mr</option>\n                  <option value=\"Mrs\">Mrs</option>\n                  <option value=\"Miss\">Miss</option>\n                  <option value=\"Ms\">Ms</option>\n                  <option value=\"Dr\">Dr</option>\n                  <option value=\"Prof\">Prof</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`firstName-${index}`}>First Name</label>\n                <input\n                  type=\"text\"\n                  id={`firstName-${index}`}\n                  value={traveler.firstName}\n                  onChange={(e) => handleTravelerChange(index, 'firstName', e.target.value)}\n                  placeholder=\"Enter first name\"\n                  title=\"Enter the traveler's first name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`lastName-${index}`}>Last Name</label>\n                <input\n                  type=\"text\"\n                  id={`lastName-${index}`}\n                  value={traveler.lastName}\n                  onChange={(e) => handleTravelerChange(index, 'lastName', e.target.value)}\n                  placeholder=\"Enter last name\"\n                  title=\"Enter the traveler's last name\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`dateOfBirth-${index}`}>Date of Birth</label>\n                <input\n                  type=\"date\"\n                  id={`dateOfBirth-${index}`}\n                  value={traveler.dateOfBirth || ''}\n                  onChange={(e) => {\n                    const dateOfBirth = e.target.value;\n                    // Auto-calculate age from date of birth\n                    if (dateOfBirth) {\n                      const age = calculateAgeFromDateOfBirth(dateOfBirth);\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                      handleTravelerChange(index, 'age', age.toString());\n                    } else {\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                    }\n                  }}\n                  title=\"Enter the traveler's date of birth (age will be calculated automatically)\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`age-${index}`}>Age (Auto-calculated)</label>\n                <input\n                  type=\"number\"\n                  id={`age-${index}`}\n                  value={traveler.age}\n                  onChange={(e) => handleTravelerChange(index, 'age', e.target.value)}\n                  placeholder=\"Enter age\"\n                  title=\"Age will be calculated from date of birth, but you can override it manually\"\n                  min=\"1\"\n                  max=\"120\"\n                  required\n                  readOnly={!!traveler.dateOfBirth}\n                  style={{ backgroundColor: traveler.dateOfBirth ? '#f5f5f5' : 'white' }}\n                />\n                {traveler.dateOfBirth && (\n                  <small style={{ color: '#666', fontSize: '0.8em' }}>\n                    Age calculated from date of birth\n                  </small>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`email-${index}`}>Email</label>\n                <input\n                  type=\"email\"\n                  id={`email-${index}`}\n                  value={traveler.email}\n                  onChange={(e) => handleTravelerChange(index, 'email', e.target.value)}\n                  placeholder=\"Enter email address\"\n                  title=\"Enter the traveler's email address\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`phone-${index}`}>Phone</label>\n                <input\n                  type=\"tel\"\n                  id={`phone-${index}`}\n                  value={traveler.phone}\n                  onChange={(e) => handleTravelerChange(index, 'phone', e.target.value)}\n                  placeholder=\"+30 123 456 7890\"\n                  title=\"Enter the traveler's phone number\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor={`vaxId-${index}`}>VAT ID</label>\n              <input\n                type=\"text\"\n                id={`vaxId-${index}`}\n                value={traveler.vaxId}\n                onChange={(e) => handleTravelerChange(index, 'vaxId', e.target.value)}\n                placeholder=\"Enter VAX ID\"\n                title=\"Enter the traveler's VAX ID (optional)\"\n              />\n            </div>\n            \n            {/* Billing Address - Only for first traveler */}\n            {index === 0 && (\n              <>\n                <hr style={{ margin: '20px 0', border: 'none', borderTop: '1px solid #e0e0e0' }} />\n                <h4>Billing Address</h4>\n                <div className=\"form-group\">\n                  <label htmlFor=\"street\">Street Address</label>\n                  <input\n                    type=\"text\"\n                    id=\"street\"\n                    value={formData.billingAddress.street}\n                    onChange={(e) => handleBillingAddressChange('street', e.target.value)}\n                    placeholder=\"Enter street address\"\n                    title=\"Enter your billing street address\"\n                    required\n                  />\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"city\">City</label>\n                    <input\n                      type=\"text\"\n                      id=\"city\"\n                      value={formData.billingAddress.city}\n                      onChange={(e) => handleBillingAddressChange('city', e.target.value)}\n                      placeholder=\"Enter city\"\n                      title=\"Enter your billing city\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"postalCode\">Postal Code</label>\n                    <input\n                      type=\"text\"\n                      id=\"postalCode\"\n                      value={formData.billingAddress.postalCode}\n                      onChange={(e) => handleBillingAddressChange('postalCode', e.target.value)}\n                      placeholder=\"Enter postal code\"\n                      title=\"Enter your billing postal code\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"country\">Country</label>\n                  <input\n                    type=\"text\"\n                    id=\"country\"\n                    value={formData.billingAddress.country}\n                    onChange={(e) => handleBillingAddressChange('country', e.target.value)}\n                    placeholder=\"Enter country\"\n                    title=\"Enter your billing country\"\n                    required\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        ))}\n        </div>\n      </div>\n      \n      {/* Payment Method - Separate Background */}\n      <div className=\"payment-method-group\">\n        <div className=\"payment-section\">\n        <div className=\"payment-methods\">\n          <h3>Payment Method</h3>\n          <div className=\"payment-method-info\">\n            <p>We accept all major credit and debit cards for secure payment processing.</p>\n          </div>\n        </div>\n\n        <div className=\"card-details\">\n          <h3>Card Details</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"cardNumber\">Card Number</label>\n            <input\n              type=\"text\"\n              id=\"cardNumber\"\n              value={formData.cardNumber}\n              onChange={(e) => handleInputChange('cardNumber', e.target.value)}\n              placeholder=\"1234 5678 9012 3456\"\n              title=\"Enter your 16-digit card number\"\n              required\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"expiryDate\">Expiry Date</label>\n              <input\n                type=\"text\"\n                id=\"expiryDate\"\n                value={formData.expiryDate}\n                onChange={(e) => handleInputChange('expiryDate', e.target.value)}\n                placeholder=\"MM/YY\"\n                title=\"Enter card expiry date in MM/YY format\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"cvv\">CVV</label>\n              <input\n                type=\"text\"\n                id=\"cvv\"\n                value={formData.cvv}\n                onChange={(e) => handleInputChange('cvv', e.target.value)}\n                placeholder=\"123\"\n                title=\"Enter the 3-digit CVV code from the back of your card\"\n                required\n              />\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      \n      <div className=\"payment-summary\">\n        <div className=\"summary-item\">\n          <strong>Total Amount: €{calculateTotalPrice().toFixed(2)}</strong>\n        </div>\n      </div>\n      \n      <div className=\"terms-section\">\n        <label className=\"checkbox-option\">\n          <input \n            type=\"checkbox\" \n            required \n            checked={termsAccepted}\n            onChange={(e) => handleTermsAcceptance(e.target.checked)}\n          />\n          <span>I have read and accept the <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); setShowPrivacyPolicy(true); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            Privacy Policy\n          </button>, <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); setShowTermsAndConditions(true); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            Terms and Conditions\n          </button> and <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); fetchGeneralConditions(); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            General conditions\n          </button>.</span>\n        </label>\n        <label className=\"checkbox-option\">\n          <input \n            type=\"checkbox\" \n            required\n            checked={marketingEmailsAccepted}\n            onChange={(e) => setMarketingEmailsAccepted(e.target.checked)}\n          />\n          <span>I would like to receive marketing emails about travel insurance offers</span>\n        </label>\n      </div>\n    </div>\n  );\n\n  const renderPhase8 = () => (\n    <div className=\"wizard-phase\">\n      <h2>🎉 Congratulations!</h2>\n      <p>Your travel insurance has been successfully purchased.</p>\n      \n      <div className=\"success-message\">\n        <div className=\"policy-number\">\n          <strong>Policy Number:</strong> {policyNumber ? policyNumber : 'Processing...'}\n        </div>\n        {policyNumber && (\n          <div className=\"policy-details\" style={{ marginTop: '10px', fontSize: '14px', color: '#666' }}>\n            Policy ID received from Terracotta SavePolicyDetails\n          </div>\n        )}\n        <div className=\"confirmation-email\">\n          A confirmation email has been sent to {formData.travelers[0]?.email}\n        </div>\n      </div>\n      \n      <div className=\"documents-section\">\n        <h3>Your Documents</h3>\n        <p style={{ fontSize: '14px', color: '#666', marginBottom: '15px' }}>\n          Click on any document to open it in a new tab\n        </p>\n        <div className=\"document-links\">\n          {/* Summary of Cover from SavePolicyDetails */}\n          {policyDocuments.summaryOfCover ? (\n            <a \n              href={policyDocuments.summaryOfCover} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Summary of Cover in new tab\"\n              title=\"View Summary of Cover from Terracotta\"\n            >\n              📄 Summary of Cover\n            </a>\n          ) : formData.selectedQuote?.SI ? (\n            <a \n              href={formData.selectedQuote.SI} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Summary of Cover in new tab\"\n              title=\"View Summary of Cover (from quote)\"\n            >\n              📄 Summary of Cover (from quote)\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              📄 Summary of Cover (Not Available)\n            </div>\n          )}\n\n          {/* Policy Wording from SavePolicyDetails */}\n          {policyDocuments.policyWording ? (\n            <a \n              href={policyDocuments.policyWording} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Policy Wording in new tab\"\n              title=\"View Policy Wording from Terracotta\"\n            >\n              📋 Policy Wording\n            </a>\n          ) : formData.selectedQuote?.PW ? (\n            <a \n              href={formData.selectedQuote.PW} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Policy Wording in new tab\"\n              title=\"View Policy Wording (from quote)\"\n            >\n              📋 Policy Wording (from quote)\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              📋 Policy Wording (Not Available)\n            </div>\n          )}\n\n          {/* Certificate from SavePolicyDetails */}\n          {policyDocuments.certificate ? (\n            <a \n              href={policyDocuments.certificate} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Certificate in new tab\"\n              title=\"View Certificate from Terracotta\"\n            >\n              🆔 Certificate\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              🆔 Certificate (Pending - may be emailed separately)\n            </div>\n          )}\n\n          {/* Key Facts from SavePolicyDetails */}\n          {policyDocuments.keyFacts && (\n            <a \n              href={policyDocuments.keyFacts} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Key Facts in new tab\"\n              title=\"View Key Facts from Terracotta\"\n            >\n              📋 Key Facts\n            </a>\n          )}\n\n          {/* IPID from SavePolicyDetails */}\n          {policyDocuments.ipid && (\n            <a \n              href={policyDocuments.ipid} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open IPID in new tab\"\n              title=\"View Insurance Product Information Document\"\n            >\n              📄 IPID\n            </a>\n          )}\n\n          {/* Generated Policy PDF */}\n          <button \n            onClick={downloadPolicyPDF} \n            className=\"document-link download-btn\"\n            aria-label=\"Download your policy summary as a PDF document\"\n            title=\"Download a PDF copy of your travel insurance policy summary\"\n            type=\"button\"\n          >\n            📄 Download Your Policy Summary (PDF)\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"next-steps\">\n        <h3>What's Next?</h3>\n        <ul>\n          <li>Save your policy documents in a safe place</li>\n          <li>Keep the emergency contact numbers with you while traveling</li>\n          <li>Download our mobile app for easy access to your policy</li>\n          <li>Contact us anytime at +30 6974907500 for assistance</li>\n        </ul>\n      </div>\n    </div>\n  );\n\n  const renderPhaseContent = () => {\n    switch (currentPhase) {\n      case 1:\n        return renderPhase1(); // Trip Details\n      case 2:\n        return renderPhase2(); // Quotes\n      case 3:\n        return renderPhase3(); // Add-ons\n      case 4:\n        return renderPhase4(); // Review\n      case 5:\n        return renderPhase7(); // Payment\n      case 6:\n        return renderPhase8(); // Documents\n      default:\n        return renderPhase1();\n    }\n  };\n\n  return (\n    <div className=\"quote-page\">\n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n      <div className=\"container\">\n        <div className=\"wizard-header\">\n          <h1>Travel Insurance Quote Wizard</h1>\n            <div className=\"wizard-progress\">\n              {[1, 2, 3, 4, 5, 6].map(phase => (\n                <div key={phase} className={`progress-step ${currentPhase >= phase ? 'active' : ''} ${currentPhase === phase ? 'current' : ''}`}>\n                  <div className=\"step-number\">{phase}</div>\n                  <div className=\"step-label\">\n                    {phase === 1 && 'Details'}\n                    {phase === 2 && 'Quotes'}\n                    {phase === 3 && 'Add-ons'}\n                    {phase === 4 && 'Review'}\n                    {phase === 5 && 'Payment'}\n                    {phase === 6 && 'Documents'}\n                  </div>\n                </div>\n              ))}\n            </div>\n        </div>\n\n        <div className=\"wizard-content\">\n          {renderPhaseContent()}\n        </div>\n\n        <div className=\"wizard-navigation\">\n          {currentPhase > 1 && currentPhase < 6 && (\n            <button \n              className=\"btn btn-secondary\" \n              onClick={prevPhase}\n              aria-label=\"Go to previous step\"\n              title=\"Go back to the previous step\"\n              type=\"button\"\n            >\n              Previous\n            </button>\n          )}\n          \n          {currentPhase < 5 && (\n            <button \n              className=\"btn btn-primary\" \n              onClick={nextPhase}\n              disabled={!isPhaseValid(currentPhase)}\n              aria-label={currentPhase === 4 ? 'Proceed to payment step' : 'Go to next step'}\n              title={currentPhase === 4 ? 'Continue to payment details' : 'Continue to next step'}\n              type=\"button\"\n            >\n              {currentPhase === 4 ? 'Proceed to Payment' : 'Next'}\n            </button>\n          )}\n          \n          {currentPhase === 5 && (\n            <>\n              <button \n                className=\"btn btn-primary\" \n                onClick={processPayment}\n                disabled={!isPhaseValid(currentPhase) || isProcessing}\n                aria-label={isProcessing ? 'Processing payment, please wait' : `Pay €${calculateTotalPrice().toFixed(2)} for your travel insurance`}\n                title={isProcessing ? 'Payment is being processed, please wait' : `Complete payment of €${calculateTotalPrice().toFixed(2)}`}\n                type=\"button\"\n                style={{\n                  opacity: (!isPhaseValid(currentPhase) || isProcessing) ? 0.5 : 1,\n                  cursor: (!isPhaseValid(currentPhase) || isProcessing) ? 'not-allowed' : 'pointer'\n                }}\n              >\n                {isProcessing ? 'Processing Payment...' : `Pay €${calculateTotalPrice().toFixed(2)}`}\n              </button>\n              \n            </>\n          )}\n          \n          {currentPhase === 6 && (\n            <button \n              className=\"btn btn-primary\" \n              onClick={() => window.location.href = '/'}\n              aria-label=\"Return to homepage\"\n              title=\"Go back to the main homepage\"\n              type=\"button\"\n            >\n              Return to Homepage\n            </button>\n          )}\n        </div>\n      </div>\n      \n      {/* Help Popup for Destination Categories */}\n      {showHelpPopup && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowHelpPopup(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Destination Categories & Countries</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowHelpPopup(false)}\n                aria-label=\"Close help popup\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              {isLoadingCountries ? (\n                <div className=\"loading-message\">Loading countries...</div>\n              ) : (\n                <div className=\"categories-container\">\n                  {Object.entries(countriesByCategory).map(([category, countries]) => (\n                    <div key={category} className=\"category-section\">\n                      <h4 className=\"category-title\">{category}</h4>\n                      <div className=\"countries-grid\">\n                        {countries.map((country) => (\n                          <span key={country} className=\"country-item\">\n                            {country}\n                          </span>\n                        ))}\n                      </div>\n                      <div className=\"category-count\">\n                        {countries.length} countries\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Privacy Policy Popup */}\n      {showPrivacyPolicy && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowPrivacyPolicy(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Privacy Policy</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowPrivacyPolicy(false)}\n                aria-label=\"Close privacy policy\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Sample Privacy Policy</h4>\n                <p>This is a sample Privacy Policy. The actual content will be added later.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>1. Information We Collect</h5>\n                <p>We collect information that you provide directly to us, including personal information such as your name, email address, date of birth, and travel details.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>2. How We Use Your Information</h5>\n                <p>We use the information we collect to provide, maintain, and improve our services, including processing your insurance quotes and policies.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>3. Data Security</h5>\n                <p>We implement appropriate technical and organizational measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>4. Your Rights</h5>\n                <p>You have the right to access, correct, or delete your personal information. You may also object to or restrict certain processing of your data.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>5. Contact Us</h5>\n                <p>If you have any questions about this Privacy Policy, please contact us at privacy@example.com</p>\n                \n                <p style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\n                  Last updated: {new Date().toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Terms and Conditions Popup */}\n      {showTermsAndConditions && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowTermsAndConditions(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Terms and Conditions</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowTermsAndConditions(false)}\n                aria-label=\"Close terms and conditions\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Sample Terms and Conditions</h4>\n                <p>This is a sample Terms and Conditions document. The actual content will be added later.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>1. Acceptance of Terms</h5>\n                <p>By purchasing travel insurance from us, you agree to be bound by these Terms and Conditions. Please read them carefully before proceeding with your purchase.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>2. Insurance Coverage</h5>\n                <p>The insurance coverage is subject to the terms, conditions, and exclusions set forth in the policy documents. Coverage begins on the start date specified in your policy.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>3. Premium Payment</h5>\n                <p>The insurance premium must be paid in full before coverage begins. All payments are processed securely through our payment gateway.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>4. Claims Process</h5>\n                <p>In the event of a claim, you must notify us as soon as reasonably possible and provide all required documentation to support your claim.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>5. Cancellation Policy</h5>\n                <p>You may cancel your policy within the cooling-off period specified in your policy documents for a full refund, provided no claims have been made.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>6. Governing Law</h5>\n                <p>These Terms and Conditions are governed by and construed in accordance with applicable insurance regulations.</p>\n                \n                <p style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\n                  Last updated: {new Date().toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* General Conditions Popup - Shows Screening Questions Response */}\n      {showGeneralConditions && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowGeneralConditions(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>General Conditions</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowGeneralConditions(false)}\n                aria-label=\"Close general conditions\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Screening Questions & General Conditions</h4>\n                <p style={{ marginBottom: '20px', color: '#666' }}>\n                  These are the general conditions and screening questions for your selected policy.\n                </p>\n                \n                {generalConditionsData.length === 0 ? (\n                  <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                    <p>No general conditions available for this policy.</p>\n                  </div>\n                ) : (\n                  <div className=\"screening-questions\">\n                    {generalConditionsData.map((question, index) => {\n                      const decodedQuestion = decodeQuestionText(question.question);\n                      const decodedNoMessage = question.noMessage ? decodeQuestionText(question.noMessage) : '';\n                      \n                      // Filter out specific unwanted text from the No message\n                      const filteredNoMessage = decodedNoMessage.replace(\n                        /Yes\\/No \\(If No cannot proceed with purchase\\)\\.\\s*If No:\\s*You must confirm that you have read and accepted the following to purchase this insurance by selecting Yes\\.\\s*If you are unable to agree with any of the following statements, then you are unable to continue with the purchase of this insurance\\.\\s*/gi,\n                        ''\n                      ).trim();\n                      \n                      return (\n                        <div key={question.questionNumber} style={{ \n                          marginBottom: '25px',\n                          padding: '15px',\n                          background: '#f9f9f9',\n                          borderRadius: '8px',\n                          border: '1px solid #e0e0e0'\n                        }}>\n                          <div style={{ \n                            whiteSpace: 'pre-wrap',\n                            lineHeight: '1.6',\n                            marginBottom: '10px'\n                          }}>\n                            {decodedQuestion}\n                          </div>\n                          \n                          {question.yesMessage && (\n                            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n                              <strong style={{ color: '#d9534f' }}>If Yes:</strong>\n                              <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px', color: '#555' }}>\n                                {decodeQuestionText(question.yesMessage)}\n                              </p>\n                            </div>\n                          )}\n                          \n                          {filteredNoMessage && (\n                            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n                              <strong style={{ color: '#5cb85c' }}>If No:</strong>\n                              <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px', color: '#555' }}>\n                                {filteredNoMessage}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quote2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}