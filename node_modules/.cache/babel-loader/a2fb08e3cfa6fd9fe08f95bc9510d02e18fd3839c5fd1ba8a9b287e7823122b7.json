{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop-123\\\\TravelInsurance_Demo_2\\\\src\\\\pages\\\\DatabaseViewer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './DatabaseViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatabaseViewer = () => {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [tableData, setTableData] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Mock database schema and data\n  const mockSchema = {\n    quotes: {\n      name: 'quotes',\n      columns: ['id', 'destination', 'start_date', 'end_date', 'trip_type', 'number_of_travelers', 'total_amount', 'status', 'policy_number', 'created_at'],\n      primaryKey: 'id',\n      rowCount: 5\n    },\n    travelers: {\n      name: 'travelers',\n      columns: ['id', 'quote_id', 'first_name', 'last_name', 'age', 'email', 'phone', 'nationality', 'created_at'],\n      primaryKey: 'id',\n      foreignKeys: ['quote_id -> quotes.id'],\n      rowCount: 8\n    },\n    contact_messages: {\n      name: 'contact_messages',\n      columns: ['id', 'name', 'email', 'subject', 'message', 'status', 'created_at'],\n      primaryKey: 'id',\n      rowCount: 3\n    },\n    payments: {\n      name: 'payments',\n      columns: ['id', 'quote_id', 'payment_method', 'amount', 'status', 'policy_number', 'created_at'],\n      primaryKey: 'id',\n      foreignKeys: ['quote_id -> quotes.id'],\n      rowCount: 2\n    },\n    additional_policies: {\n      name: 'additional_policies',\n      columns: ['id', 'quote_id', 'policy_id', 'name', 'description', 'price', 'created_at'],\n      primaryKey: 'id',\n      foreignKeys: ['quote_id -> quotes.id'],\n      rowCount: 4\n    },\n    policy_documents: {\n      name: 'policy_documents',\n      columns: ['id', 'quote_id', 'document_type', 'file_name', 'file_size', 'generated_at'],\n      primaryKey: 'id',\n      foreignKeys: ['quote_id -> quotes.id'],\n      rowCount: 2\n    },\n    audit_log: {\n      name: 'audit_log',\n      columns: ['id', 'table_name', 'record_id', 'action', 'old_values', 'new_values', 'created_at'],\n      primaryKey: 'id',\n      rowCount: 12\n    }\n  };\n  const mockData = {\n    quotes: [{\n      id: 1,\n      destination: \"Spain\",\n      start_date: \"2025-08-01\",\n      end_date: \"2025-08-10\",\n      trip_type: \"single\",\n      number_of_travelers: 2,\n      total_amount: 89.50,\n      status: \"pending\",\n      policy_number: null,\n      created_at: \"2025-07-15T10:30:00Z\"\n    }, {\n      id: 2,\n      destination: \"Thailand\",\n      start_date: \"2025-09-15\",\n      end_date: \"2025-09-30\",\n      trip_type: \"comprehensive\",\n      number_of_travelers: 1,\n      total_amount: 156.75,\n      status: \"paid\",\n      policy_number: \"POL-2025-001\",\n      created_at: \"2025-07-15T14:20:00Z\"\n    }, {\n      id: 3,\n      destination: \"Italy\",\n      start_date: \"2025-10-05\",\n      end_date: \"2025-10-12\",\n      trip_type: \"annual\",\n      number_of_travelers: 4,\n      total_amount: 299.99,\n      status: \"paid\",\n      policy_number: \"POL-2025-002\",\n      created_at: \"2025-07-15T16:45:00Z\"\n    }],\n    travelers: [{\n      id: 1,\n      quote_id: 1,\n      first_name: \"John\",\n      last_name: \"Doe\",\n      age: 35,\n      email: \"john.doe@email.com\",\n      phone: \"+1234567890\",\n      nationality: \"Irish\",\n      created_at: \"2025-07-15T10:30:00Z\"\n    }, {\n      id: 2,\n      quote_id: 1,\n      first_name: \"Jane\",\n      last_name: \"Doe\",\n      age: 32,\n      email: \"jane.doe@email.com\",\n      phone: \"+1234567890\",\n      nationality: \"Irish\",\n      created_at: \"2025-07-15T10:30:00Z\"\n    }, {\n      id: 3,\n      quote_id: 2,\n      first_name: \"Alice\",\n      last_name: \"Smith\",\n      age: 28,\n      email: \"alice.smith@email.com\",\n      phone: \"+0987654321\",\n      nationality: \"German\",\n      created_at: \"2025-07-15T14:20:00Z\"\n    }, {\n      id: 4,\n      quote_id: 3,\n      first_name: \"Bob\",\n      last_name: \"Johnson\",\n      age: 45,\n      email: \"bob.j@email.com\",\n      phone: \"+1122334455\",\n      nationality: \"French\",\n      created_at: \"2025-07-15T16:45:00Z\"\n    }],\n    contact_messages: [{\n      id: 1,\n      name: \"Mike Johnson\",\n      email: \"mike.j@email.com\",\n      subject: \"Question about coverage\",\n      message: \"I need more information about winter sports coverage\",\n      status: \"new\",\n      created_at: \"2025-07-15T09:15:00Z\"\n    }, {\n      id: 2,\n      name: \"Sarah Wilson\",\n      email: \"sarah.w@email.com\",\n      subject: \"Claim assistance\",\n      message: \"I need help filing a claim for my recent trip\",\n      status: \"in_progress\",\n      created_at: \"2025-07-14T16:45:00Z\"\n    }, {\n      id: 3,\n      name: \"David Brown\",\n      email: \"david.b@email.com\",\n      subject: \"Policy question\",\n      message: \"Can I extend my current policy?\",\n      status: \"resolved\",\n      created_at: \"2025-07-13T11:20:00Z\"\n    }],\n    payments: [{\n      id: 1,\n      quote_id: 2,\n      payment_method: \"card\",\n      amount: 156.75,\n      status: \"completed\",\n      policy_number: \"POL-2025-001\",\n      created_at: \"2025-07-15T14:25:00Z\"\n    }, {\n      id: 2,\n      quote_id: 3,\n      payment_method: \"paypal\",\n      amount: 299.99,\n      status: \"completed\",\n      policy_number: \"POL-2025-002\",\n      created_at: \"2025-07-15T16:50:00Z\"\n    }],\n    additional_policies: [{\n      id: 1,\n      quote_id: 2,\n      policy_id: \"WINTER_SPORTS\",\n      name: \"Winter Sports Coverage\",\n      description: \"Extended coverage for skiing and snowboarding\",\n      price: 25.00,\n      created_at: \"2025-07-15T14:20:00Z\"\n    }, {\n      id: 2,\n      quote_id: 3,\n      policy_id: \"FAMILY_DISCOUNT\",\n      name: \"Family Discount\",\n      description: \"Discount for families with children\",\n      price: -50.00,\n      created_at: \"2025-07-15T16:45:00Z\"\n    }],\n    policy_documents: [{\n      id: 1,\n      quote_id: 2,\n      document_type: \"policy\",\n      file_name: \"policy_POL-2025-001.pdf\",\n      file_size: 245760,\n      generated_at: \"2025-07-15T14:30:00Z\"\n    }, {\n      id: 2,\n      quote_id: 3,\n      document_type: \"certificate\",\n      file_name: \"certificate_POL-2025-002.pdf\",\n      file_size: 198432,\n      generated_at: \"2025-07-15T16:55:00Z\"\n    }],\n    audit_log: [{\n      id: 1,\n      table_name: \"quotes\",\n      record_id: 2,\n      action: \"INSERT\",\n      old_values: null,\n      new_values: '{\"destination\": \"Thailand\", \"status\": \"pending\"}',\n      created_at: \"2025-07-15T14:20:00Z\"\n    }, {\n      id: 2,\n      table_name: \"payments\",\n      record_id: 1,\n      action: \"INSERT\",\n      old_values: null,\n      new_values: '{\"amount\": 156.75, \"status\": \"completed\"}',\n      created_at: \"2025-07-15T14:25:00Z\"\n    }, {\n      id: 3,\n      table_name: \"quotes\",\n      record_id: 2,\n      action: \"UPDATE\",\n      old_values: '{\"status\": \"pending\"}',\n      new_values: '{\"status\": \"paid\"}',\n      created_at: \"2025-07-15T14:26:00Z\"\n    }]\n  };\n  useEffect(() => {\n    // Simulate loading\n    setTimeout(() => {\n      const tablesList = Object.values(mockSchema);\n      setTables(tablesList);\n      const totalRecords = Object.values(mockData).reduce((sum, table) => sum + table.length, 0);\n      setStats({\n        totalTables: tablesList.length,\n        totalRecords,\n        tableStats: tablesList.map(table => {\n          var _mockData$table$name;\n          return {\n            name: table.name,\n            count: ((_mockData$table$name = mockData[table.name]) === null || _mockData$table$name === void 0 ? void 0 : _mockData$table$name.length) || 0\n          };\n        })\n      });\n      setLoading(false);\n    }, 1000);\n  }, []);\n  const handleTableSelect = tableName => {\n    setSelectedTable(tableName);\n    setTableData(mockData[tableName] || []);\n  };\n  const formatValue = value => {\n    if (value === null || value === undefined) return 'NULL';\n    if (typeof value === 'object') return JSON.stringify(value);\n    if (typeof value === 'string' && value.includes('T') && value.includes('Z')) {\n      return new Date(value).toLocaleString();\n    }\n    return String(value);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-viewer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDD04 Loading Database Schema...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Initializing database connection and loading table information...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"database-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"db-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDDC4\\uFE0F Travel Insurance Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Database schema overview and sample data preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"db-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-number\",\n          children: stats.totalTables\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Tables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-number\",\n          children: stats.totalRecords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Sample Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), stats.tableStats.map(stat => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-number\",\n          children: stat.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: stat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, stat.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"db-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tables-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Database Tables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tables-list\",\n          children: tables.map(table => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `table-item ${selectedTable === table.name ? 'active' : ''}`,\n            onClick: () => handleTableSelect(table.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-name\",\n              children: table.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [table.columns.length, \" columns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [table.rowCount, \" rows\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, table.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-viewer\",\n        children: selectedTable ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"\\uD83D\\uDCCB Table: \", selectedTable]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"schema-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Schema Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"schema-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Primary Key:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 22\n                }, this), \" \", mockSchema[selectedTable].primaryKey]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), mockSchema[selectedTable].foreignKeys && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Foreign Keys:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 24\n                }, this), \" \", mockSchema[selectedTable].foreignKeys.join(', ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"columns-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Columns:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"columns\",\n                  children: mockSchema[selectedTable].columns.map(column => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `column ${column === mockSchema[selectedTable].primaryKey ? 'primary-key' : ''}`,\n                    children: column\n                  }, column, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Sample Data (\", tableData.length, \" records)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), tableData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-table-container\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"data-table\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: Object.keys(tableData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: key\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: tableData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: Object.values(row).map((value, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatValue(value)\n                    }, cellIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 31\n                    }, this))\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-data\",\n              children: \"No sample data available for this table.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDC48 Select a table to view its structure and data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click on any table from the sidebar to see its schema information and sample data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(DatabaseViewer, \"1xTpQ0Xl0bzkkLi3BEj+vuY4aWA=\");\n_c = DatabaseViewer;\nexport default DatabaseViewer;\nvar _c;\n$RefreshReg$(_c, \"DatabaseViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DatabaseViewer","_s","tables","setTables","selectedTable","setSelectedTable","tableData","setTableData","stats","setStats","loading","setLoading","mockSchema","quotes","name","columns","primaryKey","rowCount","travelers","foreignKeys","contact_messages","payments","additional_policies","policy_documents","audit_log","mockData","id","destination","start_date","end_date","trip_type","number_of_travelers","total_amount","status","policy_number","created_at","quote_id","first_name","last_name","age","email","phone","nationality","subject","message","payment_method","amount","policy_id","description","price","document_type","file_name","file_size","generated_at","table_name","record_id","action","old_values","new_values","setTimeout","tablesList","Object","values","totalRecords","reduce","sum","table","length","totalTables","tableStats","map","_mockData$table$name","count","handleTableSelect","tableName","formatValue","value","undefined","JSON","stringify","includes","Date","toLocaleString","String","className","children","fileName","_jsxFileName","lineNumber","columnNumber","stat","onClick","join","column","keys","key","row","index","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/laptop-123/TravelInsurance_Demo_2/src/pages/DatabaseViewer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './DatabaseViewer.css';\r\n\r\ninterface TableSchema {\r\n  name: string;\r\n  columns: string[];\r\n  primaryKey: string;\r\n  foreignKeys?: string[];\r\n  rowCount: number;\r\n}\r\n\r\ninterface DatabaseStats {\r\n  totalTables: number;\r\n  totalRecords: number;\r\n  tableStats: { name: string; count: number }[];\r\n}\r\n\r\nconst DatabaseViewer: React.FC = () => {\r\n  const [tables, setTables] = useState<TableSchema[]>([]);\r\n  const [selectedTable, setSelectedTable] = useState<string | null>(null);\r\n  const [tableData, setTableData] = useState<any[]>([]);\r\n  const [stats, setStats] = useState<DatabaseStats | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Mock database schema and data\r\n  const mockSchema: Record<string, TableSchema> = {\r\n    quotes: {\r\n      name: 'quotes',\r\n      columns: ['id', 'destination', 'start_date', 'end_date', 'trip_type', 'number_of_travelers', 'total_amount', 'status', 'policy_number', 'created_at'],\r\n      primaryKey: 'id',\r\n      rowCount: 5\r\n    },\r\n    travelers: {\r\n      name: 'travelers',\r\n      columns: ['id', 'quote_id', 'first_name', 'last_name', 'age', 'email', 'phone', 'nationality', 'created_at'],\r\n      primaryKey: 'id',\r\n      foreignKeys: ['quote_id -> quotes.id'],\r\n      rowCount: 8\r\n    },\r\n    contact_messages: {\r\n      name: 'contact_messages',\r\n      columns: ['id', 'name', 'email', 'subject', 'message', 'status', 'created_at'],\r\n      primaryKey: 'id',\r\n      rowCount: 3\r\n    },\r\n    payments: {\r\n      name: 'payments',\r\n      columns: ['id', 'quote_id', 'payment_method', 'amount', 'status', 'policy_number', 'created_at'],\r\n      primaryKey: 'id',\r\n      foreignKeys: ['quote_id -> quotes.id'],\r\n      rowCount: 2\r\n    },\r\n    additional_policies: {\r\n      name: 'additional_policies',\r\n      columns: ['id', 'quote_id', 'policy_id', 'name', 'description', 'price', 'created_at'],\r\n      primaryKey: 'id',\r\n      foreignKeys: ['quote_id -> quotes.id'],\r\n      rowCount: 4\r\n    },\r\n    policy_documents: {\r\n      name: 'policy_documents',\r\n      columns: ['id', 'quote_id', 'document_type', 'file_name', 'file_size', 'generated_at'],\r\n      primaryKey: 'id',\r\n      foreignKeys: ['quote_id -> quotes.id'],\r\n      rowCount: 2\r\n    },\r\n    audit_log: {\r\n      name: 'audit_log',\r\n      columns: ['id', 'table_name', 'record_id', 'action', 'old_values', 'new_values', 'created_at'],\r\n      primaryKey: 'id',\r\n      rowCount: 12\r\n    }\r\n  };\r\n\r\n  const mockData: Record<string, any[]> = {\r\n    quotes: [\r\n      { id: 1, destination: \"Spain\", start_date: \"2025-08-01\", end_date: \"2025-08-10\", trip_type: \"single\", number_of_travelers: 2, total_amount: 89.50, status: \"pending\", policy_number: null, created_at: \"2025-07-15T10:30:00Z\" },\r\n      { id: 2, destination: \"Thailand\", start_date: \"2025-09-15\", end_date: \"2025-09-30\", trip_type: \"comprehensive\", number_of_travelers: 1, total_amount: 156.75, status: \"paid\", policy_number: \"POL-2025-001\", created_at: \"2025-07-15T14:20:00Z\" },\r\n      { id: 3, destination: \"Italy\", start_date: \"2025-10-05\", end_date: \"2025-10-12\", trip_type: \"annual\", number_of_travelers: 4, total_amount: 299.99, status: \"paid\", policy_number: \"POL-2025-002\", created_at: \"2025-07-15T16:45:00Z\" }\r\n    ],\r\n    travelers: [\r\n      { id: 1, quote_id: 1, first_name: \"John\", last_name: \"Doe\", age: 35, email: \"john.doe@email.com\", phone: \"+1234567890\", nationality: \"Irish\", created_at: \"2025-07-15T10:30:00Z\" },\r\n      { id: 2, quote_id: 1, first_name: \"Jane\", last_name: \"Doe\", age: 32, email: \"jane.doe@email.com\", phone: \"+1234567890\", nationality: \"Irish\", created_at: \"2025-07-15T10:30:00Z\" },\r\n      { id: 3, quote_id: 2, first_name: \"Alice\", last_name: \"Smith\", age: 28, email: \"alice.smith@email.com\", phone: \"+0987654321\", nationality: \"German\", created_at: \"2025-07-15T14:20:00Z\" },\r\n      { id: 4, quote_id: 3, first_name: \"Bob\", last_name: \"Johnson\", age: 45, email: \"bob.j@email.com\", phone: \"+1122334455\", nationality: \"French\", created_at: \"2025-07-15T16:45:00Z\" }\r\n    ],\r\n    contact_messages: [\r\n      { id: 1, name: \"Mike Johnson\", email: \"mike.j@email.com\", subject: \"Question about coverage\", message: \"I need more information about winter sports coverage\", status: \"new\", created_at: \"2025-07-15T09:15:00Z\" },\r\n      { id: 2, name: \"Sarah Wilson\", email: \"sarah.w@email.com\", subject: \"Claim assistance\", message: \"I need help filing a claim for my recent trip\", status: \"in_progress\", created_at: \"2025-07-14T16:45:00Z\" },\r\n      { id: 3, name: \"David Brown\", email: \"david.b@email.com\", subject: \"Policy question\", message: \"Can I extend my current policy?\", status: \"resolved\", created_at: \"2025-07-13T11:20:00Z\" }\r\n    ],\r\n    payments: [\r\n      { id: 1, quote_id: 2, payment_method: \"card\", amount: 156.75, status: \"completed\", policy_number: \"POL-2025-001\", created_at: \"2025-07-15T14:25:00Z\" },\r\n      { id: 2, quote_id: 3, payment_method: \"paypal\", amount: 299.99, status: \"completed\", policy_number: \"POL-2025-002\", created_at: \"2025-07-15T16:50:00Z\" }\r\n    ],\r\n    additional_policies: [\r\n      { id: 1, quote_id: 2, policy_id: \"WINTER_SPORTS\", name: \"Winter Sports Coverage\", description: \"Extended coverage for skiing and snowboarding\", price: 25.00, created_at: \"2025-07-15T14:20:00Z\" },\r\n      { id: 2, quote_id: 3, policy_id: \"FAMILY_DISCOUNT\", name: \"Family Discount\", description: \"Discount for families with children\", price: -50.00, created_at: \"2025-07-15T16:45:00Z\" }\r\n    ],\r\n    policy_documents: [\r\n      { id: 1, quote_id: 2, document_type: \"policy\", file_name: \"policy_POL-2025-001.pdf\", file_size: 245760, generated_at: \"2025-07-15T14:30:00Z\" },\r\n      { id: 2, quote_id: 3, document_type: \"certificate\", file_name: \"certificate_POL-2025-002.pdf\", file_size: 198432, generated_at: \"2025-07-15T16:55:00Z\" }\r\n    ],\r\n    audit_log: [\r\n      { id: 1, table_name: \"quotes\", record_id: 2, action: \"INSERT\", old_values: null, new_values: '{\"destination\": \"Thailand\", \"status\": \"pending\"}', created_at: \"2025-07-15T14:20:00Z\" },\r\n      { id: 2, table_name: \"payments\", record_id: 1, action: \"INSERT\", old_values: null, new_values: '{\"amount\": 156.75, \"status\": \"completed\"}', created_at: \"2025-07-15T14:25:00Z\" },\r\n      { id: 3, table_name: \"quotes\", record_id: 2, action: \"UPDATE\", old_values: '{\"status\": \"pending\"}', new_values: '{\"status\": \"paid\"}', created_at: \"2025-07-15T14:26:00Z\" }\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Simulate loading\r\n    setTimeout(() => {\r\n      const tablesList = Object.values(mockSchema);\r\n      setTables(tablesList);\r\n      \r\n      const totalRecords = Object.values(mockData).reduce((sum, table) => sum + table.length, 0);\r\n      setStats({\r\n        totalTables: tablesList.length,\r\n        totalRecords,\r\n        tableStats: tablesList.map(table => ({\r\n          name: table.name,\r\n          count: mockData[table.name]?.length || 0\r\n        }))\r\n      });\r\n      \r\n      setLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const handleTableSelect = (tableName: string) => {\r\n    setSelectedTable(tableName);\r\n    setTableData(mockData[tableName] || []);\r\n  };\r\n\r\n  const formatValue = (value: any): string => {\r\n    if (value === null || value === undefined) return 'NULL';\r\n    if (typeof value === 'object') return JSON.stringify(value);\r\n    if (typeof value === 'string' && value.includes('T') && value.includes('Z')) {\r\n      return new Date(value).toLocaleString();\r\n    }\r\n    return String(value);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"database-viewer\">\r\n        <div className=\"loading\">\r\n          <h2>🔄 Loading Database Schema...</h2>\r\n          <p>Initializing database connection and loading table information...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"database-viewer\">\r\n      <div className=\"db-header\">\r\n        <h1>🗄️ Travel Insurance Database</h1>\r\n        <p>Database schema overview and sample data preview</p>\r\n      </div>\r\n\r\n      {stats && (\r\n        <div className=\"db-stats\">\r\n          <div className=\"stat-card\">\r\n            <div className=\"stat-number\">{stats.totalTables}</div>\r\n            <div className=\"stat-label\">Tables</div>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <div className=\"stat-number\">{stats.totalRecords}</div>\r\n            <div className=\"stat-label\">Sample Records</div>\r\n          </div>\r\n          {stats.tableStats.map(stat => (\r\n            <div key={stat.name} className=\"stat-card\">\r\n              <div className=\"stat-number\">{stat.count}</div>\r\n              <div className=\"stat-label\">{stat.name}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"db-content\">\r\n        <div className=\"tables-sidebar\">\r\n          <h3>📊 Database Tables</h3>\r\n          <div className=\"tables-list\">\r\n            {tables.map(table => (\r\n              <div \r\n                key={table.name}\r\n                className={`table-item ${selectedTable === table.name ? 'active' : ''}`}\r\n                onClick={() => handleTableSelect(table.name)}\r\n              >\r\n                <div className=\"table-name\">{table.name}</div>\r\n                <div className=\"table-info\">\r\n                  <span>{table.columns.length} columns</span>\r\n                  <span>{table.rowCount} rows</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"table-viewer\">\r\n          {selectedTable ? (\r\n            <div className=\"table-details\">\r\n              <div className=\"table-header\">\r\n                <h3>📋 Table: {selectedTable}</h3>\r\n              </div>\r\n              \r\n              <div className=\"schema-info\">\r\n                <h4>Schema Information</h4>\r\n                <div className=\"schema-details\">\r\n                  <p><strong>Primary Key:</strong> {mockSchema[selectedTable].primaryKey}</p>\r\n                  {mockSchema[selectedTable].foreignKeys && (\r\n                    <p><strong>Foreign Keys:</strong> {mockSchema[selectedTable].foreignKeys!.join(', ')}</p>\r\n                  )}\r\n                  <div className=\"columns-list\">\r\n                    <strong>Columns:</strong>\r\n                    <div className=\"columns\">\r\n                      {mockSchema[selectedTable].columns.map(column => (\r\n                        <span \r\n                          key={column}\r\n                          className={`column ${column === mockSchema[selectedTable].primaryKey ? 'primary-key' : ''}`}\r\n                        >\r\n                          {column}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"table-data\">\r\n                <h4>Sample Data ({tableData.length} records)</h4>\r\n                {tableData.length > 0 ? (\r\n                  <div className=\"data-table-container\">\r\n                    <table className=\"data-table\">\r\n                      <thead>\r\n                        <tr>\r\n                          {Object.keys(tableData[0]).map(key => (\r\n                            <th key={key}>{key}</th>\r\n                          ))}\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {tableData.map((row, index) => (\r\n                          <tr key={index}>\r\n                            {Object.values(row).map((value, cellIndex) => (\r\n                              <td key={cellIndex}>{formatValue(value)}</td>\r\n                            ))}\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"no-data\">No sample data available for this table.</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-selection\">\r\n              <h3>👈 Select a table to view its structure and data</h3>\r\n              <p>Click on any table from the sidebar to see its schema information and sample data.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatabaseViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}