{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laptop-123\\\\TravelInsurance_Demo_2\\\\src\\\\pages\\\\Quote.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\n// Import API service for database integration\nimport { createQuote, processPayment as apiProcessPayment, getAddonsByPolicyType } from '../services/apiService';\n// Import Terracotta service for insurance quotes\nimport TerracottaService, { getResidenceID, getTypePolicyID, getAgebandID } from '../services/terracottaService';\n\n// Import jsPDF dynamically to avoid build issues\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generatePDF = async (formData, calculateTotalPrice, formatDateToEuropean, policyNumber) => {\n  try {\n    var _formData$selectedQuo;\n    // Dynamic import of jsPDF\n    const jsPDF = (await import('jspdf')).default;\n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleDateString('en-GB');\n\n    // Set up fonts and styles\n    doc.setFontSize(20);\n    doc.text('TRAVEL INSURANCE POLICY', 20, 20);\n    doc.setFontSize(14);\n    doc.text(`Policy Number: ${policyNumber}`, 20, 35);\n    doc.text(`Issue Date: ${currentDate}`, 20, 45);\n    let yPos = 65;\n\n    // Trip Information Section\n    doc.setFontSize(16);\n    doc.text('TRIP INFORMATION', 20, yPos);\n    yPos += 15;\n    doc.setFontSize(12);\n    const tripType = formData.tripType === 'single' ? 'Single Trip Insurance' : formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' : 'Comprehensive Single Trip Insurance';\n    doc.text(`Trip Type: ${tripType}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Country of Residence: ${formData.countryOfResidence}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Destination: ${formData.destination}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Departure: ${formatDateToEuropean(formData.startDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Return: ${formatDateToEuropean(formData.endDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Travelers: ${formData.numberOfTravelers}`, 20, yPos);\n    yPos += 20;\n\n    // Traveler Information\n    doc.setFontSize(16);\n    doc.text('TRAVELER INFORMATION', 20, yPos);\n    yPos += 15;\n    doc.setFontSize(12);\n    formData.travelers.forEach((traveler, index) => {\n      if (yPos > 250) {\n        // New page if needed\n        doc.addPage();\n        yPos = 20;\n      }\n      doc.text(`${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}:`, 20, yPos);\n      yPos += 10;\n      doc.text(`Name: ${traveler.firstName} ${traveler.lastName}`, 20, yPos);\n      yPos += 8;\n      doc.text(`Age: ${traveler.age} years old`, 20, yPos);\n      yPos += 8;\n      doc.text(`Email: ${traveler.email}`, 20, yPos);\n      yPos += 8;\n      if (traveler.phone) {\n        doc.text(`Phone: ${traveler.phone}`, 20, yPos);\n        yPos += 8;\n      }\n      yPos += 10;\n    });\n\n    // Selected Plan\n    if (formData.selectedQuote) {\n      if (yPos > 180) {\n        doc.addPage();\n        yPos = 20;\n      }\n      doc.setFontSize(16);\n      doc.text('SELECTED INSURANCE PLAN', 20, yPos);\n      yPos += 15;\n      doc.setFontSize(12);\n      doc.text(`Plan: ${formData.selectedQuote.name}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Medical: ${formData.selectedQuote.coverage.medical}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Baggage: ${formData.selectedQuote.coverage.baggage}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Cancellation: ${formData.selectedQuote.coverage.cancellation}`, 20, yPos);\n      yPos += 15;\n\n      // Add Included Features\n      if (formData.selectedQuote.features && formData.selectedQuote.features.length > 0) {\n        doc.text('Included Features:', 20, yPos);\n        yPos += 10;\n        formData.selectedQuote.features.forEach(feature => {\n          if (yPos > 270) {\n            // Check for page break\n            doc.addPage();\n            yPos = 20;\n          }\n          doc.text(`• ${feature}`, 25, yPos);\n          yPos += 8;\n        });\n        yPos += 10;\n      }\n    }\n\n    // Additional Coverage\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      if (yPos > 220) {\n        doc.addPage();\n        yPos = 20;\n      }\n      doc.setFontSize(16);\n      doc.text('ADDITIONAL COVERAGE', 20, yPos);\n      yPos += 15;\n      doc.setFontSize(12);\n      formData.additionalPolicies.forEach(policy => {\n        if (yPos > 270) {\n          // Check for page break\n          doc.addPage();\n          yPos = 20;\n        }\n        doc.text(`• ${policy.name} - €${policy.price.toFixed(2)}`, 25, yPos);\n        yPos += 8;\n      });\n      yPos += 15;\n    }\n\n    // Premium Summary\n    if (yPos > 200) {\n      doc.addPage();\n      yPos = 20;\n    }\n    doc.setFontSize(16);\n    doc.text('PREMIUM SUMMARY', 20, yPos);\n    yPos += 15;\n    doc.setFontSize(12);\n    doc.text(`Base Premium: €${(_formData$selectedQuo = formData.selectedQuote) === null || _formData$selectedQuo === void 0 ? void 0 : _formData$selectedQuo.price}`, 20, yPos);\n    yPos += 10;\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      const additional = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n      doc.text(`Additional Policies: €${additional.toFixed(2)}`, 20, yPos);\n      yPos += 10;\n    }\n    doc.text('Taxes & Fees: Included', 20, yPos);\n    yPos += 10;\n    doc.text(`Total Premium: €${calculateTotalPrice().toFixed(2)}`, 20, yPos);\n    yPos += 20;\n    doc.text('Emergency Contact: +30 6974907500', 20, yPos);\n\n    // Save the PDF\n    doc.save(`Travel_Insurance_Policy_${policyNumber}.pdf`);\n  } catch (error) {\n    console.error('PDF generation failed, falling back to HTML:', error);\n    // Fallback to HTML generation if PDF fails\n    generateHTMLPolicy(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  }\n};\nconst generateHTMLPolicy = (formData, calculateTotalPrice, formatDateToEuropean, policyNumber) => {\n  var _formData$selectedQuo2;\n  const currentDate = new Date().toLocaleDateString('en-GB');\n  const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Travel Insurance Policy - ${policyNumber}</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\n        .section { margin-bottom: 25px; }\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\n        .info-row { margin: 8px 0; }\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\n        @media print { body { margin: 0; } }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>TRAVEL INSURANCE POLICY</h1>\n        <h2>Policy Number: ${policyNumber}</h2>\n        <p>Issue Date: ${currentDate}</p>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRIP INFORMATION</div>\n        <div class=\"info-row\"><strong>Trip Type:</strong> ${formData.tripType === 'single' ? 'Single Trip Insurance' : formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' : 'Comprehensive Single Trip Insurance'}</div>\n        <div class=\"info-row\"><strong>Country of Residence:</strong> ${formData.countryOfResidence}</div>\n        <div class=\"info-row\"><strong>Destination:</strong> ${formData.destination}</div>\n        <div class=\"info-row\"><strong>Departure:</strong> ${formatDateToEuropean(formData.startDate)}</div>\n        <div class=\"info-row\"><strong>Return:</strong> ${formatDateToEuropean(formData.endDate)}</div>\n        <div class=\"info-row\"><strong>Travelers:</strong> ${formData.numberOfTravelers}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRAVELER INFORMATION</div>\n        ${formData.travelers.map((traveler, index) => `\n            <div class=\"traveler-block\">\n                <strong>${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}</strong>\n                <div class=\"info-row\"><strong>Name:</strong> ${traveler.firstName} ${traveler.lastName}</div>\n                <div class=\"info-row\"><strong>Age:</strong> ${traveler.age} years old</div>\n                <div class=\"info-row\"><strong>Email:</strong> ${traveler.email}</div>\n                ${traveler.phone ? `<div class=\"info-row\"><strong>Phone:</strong> ${traveler.phone}</div>` : ''}\n            </div>\n        `).join('')}\n    </div>\n    \n    ${formData.selectedQuote ? `\n    <div class=\"section\">\n        <div class=\"section-title\">SELECTED INSURANCE PLAN</div>\n        <div class=\"info-row\"><strong>Plan:</strong> ${formData.selectedQuote.name}</div>\n        <div class=\"info-row\"><strong>Medical Coverage:</strong> ${formData.selectedQuote.coverage.medical}</div>\n        <div class=\"info-row\"><strong>Baggage Coverage:</strong> ${formData.selectedQuote.coverage.baggage}</div>\n        <div class=\"info-row\"><strong>Trip Cancellation:</strong> ${formData.selectedQuote.coverage.cancellation}</div>\n        \n        ${formData.selectedQuote.features && formData.selectedQuote.features.length > 0 ? `\n        <div style=\"margin-top: 15px;\">\n            <strong>Included Features:</strong>\n            <ul>\n                ${formData.selectedQuote.features.map(feature => `<li>${feature}</li>`).join('')}\n            </ul>\n        </div>\n        ` : ''}\n    </div>\n    ` : ''}\n    \n    ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n    <div class=\"section\">\n        <div class=\"section-title\">ADDITIONAL COVERAGE</div>\n        <ul>\n            ${formData.additionalPolicies.map(policy => `<li>${policy.name} - €${policy.price.toFixed(2)}</li>`).join('')}\n        </ul>\n    </div>\n    ` : ''}\n    \n    <div class=\"section\">\n        <div class=\"section-title\">PREMIUM SUMMARY</div>\n        <div class=\"info-row\"><strong>Base Premium:</strong> €${(_formData$selectedQuo2 = formData.selectedQuote) === null || _formData$selectedQuo2 === void 0 ? void 0 : _formData$selectedQuo2.price}</div>\n        ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n        <div class=\"info-row\"><strong>Additional Policies:</strong> €${formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0).toFixed(2)}</div>\n        ` : ''}\n        <div class=\"info-row\"><strong>Taxes & Fees:</strong> Included</div>\n        <div class=\"info-row\"><strong>Total Premium:</strong> €${calculateTotalPrice().toFixed(2)}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"info-row\"><strong>Emergency Contact:</strong> +30 6974907500</div>\n        <div class=\"info-row\" style=\"margin-top: 20px; font-style: italic;\">\n            This document serves as proof of travel insurance coverage.\n        </div>\n    </div>\n    \n    <script>\n        window.onload = function() { window.print(); };\n        window.onafterprint = function() { window.close(); };\n    </script>\n</body>\n</html>`;\n  const printWindow = window.open('', '_blank', 'width=800,height=600');\n  if (printWindow) {\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }\n};\n\n// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean = dateString => {\n  if (!dateString) return '';\n  // Parse the ISO date string directly to avoid timezone issues\n  const [year, month, day] = dateString.split('-');\n  return `${day}/${month}/${year}`;\n};\nconst calculateAgeFromDateOfBirth = dateOfBirth => {\n  const birthDate = new Date(dateOfBirth);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n    age--;\n  }\n  return Math.max(0, age);\n};\nconst Quote = ({\n  onNavigate\n}) => {\n  _s2();\n  var _formData$selectedQuo10,\n    _s = $RefreshSig$();\n  const [currentPhase, setCurrentPhase] = useState(1);\n  const [formData, setFormData] = useState({\n    destination: '',\n    destinationCategory: '',\n    startDate: '',\n    endDate: '',\n    tripType: 'single',\n    countryOfResidence: '',\n    numberOfTravelers: 1,\n    travelers: [{\n      firstName: '',\n      lastName: '',\n      age: '',\n      email: '',\n      phone: '',\n      vaxId: '',\n      nationality: ''\n    }],\n    selectedQuote: null,\n    additionalPolicies: [],\n    paymentMethod: 'card',\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    billingAddress: {\n      street: '',\n      city: '',\n      postalCode: '',\n      country: ''\n    }\n  });\n  const [quoteOptions, setQuoteOptions] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [policyNumber, setPolicyNumber] = useState('');\n  const [policyDocuments, setPolicyDocuments] = useState({});\n  const [terracottaService] = useState(() => {\n    console.log('Creating TerracottaService instance...');\n    return TerracottaService.getInstance('4072', '111427');\n  });\n  const [screeningQuestions] = useState([]);\n  const [screeningAnswers, setScreeningAnswers] = useState({});\n  const [isLoadingQuotes, setIsLoadingQuotes] = useState(false);\n  const [quoteError, setQuoteError] = useState('');\n  const [availableProducts, setAvailableProducts] = useState([]);\n\n  // Policy types state\n  const [availablePolicyTypes, setAvailablePolicyTypes] = useState([]);\n\n  // Policy type destinations state (Trip Types) - commented out as unused\n  // const [availablePolicyTypeDestinations] = useState<TerracottaPolicyTypeDestination[]>([]);\n  const [isLoadingPolicyTypeDestinations, setIsLoadingPolicyTypeDestinations] = useState(false);\n\n  // Destination categories state\n  const [destinationCategories, setDestinationCategories] = useState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n\n  // All countries with their categories for autocomplete\n  const [allCountriesWithCategories, setAllCountriesWithCategories] = useState([]);\n  const [destinationSuggestions, setDestinationSuggestions] = useState([]);\n  const [showDestinationSuggestions, setShowDestinationSuggestions] = useState(false);\n\n  // Expiry date validation error\n  const [expiryDateError, setExpiryDateError] = useState('');\n\n  // Help popup state\n  const [showHelpPopup, setShowHelpPopup] = useState(false);\n  const [countriesByCategory, setCountriesByCategory] = useState({});\n  const [isLoadingCountries, setIsLoadingCountries] = useState(false);\n\n  // Privacy Policy and Terms modal states\n  const [showPrivacyPolicy, setShowPrivacyPolicy] = useState(false);\n  const [showTermsAndConditions, setShowTermsAndConditions] = useState(false);\n  const [showGeneralConditions, setShowGeneralConditions] = useState(false);\n  const [generalConditionsData, setGeneralConditionsData] = useState([]);\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [marketingEmailsAccepted, setMarketingEmailsAccepted] = useState(false);\n\n  // Countries of residence state\n  const [countriesOfResidence, setCountriesOfResidence] = useState([]);\n  const [isLoadingCountriesOfResidence, setIsLoadingCountriesOfResidence] = useState(false);\n\n  // Addons state - fetched from database based on selected policy type\n  const [availableAdditionalPolicies, setAvailableAdditionalPolicies] = useState([]);\n  const [isLoadingAddons, setIsLoadingAddons] = useState(false);\n\n  // Store the total GrossPrice from SOAP alterations response\n  const [totalGrossPriceWithAddons, setTotalGrossPriceWithAddons] = useState(null);\n\n  // Loading state for addon operations - track which specific addon is being processed\n  const [processingAddonId, setProcessingAddonId] = useState(null);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, []);\n\n  // Load available Terracotta products on component mount\n  useEffect(() => {\n    const loadTerracottaProducts = async () => {\n      try {\n        var _productResponse$Sche;\n        // setIsLoadingProducts(true);\n        console.log('Loading Terracotta products...');\n        const productResponse = await terracottaService.getUserProductList();\n        console.log('Terracotta products loaded:', productResponse);\n        console.log(`✅ Successfully loaded ${((_productResponse$Sche = productResponse.Schemas) === null || _productResponse$Sche === void 0 ? void 0 : _productResponse$Sche.length) || 0} products for your account`);\n        setAvailableProducts(productResponse.Schemas || []);\n        // setIsLoadingProducts(false);\n      } catch (error) {\n        console.error('Error loading Terracotta products:', error);\n        // setIsLoadingProducts(false);\n        // Don't show error to user, just log it - we'll use fallback\n      }\n    };\n    loadTerracottaProducts();\n  }, [terracottaService]);\n\n  // Load policy types when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      try {\n        // setIsLoadingPolicyTypes(true);\n        console.log('Loading policy types for available products...');\n\n        // Load policy types for each product (schema)\n        const allPolicyTypes = [];\n        for (const product of availableProducts) {\n          try {\n            console.log(`Loading policy types for schema ${product.SchemaID}: ${product.SchemaName}`);\n            const policyResponse = await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());\n            console.log(`Policy types for schema ${product.SchemaID}:`, policyResponse);\n\n            // Add schema context to each policy type\n            const policyTypesWithSchema = policyResponse.PolicyTypes.map(policyType => ({\n              ...policyType,\n              SchemaID: product.SchemaID,\n              SchemaName: product.SchemaName\n            }));\n            allPolicyTypes.push(...policyTypesWithSchema);\n          } catch (error) {\n            console.error(`Error loading policy types for schema ${product.SchemaID}:`, error);\n          }\n        }\n\n        // Remove duplicates based on TypePolicyID\n        const uniquePolicyTypes = allPolicyTypes.filter((policyType, index, self) => index === self.findIndex(p => p.TypePolicyID === policyType.TypePolicyID));\n        setAvailablePolicyTypes(uniquePolicyTypes);\n        console.log(`✅ Successfully loaded ${uniquePolicyTypes.length} unique policy types`);\n        // setIsLoadingPolicyTypes(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        // setIsLoadingPolicyTypes(false);\n      }\n    };\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Load policy types (Trip Types) when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      try {\n        setIsLoadingPolicyTypeDestinations(true);\n        console.log('Loading policy types for available products...');\n\n        // Load policy types for each product (schema) - Using schema 717 as specified\n        const allPolicyTypes = [];\n\n        // Use schema 717 as specified in the requirement\n        const schemaToUse = availableProducts.find(p => p.SchemaID === 717) || availableProducts[0];\n        try {\n          console.log(`Loading policy types for schema ${schemaToUse.SchemaID}: ${schemaToUse.SchemaName}`);\n          const policyTypeResponse = await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());\n          console.log(`Policy types for schema ${schemaToUse.SchemaID}:`, policyTypeResponse);\n          allPolicyTypes.push(...policyTypeResponse.PolicyTypes);\n        } catch (error) {\n          console.error(`Error loading policy types for schema ${schemaToUse.SchemaID}:`, error);\n        }\n        setAvailablePolicyTypes(allPolicyTypes);\n        console.log(`✅ Successfully loaded ${allPolicyTypes.length} policy types`);\n        setIsLoadingPolicyTypeDestinations(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypeDestinations(false);\n      }\n    };\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Show a brief message when end date is cleared due to start date change\n  useEffect(() => {\n    if (formData.startDate && !formData.endDate) {\n      // This effect will run when start date exists but end date is empty\n      // We could add a toast notification here if needed\n    }\n  }, [formData.startDate, formData.endDate]);\n\n  // Load countries of residence on component mount\n  useEffect(() => {\n    const loadCountriesOfResidence = async () => {\n      try {\n        setIsLoadingCountriesOfResidence(true);\n        console.log('Loading countries of residence...');\n        const response = await fetch('http://localhost:5002/api/countries');\n        const data = await response.json();\n        if (data.status === 'success') {\n          setCountriesOfResidence(data.countries);\n          console.log('✅ Countries of residence loaded:', data.countries.length, 'countries');\n        } else {\n          console.error('❌ Failed to load countries of residence:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries of residence:', error);\n      } finally {\n        setIsLoadingCountriesOfResidence(false);\n      }\n    };\n    loadCountriesOfResidence();\n  }, []);\n\n  // Load all countries with their categories for autocomplete\n  useEffect(() => {\n    const loadAllCountries = async () => {\n      try {\n        setIsLoadingCategories(true);\n        console.log('Loading all countries with destination categories...');\n        const response = await fetch('http://localhost:5002/api/destination-categories/all-countries');\n        const data = await response.json();\n        if (data.status === 'success') {\n          setAllCountriesWithCategories(data.countries);\n          console.log('✅ Countries with categories loaded:', data.countries.length);\n        } else {\n          console.error('❌ Failed to load countries:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries:', error);\n      } finally {\n        setIsLoadingCategories(false);\n      }\n    };\n    loadAllCountries();\n  }, []);\n\n  // Load countries for each category when categories are loaded\n  useEffect(() => {\n    const loadCountriesForCategories = async () => {\n      if (destinationCategories.length === 0) return;\n      try {\n        setIsLoadingCountries(true);\n        const countriesData = {};\n\n        // Load countries for each category\n        for (const category of destinationCategories) {\n          try {\n            const response = await fetch(`http://localhost:5002/api/destination-categories/${encodeURIComponent(category)}/countries`);\n            const data = await response.json();\n            if (data.status === 'success') {\n              countriesData[category] = data.countries;\n            }\n          } catch (error) {\n            console.error(`Error loading countries for ${category}:`, error);\n            countriesData[category] = [];\n          }\n        }\n        setCountriesByCategory(countriesData);\n      } catch (error) {\n        console.error('Error loading countries:', error);\n      } finally {\n        setIsLoadingCountries(false);\n      }\n    };\n    loadCountriesForCategories();\n  }, [destinationCategories]);\n\n  // Generate quotes when component mounts or when form data is complete\n  useEffect(() => {\n    const generateQuotesIfNeeded = async () => {\n      // Only generate quotes if we have basic form data and we're in phase 2\n      if (currentPhase === 2 && quoteOptions.length === 0) {\n        console.log('🔄 Generating quotes on component load...');\n        try {\n          const options = await generateQuoteOptions();\n          setQuoteOptions(options);\n        } catch (error) {\n          console.error('Error generating quotes:', error);\n        }\n      }\n    };\n    generateQuotesIfNeeded();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPhase, quoteOptions.length]);\n\n  // Helper function to normalize SOAP policy type names to match database\n  const normalizePolicyTypeName = soapPolicyType => {\n    if (!soapPolicyType) return '';\n\n    // Trim and normalize whitespace\n    let normalized = soapPolicyType.trim();\n\n    // Map common SOAP response values to database policy type names\n    const mappings = {\n      // Annual Multi-Trip variants (handle various capitalizations)\n      'Silver Annual Multi-Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi-Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi-Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi-trip': 'Silver Annual Multi-Trip',\n      // lowercase 't'\n      'Gold Annual Multi-trip': 'Gold Annual Multi-Trip',\n      // lowercase 't'\n      'Essential Annual Multi-trip': 'Essential Annual Multi-Trip',\n      // lowercase 't'\n\n      // Single Trip variants\n      'Silver Single Trip': 'Silver Single Trip',\n      'Gold Single Trip': 'Gold Single Trip',\n      'Essential Single Trip': 'Essential Single Trip',\n      'Value Single Trip': 'Value Single Trip',\n      // Long Stay variants\n      'Long Stay Standard': 'Long Stay Standard',\n      'Long Stay Study Abroad': 'Long Stay Study Abroad',\n      'Longstay Standard': 'Long Stay Standard',\n      'Longstay Study Abroad': 'Long Stay Study Abroad'\n    };\n\n    // Try exact match first (case-insensitive)\n    for (const [key, value] of Object.entries(mappings)) {\n      if (normalized.toLowerCase() === key.toLowerCase()) {\n        console.log(`✅ Exact match found! Normalized policy type: \"${normalized}\" -> \"${value}\"`);\n        return value;\n      }\n    }\n    console.log(`⚠️ No exact mapping found for: \"${normalized}\", trying pattern matching...`);\n\n    // Try pattern matching if exact match fails\n    const lowerNormalized = normalized.toLowerCase();\n\n    // Silver Annual Multi-Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Annual Multi-Trip\"`);\n      return 'Silver Annual Multi-Trip';\n    }\n\n    // Gold Annual Multi-Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Annual Multi-Trip\"`);\n      return 'Gold Annual Multi-Trip';\n    }\n\n    // Essential Annual Multi-Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Annual Multi-Trip\"`);\n      return 'Essential Annual Multi-Trip';\n    }\n\n    // Silver Single Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Single Trip\"`);\n      return 'Silver Single Trip';\n    }\n\n    // Gold Single Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Single Trip\"`);\n      return 'Gold Single Trip';\n    }\n\n    // Essential Single Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Single Trip\"`);\n      return 'Essential Single Trip';\n    }\n\n    // Value Single Trip patterns\n    if (lowerNormalized.includes('value') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Value Single Trip\"`);\n      return 'Value Single Trip';\n    }\n\n    // Long Stay patterns\n    if (lowerNormalized.includes('long') && lowerNormalized.includes('stay')) {\n      if (lowerNormalized.includes('study') || lowerNormalized.includes('abroad')) {\n        console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Study Abroad\"`);\n        return 'Long Stay Study Abroad';\n      }\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Standard\"`);\n      return 'Long Stay Standard';\n    }\n\n    // If no match found, return original and log warning\n    console.warn(`⚠️ No mapping found for policy type: \"${normalized}\"`);\n    return normalized;\n  };\n\n  // Fetch addons when entering Step 3 (Add-ons phase)\n  useEffect(() => {\n    const fetchAddons = async () => {\n      var _formData$selectedQuo3, _formData$selectedQuo4, _formData$selectedQuo5, _formData$selectedQuo6, _formData$selectedQuo7, _formData$selectedQuo8, _formData$selectedQuo9, _formData$selectedQuo0;\n      // Only fetch addons when we're in Step 3 (Add-ons phase)\n      if (currentPhase !== 3) {\n        console.log('ℹ️ Not in Step 3, skipping addon fetch (current phase:', currentPhase, ')');\n        return;\n      }\n\n      // Debug: Log the entire selected quote to see all available fields\n      console.log('🔍 DEBUG - Selected Quote:', formData.selectedQuote);\n      console.log('📍 Current Phase:', currentPhase, '- Fetching add-ons for Step 3');\n\n      // Only fetch if we have a selected quote with a policy type name\n      // IMPORTANT: prioritize policytypeName first as it contains the full name (e.g., \"Silver Annual Multi-Trip\")\n      // policyTypeName often just contains \"Annual Multi-Trip\" without the tier (Silver/Gold/Essential)\n      const rawPolicyTypeName = ((_formData$selectedQuo3 = formData.selectedQuote) === null || _formData$selectedQuo3 === void 0 ? void 0 : _formData$selectedQuo3.policytypeName) || ((_formData$selectedQuo4 = formData.selectedQuote) === null || _formData$selectedQuo4 === void 0 ? void 0 : _formData$selectedQuo4.policyTypeName) || ((_formData$selectedQuo5 = formData.selectedQuote) === null || _formData$selectedQuo5 === void 0 ? void 0 : _formData$selectedQuo5.typePolicyName);\n      console.log('🔍 DEBUG - Policy type field values:', {\n        policyTypeName: (_formData$selectedQuo6 = formData.selectedQuote) === null || _formData$selectedQuo6 === void 0 ? void 0 : _formData$selectedQuo6.policyTypeName,\n        policytypeName: (_formData$selectedQuo7 = formData.selectedQuote) === null || _formData$selectedQuo7 === void 0 ? void 0 : _formData$selectedQuo7.policytypeName,\n        typePolicyName: (_formData$selectedQuo8 = formData.selectedQuote) === null || _formData$selectedQuo8 === void 0 ? void 0 : _formData$selectedQuo8.typePolicyName,\n        rawPolicyTypeName: rawPolicyTypeName,\n        selectedField: (_formData$selectedQuo9 = formData.selectedQuote) !== null && _formData$selectedQuo9 !== void 0 && _formData$selectedQuo9.policytypeName ? 'policytypeName' : (_formData$selectedQuo0 = formData.selectedQuote) !== null && _formData$selectedQuo0 !== void 0 && _formData$selectedQuo0.policyTypeName ? 'policyTypeName' : 'typePolicyName'\n      });\n      if (rawPolicyTypeName) {\n        // Normalize the policy type name to match database\n        const policyTypeName = normalizePolicyTypeName(rawPolicyTypeName);\n        console.log('📋 Fetching addons for policy type:', policyTypeName, '(raw:', rawPolicyTypeName, ')');\n        setIsLoadingAddons(true);\n        try {\n          const response = await getAddonsByPolicyType(policyTypeName);\n          if (response.status === 'success') {\n            const addonsData = response.addons || [];\n            console.log(`✅ Loaded ${addonsData.length} addons for ${policyTypeName}`);\n\n            // Transform database addons to AdditionalPolicy format\n            const transformedAddons = addonsData.map(addon => {\n              // Determine icon based on addon type\n              const getIcon = name => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                if (lowerName.includes('business')) return '💼';\n                if (lowerName.includes('golf')) return '⛳';\n                if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                if (lowerName.includes('wedding')) return '💍';\n                if (lowerName.includes('event')) return '🎫';\n                if (lowerName.includes('cancellation')) return '❌';\n                if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                if (lowerName.includes('accident')) return '🚑';\n                if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                if (lowerName.includes('emigration')) return '🌍';\n                if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                return '📋'; // Default icon\n              };\n\n              // Determine category based on addon type\n              const getCategory = name => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                if (lowerName.includes('business')) return 'Business';\n                if (lowerName.includes('cancellation')) return 'Cancellation';\n                if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                return 'Other';\n              };\n              return {\n                id: `addon-${addon.alteration_id}`,\n                name: addon.additional_cover_name,\n                description: addon.additional_cover_detail || '',\n                price: 0,\n                // Price will be updated from SOAP response\n                icon: getIcon(addon.additional_cover_name),\n                category: getCategory(addon.additional_cover_name),\n                alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n              };\n            });\n            setAvailableAdditionalPolicies(transformedAddons);\n          } else {\n            console.warn('No addons found for policy type:', policyTypeName);\n            setAvailableAdditionalPolicies([]);\n          }\n        } catch (error) {\n          console.error('Error fetching addons:', error);\n          // Keep empty array on error\n          setAvailableAdditionalPolicies([]);\n        } finally {\n          setIsLoadingAddons(false);\n        }\n      } else {\n        var _formData$selectedQuo1;\n        // No policy type selected, try to extract from quote name as fallback\n        if ((_formData$selectedQuo1 = formData.selectedQuote) !== null && _formData$selectedQuo1 !== void 0 && _formData$selectedQuo1.name) {\n          console.warn('⚠️ No policy type field found, attempting to extract from quote name:', formData.selectedQuote.name);\n\n          // Try to extract policy type from the name field\n          // Format is usually: \"SchemaName - PolicyTypeName\"\n          const nameParts = formData.selectedQuote.name.split(' - ');\n          if (nameParts.length > 1) {\n            const extractedPolicyType = nameParts[1].trim();\n            console.log('🔍 Extracted policy type from name:', extractedPolicyType);\n            const normalizedType = normalizePolicyTypeName(extractedPolicyType);\n            if (normalizedType) {\n              setIsLoadingAddons(true);\n              try {\n                const response = await getAddonsByPolicyType(normalizedType);\n                if (response.status === 'success') {\n                  const addonsData = response.addons || [];\n                  console.log(`✅ Loaded ${addonsData.length} addons using extracted type: ${normalizedType}`);\n                  const transformedAddons = addonsData.map(addon => {\n                    const getIcon = name => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                      if (lowerName.includes('business')) return '💼';\n                      if (lowerName.includes('golf')) return '⛳';\n                      if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                      if (lowerName.includes('wedding')) return '💍';\n                      if (lowerName.includes('event')) return '🎫';\n                      if (lowerName.includes('cancellation')) return '❌';\n                      if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                      if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                      if (lowerName.includes('accident')) return '🚑';\n                      if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                      if (lowerName.includes('emigration')) return '🌍';\n                      if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                      if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                      return '📋';\n                    };\n                    const getCategory = name => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                      if (lowerName.includes('business')) return 'Business';\n                      if (lowerName.includes('cancellation')) return 'Cancellation';\n                      if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                      if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                      if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                      return 'Other';\n                    };\n                    return {\n                      id: `addon-${addon.alteration_id}`,\n                      name: addon.additional_cover_name,\n                      description: addon.additional_cover_detail || '',\n                      price: 0,\n                      // Price will be updated from SOAP response\n                      icon: getIcon(addon.additional_cover_name),\n                      category: getCategory(addon.additional_cover_name),\n                      alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n                    };\n                  });\n                  setAvailableAdditionalPolicies(transformedAddons);\n                }\n              } catch (error) {\n                console.error('Error fetching addons with extracted type:', error);\n                setAvailableAdditionalPolicies([]);\n              } finally {\n                setIsLoadingAddons(false);\n              }\n              return;\n            }\n          }\n        }\n        console.warn('⚠️ No policy type found in selected quote, clearing addons');\n        setAvailableAdditionalPolicies([]);\n      }\n    };\n    fetchAddons();\n  }, [currentPhase, formData.selectedQuote]); // Trigger when entering Step 3 OR when quote changes\n\n  // Reset addons and pricing when the selected quote changes\n  useEffect(() => {\n    if (formData.selectedQuote) {\n      console.log('Quote changed, resetting addons and pricing...');\n\n      // Clear existing addons\n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: []\n      }));\n\n      // Reset SOAP pricing\n      setTotalGrossPriceWithAddons(null);\n\n      // Clear available addons to force refresh\n      setAvailableAdditionalPolicies([]);\n      console.log('✅ Addons and pricing reset for new quote');\n    }\n  }, [(_formData$selectedQuo10 = formData.selectedQuote) === null || _formData$selectedQuo10 === void 0 ? void 0 : _formData$selectedQuo10.id, formData.selectedQuote]); // Only trigger when the quote ID actually changes\n\n  // REMOVED: Auto-loading sample quotes - now using real SOAP response\n  // useEffect(() => {\n  //   if (currentPhase === 2) {\n  //     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n  //     const sampleQuotes = generateSampleSOAPQuotes();\n  //     setQuoteOptions(sampleQuotes);\n  //     setIsLoadingQuotes(false);\n  //   }\n  // }, [currentPhase]);\n\n  const generateQuoteOptions = useCallback(async () => {\n    setIsLoadingQuotes(true);\n    setQuoteError('');\n    try {\n      var _response$quoteResult;\n      console.log('🚀 Getting real quotes from Terracotta SOAP API...');\n      console.log('Form data:', formData);\n\n      // Make a single SOAP request to get all available quotes\n      const terracottaRequest = TerracottaService.convertToTerracottaFormat(formData, availablePolicyTypes);\n      console.log('SOAP Request:', terracottaRequest);\n\n      // Get quotes from Terracotta SOAP API\n      const response = await terracottaService.provideQuotation(terracottaRequest);\n      console.log('SOAP Response:', response);\n      console.log('📊 SOAP Response Message:', response.Message);\n      console.log('📊 Quote Results Count:', ((_response$quoteResult = response.quoteResults) === null || _response$quoteResult === void 0 ? void 0 : _response$quoteResult.length) || 0);\n      if (response.quoteResults && response.quoteResults.length > 0) {\n        console.log('📊 Processing SOAP results:', response.quoteResults);\n        // Convert SOAP response directly to QuoteOption format\n        const realQuotes = response.quoteResults.map((result, index) => {\n          console.log(`Processing quote ${index + 1}:`, result);\n          return {\n            id: `soap-${result.QuoteID}`,\n            name: `${result.schemaName} - ${result.policytypeName || result.typePolicyName}`,\n            type: result.isBestBuy === 1 ? 'premium' : result.GrossPrice > 100 ? 'standard' : 'basic',\n            price: result.GrossPrice || 0,\n            coverage: {\n              medical: result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : '€2,000,000',\n              baggage: '€1,000',\n              // This would ideally come from SOAP response\n              cancellation: '€2,000',\n              // This would ideally come from SOAP response\n              activities: ['Standard activities', 'Adventure sports']\n            },\n            features: ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection', ...(result.isAnnual === 1 ? ['Annual Multi-Trip Coverage'] : []), ...(result.isBestBuy === 1 ? ['Best Buy Option'] : []), ...(result.maxDaysPerTrip > 0 ? [`Up to ${result.maxDaysPerTrip} days per trip`] : [])],\n            // Real SOAP response data\n            terracottaQuoteId: result.QuoteID,\n            schemaName: result.schemaName,\n            policytypeName: result.policytypeName,\n            policyTypeName: result.typePolicyName || result.policytypeName,\n            typePolicyName: result.typePolicyName || result.policytypeName,\n            summaryOfCoverUrl: result.SI,\n            policyWordingUrl: result.PW,\n            currency: result.currency,\n            ipt: result.IPT,\n            // Complete SOAP response fields\n            schemaID: result.SchemaID,\n            destinationCategory: result.destinationName,\n            tripType: formData.tripType,\n            residenceName: result.residenceName,\n            destinationName: result.destinationName,\n            packageName: result.packageName,\n            typePackageName: result.typePackageName,\n            isAnnual: result.isAnnual,\n            isBestBuy: result.isBestBuy,\n            isBestBuyText: result.isBestBuyText,\n            maxDaysPerTrip: result.maxDaysPerTrip,\n            coverLevel: result.coverLevel,\n            discount: result.Discount,\n            iconURL: result.IconURL,\n            helpFile: result.HelpFile,\n            policytypeShortName: result.policytypeShortName,\n            // Additional SOAP fields\n            keyFactsUrl: result.KF,\n            policyTypeID: result.PolicyTypeID,\n            destinationID: result.DestinationID,\n            packageID: result.PackageID,\n            screeningPremium: result.screeningPremium,\n            ipRate: result.IPTRate,\n            netUW: result.netUW,\n            wbComm: result.wbComm,\n            agentComm: result.agentComm,\n            SummaryCovers: result.SummaryCovers || [],\n            // Document URLs\n            SI: result.SI,\n            PW: result.PW\n          };\n        });\n        console.log(`✅ Received ${realQuotes.length} real quotes from Terracotta SOAP API`);\n\n        // Sort by IPT (highest first) and take top 3\n        const sortedByIPT = realQuotes.sort((a, b) => {\n          const iptA = a.ipt || 0;\n          const iptB = b.ipt || 0;\n          return iptB - iptA; // Descending order (highest IPT first)\n        });\n        const top3Quotes = sortedByIPT.slice(0, 3);\n\n        // Sort the top 3 by price (ascending - least expensive to most expensive)\n        const sortedByPrice = top3Quotes.sort((a, b) => a.price - b.price);\n        console.log(`📊 Filtered to top 3 quotes with highest IPT, sorted by price:`, sortedByPrice.map(q => ({\n          name: q.name,\n          price: q.price,\n          ipt: q.ipt\n        })));\n        setIsLoadingQuotes(false);\n        return sortedByPrice;\n      } else {\n        console.log('⚠️ No quotes in SOAP response, using sample data');\n        console.log('⚠️ Response message:', response.Message);\n        console.log('⚠️ This might be due to:');\n        console.log('   - Incorrect API credentials');\n        console.log('   - Invalid parameter values');\n        console.log('   - API restrictions or downtime');\n        console.log('   - Date range issues (past dates)');\n        setIsLoadingQuotes(false);\n        return generateSampleSOAPQuotes();\n      }\n    } catch (error) {\n      console.error('❌ Error getting real SOAP quotes:', error);\n      setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');\n      setIsLoadingQuotes(false);\n\n      // Fallback to sample SOAP response data\n      console.log('🔄 Using sample SOAP response data');\n      return generateSampleSOAPQuotes();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formData, availablePolicyTypes, terracottaService]);\n\n  // Generate sample quotes using your SOAP response data\n  const generateSampleSOAPQuotes = () => {\n    const allSampleQuotes = [{\n      id: 'soap-12345',\n      name: 'TravelSafe Basic 2024 - Single Trip Travel Insurance',\n      type: 'premium',\n      // Best buy\n      price: 72.60,\n      coverage: {\n        medical: '€5,000,000',\n        // Cover level 5\n        baggage: '€1,000',\n        cancellation: '€2,000',\n        activities: ['Standard activities', 'Adventure sports']\n      },\n      features: ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection', 'Best Buy Option', 'Up to 90 days per trip'],\n      // Real SOAP response data from QuoteID 12345\n      terracottaQuoteId: '12345',\n      schemaName: 'TravelSafe Basic 2024',\n      policyTypeName: 'Single Trip Travel Insurance',\n      typePolicyName: 'Single Trip Travel Insurance',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/12345.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/12345.pdf',\n      currency: 'EUR',\n      ipt: 12.60,\n      // Complete SOAP response fields\n      schemaID: 683,\n      destinationCategory: 'Europe',\n      tripType: formData.tripType,\n      residenceName: 'Greece',\n      destinationName: 'Europe',\n      packageName: 'TravelSafe Standard',\n      typePackageName: 'Standard Package',\n      isAnnual: 0,\n      isBestBuy: 1,\n      isBestBuyText: 'Best Value Option',\n      maxDaysPerTrip: 90,\n      coverLevel: 5,\n      discount: 0.00,\n      iconURL: 'https://terracotta.example.com/icons/basic.png',\n      helpFile: 'https://terracotta.example.com/help/12345.html',\n      policytypeShortName: 'Single Trip',\n      // Additional SOAP fields\n      keyFactsUrl: 'https://terracotta.example.com/keyfacts/12345.pdf',\n      policyTypeID: 1,\n      destinationID: 2,\n      packageID: 1,\n      screeningPremium: 0.00,\n      ipRate: 21.00,\n      netUW: 60.00,\n      wbComm: 5.40,\n      agentComm: 7.20\n    }, {\n      id: 'soap-12346',\n      name: 'TravelSafe Premium 2024 - Single Trip Travel Insurance',\n      type: 'standard',\n      price: 108.90,\n      coverage: {\n        medical: '€10,000,000',\n        // Cover level 10\n        baggage: '€1,000',\n        cancellation: '€2,000',\n        activities: ['Standard activities', 'Adventure sports']\n      },\n      features: ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection', 'Up to 120 days per trip'],\n      // Real SOAP response data from QuoteID 12346\n      terracottaQuoteId: '12346',\n      schemaName: 'TravelSafe Premium 2024',\n      policyTypeName: 'Single Trip Travel Insurance',\n      typePolicyName: 'Single Trip Travel Insurance',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/12346.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/12346.pdf',\n      currency: 'EUR',\n      ipt: 18.90,\n      // Complete SOAP response fields\n      schemaID: 717,\n      destinationCategory: 'Europe',\n      tripType: formData.tripType,\n      residenceName: 'Greece',\n      destinationName: 'Europe',\n      packageName: 'TravelSafe Premium',\n      typePackageName: 'Premium Package',\n      isAnnual: 0,\n      isBestBuy: 0,\n      isBestBuyText: '',\n      maxDaysPerTrip: 120,\n      coverLevel: 10,\n      discount: 0.00,\n      iconURL: 'https://terracotta.example.com/icons/premium.png',\n      helpFile: 'https://terracotta.example.com/help/12346.html',\n      policytypeShortName: 'Single Trip',\n      // Additional SOAP fields\n      keyFactsUrl: 'https://terracotta.example.com/keyfacts/12346.pdf',\n      policyTypeID: 1,\n      destinationID: 2,\n      packageID: 2,\n      screeningPremium: 0.00,\n      ipRate: 21.00,\n      netUW: 90.00,\n      wbComm: 8.10,\n      agentComm: 10.80\n    }];\n\n    // Sort by IPT (highest first) and take top 3\n    const sortedByIPT = allSampleQuotes.sort((a, b) => {\n      const iptA = a.ipt || 0;\n      const iptB = b.ipt || 0;\n      return iptB - iptA; // Descending order (highest IPT first)\n    });\n    const top3 = sortedByIPT.slice(0, 3);\n\n    // Sort the top 3 by price (ascending - least expensive to most expensive)\n    return top3.sort((a, b) => a.price - b.price);\n  };\n\n  // Helper function to calculate coverage levels based on destination and trip type (fallback)\n  const calculateCoverageLevels = (destination, tripType, price) => {\n    const baseMedical = tripType === 'annual' ? '€5,000,000' : tripType === 'longstay' ? '€3,000,000' : '€2,000,000';\n    const baseBaggage = '€1,000';\n    const baseCancellation = '€2,000';\n\n    // Enhance coverage based on destination category\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n\n    // Enhance based on price level\n    if (price > 200) {\n      medicalMultiplier *= 2;\n      baggageMultiplier *= 2;\n      cancellationMultiplier *= 2;\n    } else if (price > 100) {\n      medicalMultiplier *= 1.5;\n      baggageMultiplier *= 1.5;\n      cancellationMultiplier *= 1.5;\n    }\n    return {\n      medical: `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to determine quote type based on price and index\n  const determineQuoteType = (price, index) => {\n    if (price < 50) return 'basic';\n    if (price < 150) return 'standard';\n    return 'premium';\n  };\n\n  // Helper function to generate features based on destination and trip type\n  const generateFeaturesForDestination = (destination, tripType) => {\n    const baseFeatures = ['24/7 Emergency Assistance', 'Medical Coverage', 'Trip Cancellation', 'Baggage Protection'];\n    const destinationFeatures = [];\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    if (tripType === 'annual') {\n      destinationFeatures.push('Multiple Trip Coverage', 'Annual Policy Benefits', 'Unlimited Trips');\n    } else if (tripType === 'longstay') {\n      destinationFeatures.push('Extended Stay Coverage', 'Long Term Medical', 'Extended Baggage Protection', 'Long Stay Benefits');\n    } else if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    return [...baseFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to generate activities based on destination\n  const generateActivitiesForDestination = destination => {\n    const baseActivities = ['Standard activities'];\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      return ['Standard activities', 'Adventure sports', 'Extreme sports', 'Water sports', 'Winter sports'];\n    } else if (destination.toLowerCase().includes('europe')) {\n      return ['Standard activities', 'Adventure sports', 'Winter sports'];\n    }\n    return baseActivities;\n  };\n\n  // Enhanced mock quote generation that simulates Terracotta-style data\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const generateEnhancedMockQuoteOptions = () => {\n    const days = formData.startDate && formData.endDate ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24)) : 7;\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    // Generate multiple mock quotes based on available schemas\n    const mockQuotes = [];\n\n    // Create quotes for each available schema if we have them, otherwise use defaults\n    const schemasToUse = availableProducts.length > 0 ? availableProducts : [{\n      SchemaID: 683,\n      SchemaName: 'TravelSafe Basic'\n    }, {\n      SchemaID: 717,\n      SchemaName: 'TravelSafe Premium'\n    }];\n    schemasToUse.forEach((schema, index) => {\n      const price = Math.round((basePrice + days * dailyRate + index * 30) * formData.numberOfTravelers * tripMultiplier);\n      const coverage = calculateCoverageLevels(formData.destination, formData.tripType, price);\n      const features = generateFeaturesForDestination(formData.destination, formData.tripType);\n      const quoteType = determineQuoteType(price, index);\n      mockQuotes.push({\n        id: `mock-${schema.SchemaID}-${index}`,\n        name: `${schema.SchemaName} - ${formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip'}`,\n        type: quoteType,\n        price: price,\n        coverage: coverage,\n        features: features,\n        // Terracotta specific fields (mock)\n        terracottaQuoteId: `mock-${schema.SchemaID}-${Date.now()}`,\n        schemaName: schema.SchemaName,\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/mock.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/mock.pdf',\n        currency: 'EUR',\n        ipt: Math.round(price * 0.21),\n        // 21% IPT\n        // Additional metadata\n        schemaID: schema.SchemaID,\n        destinationCategory: formData.destination,\n        tripType: formData.tripType\n      });\n    });\n    return mockQuotes;\n  };\n\n  // Legacy mock quotes (kept for backward compatibility)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const generateLegacyMockQuoteOptions = () => {\n    const days = formData.startDate && formData.endDate ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24)) : 7;\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n    const options = [{\n      id: 'terracotta-basic',\n      name: 'Terracotta TravelSafe Basic',\n      type: 'basic',\n      price: Math.round((basePrice + days * dailyRate) * formData.numberOfTravelers * tripMultiplier),\n      coverage: {\n        medical: formData.tripType === 'annual' ? '€5,000,000' : '€2,000,000',\n        baggage: '€1,000',\n        cancellation: '€2,000',\n        activities: ['Standard activities']\n      },\n      features: ['Emergency Medical Coverage', 'Trip Cancellation', 'Baggage Protection', '24/7 Assistance'],\n      // Terracotta-specific fields (simulated)\n      terracottaQuoteId: `TC-${Date.now()}-001`,\n      schemaName: 'TravelSafe Basic',\n      policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/basic.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/basic.pdf',\n      currency: 'EUR',\n      ipt: 15.50\n    }, {\n      id: 'terracotta-standard',\n      name: 'Terracotta TravelSafe Standard',\n      type: 'standard',\n      price: Math.round((basePrice + days * dailyRate) * 1.3 * formData.numberOfTravelers * tripMultiplier),\n      coverage: {\n        medical: formData.tripType === 'annual' ? '€10,000,000' : '€5,000,000',\n        baggage: '€2,500',\n        cancellation: '€5,000',\n        activities: ['Standard activities', 'Adventure sports']\n      },\n      features: ['Enhanced Medical Coverage', 'Trip Cancellation & Curtailment', 'Enhanced Baggage Protection', 'Adventure Sports Coverage', '24/7 Assistance', 'Travel Delay Compensation'],\n      // Terracotta-specific fields (simulated)\n      terracottaQuoteId: `TC-${Date.now()}-002`,\n      schemaName: 'TravelSafe Standard',\n      policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/standard.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/standard.pdf',\n      currency: 'EUR',\n      ipt: 22.75\n    }, {\n      id: 'terracotta-premium',\n      name: 'Terracotta TravelSafe Premium',\n      type: 'premium',\n      price: Math.round((basePrice + days * dailyRate) * 1.8 * formData.numberOfTravelers * tripMultiplier),\n      coverage: {\n        medical: formData.tripType === 'annual' ? '€10,000,000' : '€10,000,000',\n        baggage: '€5,000',\n        cancellation: '€10,000',\n        activities: ['All activities', 'Extreme sports', 'Winter sports']\n      },\n      features: ['Maximum Medical Coverage', 'Comprehensive Trip Protection', 'Premium Baggage Coverage', 'All Sports & Activities', '24/7 VIP Assistance', 'Travel Delay & Missed Connections', 'Personal Liability Coverage', 'Emergency Cash Advance'],\n      // Terracotta-specific fields (simulated)\n      terracottaQuoteId: `TC-${Date.now()}-003`,\n      schemaName: 'TravelSafe Premium',\n      policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n      summaryOfCoverUrl: 'https://terracotta.example.com/summary/premium.pdf',\n      policyWordingUrl: 'https://terracotta.example.com/wording/premium.pdf',\n      currency: 'EUR',\n      ipt: 35.00\n    }];\n    return options;\n  };\n\n  // Custom Date Picker Component\n  const CustomDatePicker = ({\n    id,\n    value,\n    onChange,\n    placeholder,\n    required,\n    minDate\n  }) => {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentDate, setCurrentDate] = useState(() => {\n      // Initialize with selected date if available, otherwise current date\n      return value ? new Date(value) : new Date();\n    });\n    const pickerRef = useRef(null);\n    useEffect(() => {\n      const handleClickOutside = event => {\n        if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n      };\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n      }\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [isOpen]);\n\n    // Update current date when value changes to show the correct month\n    useEffect(() => {\n      if (value) {\n        setCurrentDate(new Date(value));\n      }\n    }, [value]);\n\n    // Helper function to check if a date is valid (not in past and not before minDate)\n    const isDateValid = date => {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n\n      // Reset the input date to start of day for accurate comparison\n      const inputDate = new Date(date);\n      inputDate.setHours(0, 0, 0, 0);\n\n      // Check if date is in the past\n      if (inputDate < today) {\n        return false;\n      }\n\n      // Check if date is before minimum date\n      if (minDate) {\n        const minDateObj = new Date(minDate);\n        minDateObj.setHours(0, 0, 0, 0);\n        if (inputDate < minDateObj) {\n          return false;\n        }\n      }\n      return true;\n    };\n    const generateCalendar = () => {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n      const days = [];\n\n      // Add empty cells for days before the first day of the month\n      for (let i = 0; i < startingDayOfWeek; i++) {\n        days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-day empty\"\n        }, `empty-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 19\n        }, this));\n      }\n\n      // Add days of the month\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = new Date(year, month, day);\n        // Create ISO string manually to avoid timezone issues\n        const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        const isSelected = value === dateString;\n        const isToday = new Date().toDateString() === date.toDateString();\n        const isValid = isDateValid(date);\n        days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `calendar-day ${isSelected ? 'selected' : ''} ${isToday ? 'today' : ''} ${!isValid ? 'disabled' : ''}`,\n          onClick: () => {\n            if (isValid) {\n              onChange(dateString);\n              setIsOpen(false);\n            }\n          },\n          style: {\n            cursor: isValid ? 'pointer' : 'not-allowed',\n            opacity: isValid ? 1 : 0.4\n          },\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1665,\n          columnNumber: 11\n        }, this));\n      }\n      return days;\n    };\n    const navigateMonth = direction => {\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n    };\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-date-picker\",\n      ref: pickerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: id,\n          value: value ? formatDateToEuropean(value) : '',\n          onChange: e => {\n            const formattedValue = formatDateInput(e.target.value);\n            const isoDate = formattedValue.length === 10 ? convertToISO(formattedValue) : '';\n\n            // Validate that the date is valid (not in past and not before minDate)\n            if (isoDate) {\n              const inputDate = new Date(isoDate);\n              if (!isDateValid(inputDate)) {\n                // Don't update the value if it's an invalid date\n                return;\n              }\n            }\n            onChange(isoDate);\n          },\n          placeholder: placeholder,\n          title: minDate ? \"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\" : \"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\",\n          pattern: \"\\\\d{2}/\\\\d{2}/\\\\d{4}\",\n          maxLength: 10,\n          required: required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1699,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-icon clickable\",\n          onClick: () => setIsOpen(!isOpen),\n          title: \"Open calendar\",\n          children: \"\\uD83D\\uDCC5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1727,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1698,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"calendar-nav-btn\",\n            onClick: () => navigateMonth(-1),\n            children: \"\\u2039\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1739,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"calendar-month-year\",\n            children: [monthNames[currentDate.getMonth()], \" \", currentDate.getFullYear()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1746,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"calendar-nav-btn\",\n            onClick: () => navigateMonth(1),\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1749,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1738,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-weekdays\",\n          children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-weekday\",\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-days\",\n          children: generateCalendar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1762,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1737,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1697,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper function to find best matching country\n  _s(CustomDatePicker, \"Z9Sk5PjmSjivFMKzrLcRxEkOb18=\");\n  const findBestCountryMatch = input => {\n    if (!input || input.trim().length === 0 || allCountriesWithCategories.length === 0) {\n      return null;\n    }\n    const normalizedInput = input.trim().toLowerCase();\n\n    // Exact match (case-insensitive)\n    const exactMatch = allCountriesWithCategories.find(item => item.country.toLowerCase() === normalizedInput);\n    if (exactMatch) {\n      return {\n        country: exactMatch.country,\n        category: exactMatch.destination_category\n      };\n    }\n\n    // Starts with match\n    const startsWithMatch = allCountriesWithCategories.find(item => item.country.toLowerCase().startsWith(normalizedInput));\n    if (startsWithMatch) {\n      return {\n        country: startsWithMatch.country,\n        category: startsWithMatch.destination_category\n      };\n    }\n\n    // Contains match (find the one that starts closest to the beginning)\n    const containsMatches = allCountriesWithCategories.filter(item => item.country.toLowerCase().includes(normalizedInput)).sort((a, b) => {\n      const aIndex = a.country.toLowerCase().indexOf(normalizedInput);\n      const bIndex = b.country.toLowerCase().indexOf(normalizedInput);\n      return aIndex - bIndex;\n    });\n    if (containsMatches.length > 0) {\n      return {\n        country: containsMatches[0].country,\n        category: containsMatches[0].destination_category\n      };\n    }\n    return null;\n  };\n\n  // Handle destination input with autocomplete\n  const handleDestinationChange = value => {\n    setFormData(prev => ({\n      ...prev,\n      destination: value,\n      destinationCategory: '' // Reset category when input changes\n    }));\n\n    // Update suggestions\n    if (value.trim().length > 0) {\n      const suggestions = allCountriesWithCategories.filter(item => item.country.toLowerCase().includes(value.toLowerCase())).slice(0, 5).map(item => item.country);\n      setDestinationSuggestions(suggestions);\n      setShowDestinationSuggestions(suggestions.length > 0);\n    } else {\n      setDestinationSuggestions([]);\n      setShowDestinationSuggestions(false);\n    }\n  };\n\n  // Handle destination selection from autocomplete\n  const handleDestinationSelect = country => {\n    const match = allCountriesWithCategories.find(item => item.country === country);\n    if (match) {\n      setFormData(prev => ({\n        ...prev,\n        destination: match.country,\n        destinationCategory: match.destination_category\n      }));\n      setDestinationSuggestions([]);\n      setShowDestinationSuggestions(false);\n    }\n  };\n\n  // Auto-match when user blurs the input field\n  const handleDestinationBlur = () => {\n    setTimeout(() => {\n      setShowDestinationSuggestions(false);\n      if (formData.destination.trim().length > 0) {\n        const match = findBestCountryMatch(formData.destination);\n        if (match) {\n          setFormData(prev => ({\n            ...prev,\n            destination: match.country,\n            destinationCategory: match.category\n          }));\n        }\n      }\n    }, 200); // Small delay to allow click on suggestion\n  };\n\n  // Handle expiry date validation\n  const handleExpiryDateChange = value => {\n    // Remove all non-digits\n    let digitsOnly = value.replace(/\\D/g, '');\n\n    // Limit to 6 digits (MMYYYY)\n    if (digitsOnly.length > 6) {\n      digitsOnly = digitsOnly.substring(0, 6);\n    }\n\n    // Format as MM / YYYY\n    let formattedValue = digitsOnly;\n    if (digitsOnly.length >= 2) {\n      const month = digitsOnly.substring(0, 2);\n      const year = digitsOnly.substring(2, 6);\n      formattedValue = month + (year ? ' / ' + year : '');\n    }\n\n    // Validate if we have complete date\n    if (digitsOnly.length >= 4) {\n      const month = parseInt(digitsOnly.substring(0, 2));\n      const year = parseInt(digitsOnly.substring(2, 6));\n      const currentYear = new Date().getFullYear();\n      const currentMonth = new Date().getMonth() + 1; // getMonth() returns 0-11\n\n      // Validate month (1-12)\n      if (month < 1 || month > 12) {\n        setExpiryDateError('Month must be between 01 and 12');\n      }\n      // Validate year (must be current year or future)\n      else if (year < currentYear) {\n        setExpiryDateError(`Year must be ${currentYear} or later`);\n      }\n      // If same year, check month is not in the past\n      else if (year === currentYear && month < currentMonth) {\n        setExpiryDateError(`This expiry date has already passed`);\n      }\n      // If incomplete year but valid so far, show no error yet\n      else if (digitsOnly.length < 6) {\n        setExpiryDateError('');\n      }\n      // Valid date\n      else {\n        setExpiryDateError('');\n      }\n    } else {\n      // Clear error if date is incomplete\n      setExpiryDateError('');\n    }\n    handleInputChange('expiryDate', formattedValue);\n  };\n  const handleInputChange = (field, value) => {\n    setFormData(prev => {\n      const newData = {\n        ...prev,\n        [field]: value\n      };\n\n      // CVV validation - only allow 3 digits\n      if (field === 'cvv') {\n        const cvvValue = value.toString();\n        // Only allow digits and limit to 3 characters\n        const digitsOnly = cvvValue.replace(/\\D/g, '');\n        if (digitsOnly.length <= 3) {\n          newData[field] = digitsOnly;\n        } else {\n          // If more than 3 digits, keep the first 3\n          newData[field] = digitsOnly.substring(0, 3);\n        }\n      }\n\n      // If start date is changed, clear end date if it's now invalid\n      if (field === 'startDate' && value && prev.endDate) {\n        const startDate = new Date(value);\n        const endDate = new Date(prev.endDate);\n        startDate.setDate(startDate.getDate() + 1); // Add 1 day to start date\n\n        // If end date is before or equal to start date, clear it\n        if (endDate <= startDate) {\n          newData.endDate = '';\n        }\n      }\n      return newData;\n    });\n  };\n  const handleTravelerChange = (index, field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      travelers: prev.travelers.map((traveler, i) => i === index ? {\n        ...traveler,\n        [field]: value\n      } : traveler)\n    }));\n  };\n  const handleNumberOfTravelersChange = count => {\n    setFormData(prev => {\n      const travelers = [...prev.travelers];\n      if (count > travelers.length) {\n        // Add new travelers\n        for (let i = travelers.length; i < count; i++) {\n          travelers.push({\n            firstName: '',\n            lastName: '',\n            age: '',\n            email: '',\n            phone: '',\n            vaxId: '',\n            nationality: ''\n          });\n        }\n      } else if (count < travelers.length) {\n        // Remove travelers\n        travelers.splice(count);\n      }\n      return {\n        ...prev,\n        numberOfTravelers: count,\n        travelers\n      };\n    });\n  };\n  const handleBillingAddressChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      billingAddress: {\n        ...prev.billingAddress,\n        [field]: value\n      }\n    }));\n  };\n\n  // Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\n  const convertToISO = ddmmyyyy => {\n    if (!ddmmyyyy || ddmmyyyy.length !== 10) return '';\n    const [day, month, year] = ddmmyyyy.split('/');\n    // Create date in local timezone to avoid timezone issues\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n    return date.toISOString().split('T')[0];\n  };\n\n  // Helper function to format input as DD/MM/YYYY\n  const formatDateInput = value => {\n    // Remove all non-digits\n    const digits = value.replace(/\\D/g, '');\n\n    // Format as DD/MM/YYYY\n    if (digits.length >= 8) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4, 8)}`;\n    } else if (digits.length >= 4) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4)}`;\n    } else if (digits.length >= 2) {\n      return `${digits.slice(0, 2)}/${digits.slice(2)}`;\n    }\n    return digits;\n  };\n  const fetchGeneralConditions = async () => {\n    var _formData$selectedQuo11;\n    if ((_formData$selectedQuo11 = formData.selectedQuote) !== null && _formData$selectedQuo11 !== void 0 && _formData$selectedQuo11.terracottaQuoteId) {\n      try {\n        console.log('🔄 Fetching general conditions (screening questions) for QuoteID:', formData.selectedQuote.terracottaQuoteId);\n        const screeningResponse = await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);\n        console.log('📥 General Conditions Response:', screeningResponse);\n        if (screeningResponse.screeningQuestions && screeningResponse.screeningQuestions.length > 0) {\n          setGeneralConditionsData(screeningResponse.screeningQuestions);\n          console.log('✅ General conditions loaded from API:', screeningResponse.screeningQuestions);\n          setShowGeneralConditions(true);\n        } else {\n          console.warn('⚠️ No general conditions in API response');\n          setGeneralConditionsData([]);\n          setShowGeneralConditions(true);\n        }\n      } catch (error) {\n        console.error('❌ Error fetching general conditions:', error);\n        // Show empty popup on error\n        setGeneralConditionsData([]);\n        setShowGeneralConditions(true);\n      }\n    }\n  };\n  const handleTermsAcceptance = checked => {\n    setTermsAccepted(checked);\n    if (checked && screeningQuestions.length > 0) {\n      // When checkbox is checked, automatically answer \"yes\" to all screening questions (yesAction)\n      const allYesAnswers = {};\n      screeningQuestions.forEach(question => {\n        allYesAnswers[question.questionNumber] = 'yes';\n      });\n      setScreeningAnswers(allYesAnswers);\n      console.log('✅ Terms accepted - All screening questions answered as \"Yes\" (yesAction triggered)');\n    } else if (!checked) {\n      // When unchecked, clear the screening answers\n      setScreeningAnswers({});\n      console.log('❌ Terms not accepted - Screening answers cleared');\n    }\n  };\n  const nextPhase = async () => {\n    if (currentPhase === 1) {\n      // Generate quotes when moving from phase 1 to 2\n      try {\n        console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');\n        console.log('📋 Current Form Data:', JSON.stringify(formData, null, 2));\n        const options = await generateQuoteOptions();\n        console.log('✅ Quote options received:', options);\n        console.log('📊 Number of quotes:', options.length);\n        setQuoteOptions(options);\n\n        // Automatically pre-select the Essential plan\n        const essentialPlan = options.find(option => {\n          var _option$name, _option$policytypeNam;\n          return ((_option$name = option.name) === null || _option$name === void 0 ? void 0 : _option$name.toLowerCase().includes('essential')) || ((_option$policytypeNam = option.policytypeName) === null || _option$policytypeNam === void 0 ? void 0 : _option$policytypeNam.toLowerCase().includes('essential'));\n        });\n        if (essentialPlan) {\n          console.log('✅ Auto-selected Essential plan:', essentialPlan);\n          setFormData(prev => ({\n            ...prev,\n            selectedQuote: essentialPlan\n          }));\n        } else {\n          console.log('⚠️ No Essential plan found, selecting first available quote');\n          if (options.length > 0) {\n            setFormData(prev => ({\n              ...prev,\n              selectedQuote: options[0]\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('❌ CRITICAL ERROR generating quotes:', error);\n        console.error('Error details:', error instanceof Error ? error.message : String(error));\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n        setQuoteError('Failed to generate quotes. Please try again.');\n        return; // Don't proceed to next phase if quotes failed\n      }\n    }\n    if (currentPhase < 6) {\n      setCurrentPhase(prev => prev + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  const prevPhase = () => {\n    if (currentPhase > 1) {\n      setCurrentPhase(prev => prev - 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  const selectQuote = quote => {\n    setFormData(prev => ({\n      ...prev,\n      selectedQuote: quote\n    }));\n  };\n  const addAdditionalPolicy = async policy => {\n    // Prevent multiple simultaneous requests\n    if (processingAddonId) {\n      return;\n    }\n    try {\n      var _formData$selectedQuo12, _formData$billingAddr, _formData$billingAddr2, _formData$travelers$, _formData$travelers$2;\n      setProcessingAddonId(policy.id);\n\n      // Check if quoteID is available\n      if (!((_formData$selectedQuo12 = formData.selectedQuote) !== null && _formData$selectedQuo12 !== void 0 && _formData$selectedQuo12.terracottaQuoteId)) {\n        alert('Error: No quote selected. Please select a quote first.');\n        return;\n      }\n\n      // Build comma-separated list of alteration IDs (existing + new one)\n      const existingAlterationIds = formData.additionalPolicies.map(p => p.alterationId);\n      const allAlterationIds = [...existingAlterationIds, policy.alterationId].join(',');\n\n      // Convert travelers to Terracotta format\n      const travelers = formData.travelers.map((traveler, index) => {\n        const age = traveler.dateOfBirth ? calculateAgeFromDOB(traveler.dateOfBirth) : parseInt(traveler.age) || 25;\n        const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n        return {\n          TravellerNumber: index + 1,\n          Title: traveler.title || 'Mr',\n          FirstName: traveler.firstName || 'Customer',\n          LastName: traveler.lastName || 'Name',\n          DateOfBirth: formatDateForTerracotta(dateOfBirth),\n          Age: age,\n          TitleID: getTitleID(traveler.title || 'Mr'),\n          AlterationID: '' // Empty for individual traveler alterations\n        };\n      });\n\n      // Build contact details\n      const contactDetails = {\n        Address: ((_formData$billingAddr = formData.billingAddress) === null || _formData$billingAddr === void 0 ? void 0 : _formData$billingAddr.street) || '123 Main Street',\n        Postcode: ((_formData$billingAddr2 = formData.billingAddress) === null || _formData$billingAddr2 === void 0 ? void 0 : _formData$billingAddr2.postalCode) || '12345',\n        Email: ((_formData$travelers$ = formData.travelers[0]) === null || _formData$travelers$ === void 0 ? void 0 : _formData$travelers$.email) || 'customer@example.com',\n        Telephone: ((_formData$travelers$2 = formData.travelers[0]) === null || _formData$travelers$2 === void 0 ? void 0 : _formData$travelers$2.phone) || '+302101234567'\n      };\n\n      // Build SOAP request\n      const alterationsRequest = {\n        userID: '4072',\n        userCode: '111427',\n        quoteID: formData.selectedQuote.terracottaQuoteId,\n        specificQuoteDetails: {\n          AlterationID: allAlterationIds,\n          Travellers: travelers,\n          ContactDetails: contactDetails\n        }\n      };\n\n      // Call SOAP service\n      const response = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n\n      // Extract the updated price from the response\n      if (response.quoteResults && response.quoteResults.length > 0) {\n        const updatedQuote = response.quoteResults[0];\n        const newGrossPrice = updatedQuote.GrossPrice;\n\n        // Store the total GrossPrice (this is the complete price including base + all addons)\n        setTotalGrossPriceWithAddons(newGrossPrice);\n\n        // Add the policy to state (price will be calculated from total)\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      } else {\n        // Still add the addon but with 0 price\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      }\n    } catch (error) {\n      console.error('Error adding addon with alterations:', error);\n      alert(`Error adding addon: ${error instanceof Error ? error.message : 'Unknown error'}. Please try again.`);\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n\n  // Helper functions for date/age calculations\n  const calculateAgeFromDOB = dob => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    return Math.max(0, age);\n  };\n  const calculateDOBFromAge = age => {\n    const currentYear = new Date().getFullYear();\n    const birthYear = currentYear - age;\n    return `${birthYear}/05/20`; // Use May 20 as default date\n  };\n  const formatDateForTerracotta = dateString => {\n    if (!dateString) return '';\n    // Handle different formats\n    if (dateString.includes('/')) {\n      const parts = dateString.split('/');\n      if (parts.length === 3 && parts[0].length === 4) {\n        return dateString; // Already in YYYY/MM/DD format\n      } else if (parts.length === 3) {\n        // Convert DD/MM/YYYY to YYYY/MM/DD\n        return `${parts[2]}/${parts[1]}/${parts[0]}`;\n      }\n    }\n    if (dateString.includes('-')) {\n      return dateString.replace(/-/g, '/');\n    }\n    return dateString;\n  };\n  const getTitleID = title => {\n    const titleMap = {\n      'Mr': 1,\n      'Mrs': 2,\n      'Miss': 3,\n      'Ms': 4,\n      'Dr': 5,\n      'Prof': 6\n    };\n    return titleMap[title] || 1;\n  };\n  const removeAdditionalPolicy = async policyId => {\n    try {\n      var _formData$selectedQuo13;\n      setProcessingAddonId(policyId);\n\n      // Remove the addon from the list first\n      const remainingAddons = formData.additionalPolicies.filter(p => p.id !== policyId);\n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: remainingAddons\n      }));\n\n      // If no addons remaining, reset to base price\n      if (remainingAddons.length === 0) {\n        setTotalGrossPriceWithAddons(null);\n        setProcessingAddonId(null);\n        return;\n      }\n\n      // If there are still addons, call SOAP to get updated price\n      if ((_formData$selectedQuo13 = formData.selectedQuote) !== null && _formData$selectedQuo13 !== void 0 && _formData$selectedQuo13.terracottaQuoteId) {\n        var _formData$billingAddr3, _formData$billingAddr4, _formData$travelers$3, _formData$travelers$4;\n        // Build comma-separated list of remaining alteration IDs\n        const remainingAlterationIds = remainingAddons.map(p => p.alterationId).join(',');\n\n        // Convert travelers to Terracotta format\n        const travelers = formData.travelers.map((traveler, index) => {\n          const age = traveler.dateOfBirth ? calculateAgeFromDOB(traveler.dateOfBirth) : parseInt(traveler.age) || 25;\n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          return {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || 'Customer',\n            LastName: traveler.lastName || 'Name',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            AlterationID: ''\n          };\n        });\n\n        // Build contact details\n        const contactDetails = {\n          Address: ((_formData$billingAddr3 = formData.billingAddress) === null || _formData$billingAddr3 === void 0 ? void 0 : _formData$billingAddr3.street) || '123 Main Street',\n          Postcode: ((_formData$billingAddr4 = formData.billingAddress) === null || _formData$billingAddr4 === void 0 ? void 0 : _formData$billingAddr4.postalCode) || '12345',\n          Email: ((_formData$travelers$3 = formData.travelers[0]) === null || _formData$travelers$3 === void 0 ? void 0 : _formData$travelers$3.email) || 'customer@example.com',\n          Telephone: ((_formData$travelers$4 = formData.travelers[0]) === null || _formData$travelers$4 === void 0 ? void 0 : _formData$travelers$4.phone) || '+302101234567'\n        };\n\n        // Build SOAP request\n        const alterationsRequest = {\n          userID: '4072',\n          userCode: '111427',\n          quoteID: formData.selectedQuote.terracottaQuoteId,\n          specificQuoteDetails: {\n            AlterationID: remainingAlterationIds,\n            Travellers: travelers,\n            ContactDetails: contactDetails\n          }\n        };\n\n        // Call SOAP service\n        const response = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n\n        // Update the GrossPrice\n        if (response.quoteResults && response.quoteResults.length > 0) {\n          const updatedQuote = response.quoteResults[0];\n          const newGrossPrice = updatedQuote.GrossPrice;\n          setTotalGrossPriceWithAddons(newGrossPrice);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating price after addon removal:', error);\n      // Keep the addon removed even if SOAP call fails\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n  const calculateTotalPrice = () => {\n    var _formData$selectedQuo14, _formData$selectedQuo15;\n    // If we have a GrossPrice from SOAP alterations, use that\n    if (totalGrossPriceWithAddons !== null && formData.additionalPolicies.length > 0) {\n      return totalGrossPriceWithAddons;\n    }\n\n    // Otherwise, use the base price + individual addon prices (fallback)\n    const basePrice = typeof ((_formData$selectedQuo14 = formData.selectedQuote) === null || _formData$selectedQuo14 === void 0 ? void 0 : _formData$selectedQuo14.price) === 'number' ? formData.selectedQuote.price : parseFloat(((_formData$selectedQuo15 = formData.selectedQuote) === null || _formData$selectedQuo15 === void 0 ? void 0 : _formData$selectedQuo15.price) || '0');\n    const additionalPrice = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n    return basePrice + additionalPrice;\n  };\n  const generatePolicyPDF = async () => {\n    if (!policyNumber) {\n      console.error('⚠️ Cannot generate PDF: No policy number available');\n      alert('Policy number not available. Please contact support.');\n      return;\n    }\n    console.log('📄 Generating PDF for Policy ID:', policyNumber);\n    await generatePDF(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  };\n  const downloadPolicyPDF = () => {\n    generatePolicyPDF();\n  };\n  const processPayment = async () => {\n    var _formData$travelers$5;\n    // Validate that terms are accepted before processing payment\n    if (!termsAccepted) {\n      alert('Please accept the Privacy Policy, Terms and Conditions and General conditions to proceed with payment.');\n      return;\n    }\n\n    // Validate email address for policy holder (Traveler 1)\n    const policyHolderEmail = (_formData$travelers$5 = formData.travelers[0]) === null || _formData$travelers$5 === void 0 ? void 0 : _formData$travelers$5.email;\n    if (!policyHolderEmail || policyHolderEmail.trim() === '') {\n      alert('❌ Policy holder email is required.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) before proceeding with payment.');\n      return;\n    }\n\n    // Email validation regex pattern (RFC 5322 compliant)\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(policyHolderEmail.trim())) {\n      alert(`❌ Invalid Email Address\\n\\nThe email address \"${policyHolderEmail}\" is not valid.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) in the format: example@domain.com`);\n      return;\n    }\n\n    // Validate emails for all other travelers if provided\n    for (let i = 0; i < formData.travelers.length; i++) {\n      const traveler = formData.travelers[i];\n      if (traveler.email && traveler.email.trim() !== '') {\n        if (!emailRegex.test(traveler.email.trim())) {\n          alert(`❌ Invalid Email Address\\n\\nThe email address \"${traveler.email}\" for Traveler ${i + 1} (${traveler.firstName} ${traveler.lastName}) is not valid.\\n\\nPlease enter a valid email address in the format: example@domain.com`);\n          return;\n        }\n      }\n    }\n    console.log('✅ Email validation passed for all travelers');\n\n    // Validate VAT ID for Greece (Traveler 1/Policy Holder)\n    if (formData.countryOfResidence === 'Greece') {\n      var _formData$travelers$6;\n      const vatId = (_formData$travelers$6 = formData.travelers[0]) === null || _formData$travelers$6 === void 0 ? void 0 : _formData$travelers$6.vaxId;\n      if (!vatId || vatId.trim() === '') {\n        alert('❌ VAT ID Required\\n\\nFor residents of Greece, VAT ID is mandatory for the policy holder.\\n\\nPlease enter the VAT ID for Traveler 1 (Policy Holder) before proceeding with payment.');\n        return;\n      }\n      console.log('✅ VAT ID validation passed for Greece:', vatId);\n    } else {\n      console.log('✅ VAT ID validation skipped (not Greece)');\n    }\n    setIsProcessing(true);\n    try {\n      // First save the quote to database\n      // Add TravellerNumber to each traveler (index + 1)\n      const travelersWithNumber = formData.travelers.map((traveler, index) => ({\n        ...traveler,\n        travellerNumber: index + 1\n      }));\n      const quoteData = {\n        destination: formData.destinationCategory || formData.destination,\n        // Use destinationCategory (e.g., \"Europe\", \"Worldwide\") instead of country name\n        countryOfResidence: formData.countryOfResidence,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        tripType: formData.tripType,\n        numberOfTravelers: formData.numberOfTravelers,\n        travelers: travelersWithNumber,\n        selectedQuote: formData.selectedQuote,\n        additionalPolicies: formData.additionalPolicies,\n        totalAmount: calculateTotalPrice()\n      };\n\n      // console.log('Saving quote to database...', quoteData);\n      // console.log('Quote data JSON string:', JSON.stringify(quoteData));\n      const quoteResponse = await createQuote(quoteData);\n      if (quoteResponse.status === 'success' && quoteResponse.data) {\n        var _formData$travelers$7, _formData$travelers$8, _formData$selectedQuo16, _formData$selectedQuo21;\n        const quoteId = quoteResponse.data.quoteId;\n\n        // Convert screening answers to Terracotta format\n        const terracottaScreeningAnswers = Object.entries(screeningAnswers).map(([questionNumber, answer]) => ({\n          questionNumber: parseInt(questionNumber),\n          answer: answer\n        }));\n\n        // Build travelers array and contact details with REAL data from payment step\n        console.log('🔍 DEBUG: formData.travelers at payment time:', JSON.stringify(formData.travelers, null, 2));\n        console.log('🔍 DEBUG: formData.billingAddress at payment time:', JSON.stringify(formData.billingAddress, null, 2));\n\n        // CRITICAL: Ensure Traveler 1 (policy holder) is always first in the array\n        // Terracotta assigns policy holder based on the order of travelers in the SOAP request\n        // The first traveler in the array becomes the policy holder\n        const sortedTravelers = [...formData.travelers];\n        console.log('🔍 DEBUG: Original travelers order:', sortedTravelers.map((t, i) => `${i + 1}. ${t.firstName} ${t.lastName}`));\n\n        // Ensure the policy holder (first traveler) is always at index 0\n        if (sortedTravelers.length > 0) {\n          console.log('✅ Policy holder (Traveler 1) will be:', `${sortedTravelers[0].firstName} ${sortedTravelers[0].lastName}`);\n        }\n        const travelers = sortedTravelers.map((traveler, index) => {\n          console.log(`🔍 DEBUG: Processing traveler ${index + 1}:`, {\n            firstName: traveler.firstName,\n            lastName: traveler.lastName,\n            age: traveler.age,\n            dateOfBirth: traveler.dateOfBirth,\n            title: traveler.title,\n            email: traveler.email,\n            phone: traveler.phone\n          });\n          const age = traveler.dateOfBirth ? calculateAgeFromDOB(traveler.dateOfBirth) : parseInt(traveler.age) || 30;\n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          const travelerData = {\n            TravellerNumber: index + 1,\n            // This ensures Traveler 1 gets TravellerNumber: 1\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || '',\n            LastName: traveler.lastName || '',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            AgebandID: getAgebandID(age),\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            minAge: age,\n            maxAge: age,\n            ScreeningInformation: null\n          };\n          console.log(`✅ Built traveler ${index + 1} data:`, travelerData);\n          return travelerData;\n        });\n\n        // Build contact details with REAL data from payment step\n        const contactDetails = {\n          Address: `${formData.billingAddress.street}, ${formData.billingAddress.city}, ${formData.billingAddress.country}`,\n          Postcode: formData.billingAddress.postalCode || '',\n          Email: ((_formData$travelers$7 = formData.travelers[0]) === null || _formData$travelers$7 === void 0 ? void 0 : _formData$travelers$7.email) || '',\n          Telephone: ((_formData$travelers$8 = formData.travelers[0]) === null || _formData$travelers$8 === void 0 ? void 0 : _formData$travelers$8.phone) || ''\n        };\n        console.log('✅ Using REAL Travelers:', travelers);\n        console.log('✅ Using REAL Contact Details:', contactDetails);\n\n        // Re-fetch quote with REAL traveler data using ProvideQuotation\n        if ((_formData$selectedQuo16 = formData.selectedQuote) !== null && _formData$selectedQuo16 !== void 0 && _formData$selectedQuo16.terracottaQuoteId) {\n          try {\n            console.log('🔄 Re-fetching quote with REAL traveler data using ProvideQuotation...');\n\n            // Build quote request with REAL traveler and contact data\n            const quoteRequestWithRealData = {\n              userID: '4072',\n              userCode: '111427',\n              quoteDetails: {\n                ResidenceID: getResidenceID(formData.countryOfResidence),\n                TypePolicyID: getTypePolicyID(formData.tripType, availablePolicyTypes),\n                TypePackageID: '1',\n                Destination: formData.destination || 'Europe',\n                StartDate: formatDateForTerracotta(formData.startDate),\n                EndDate: formatDateForTerracotta(formData.endDate),\n                Travellers: travelers,\n                // REAL traveler data\n                ContactDetails: contactDetails,\n                // REAL contact data\n                includeAnnualQuotes: 0,\n                // Always 0 - TypePolicyID determines if it's annual\n                includeUpsell: 0,\n                currencyID: 1,\n                schemaIDFilter: '717'\n              }\n            };\n            console.log('📤 ProvideQuotation with REAL data:', quoteRequestWithRealData);\n            const updatedQuoteResponse = await terracottaService.provideQuotation(quoteRequestWithRealData);\n            console.log('📥 Updated quote response:', updatedQuoteResponse);\n\n            // ✅ UPDATE THE QUOTE ID WITH THE NEW ONE THAT HAS REAL DATA\n            if (updatedQuoteResponse.quoteResults && updatedQuoteResponse.quoteResults.length > 0) {\n              const selectedPlan = updatedQuoteResponse.quoteResults.find(q => {\n                var _formData$selectedQuo17, _formData$selectedQuo18;\n                return q.policytypeName === ((_formData$selectedQuo17 = formData.selectedQuote) === null || _formData$selectedQuo17 === void 0 ? void 0 : _formData$selectedQuo17.name) || q.GrossPrice === ((_formData$selectedQuo18 = formData.selectedQuote) === null || _formData$selectedQuo18 === void 0 ? void 0 : _formData$selectedQuo18.price);\n              }) || updatedQuoteResponse.quoteResults[0];\n              if (selectedPlan && selectedPlan.QuoteID) {\n                console.log('🔄 Updating quoteID from', formData.selectedQuote.terracottaQuoteId, 'to', selectedPlan.QuoteID);\n                formData.selectedQuote.terracottaQuoteId = selectedPlan.QuoteID;\n                console.log('✅ Using NEW QuoteID with REAL traveler data:', selectedPlan.QuoteID);\n              }\n            }\n\n            // If add-ons were selected, re-fetch with alterations using REAL data\n            if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n              console.log('🔄 Re-fetching quote with add-ons using ProvideQuotationWithAlterations...');\n              const alterationIds = formData.additionalPolicies.map(p => p.alterationId).join(',');\n              const alterationsRequestWithRealData = {\n                userID: '4072',\n                userCode: '111427',\n                quoteID: formData.selectedQuote.terracottaQuoteId || '',\n                specificQuoteDetails: {\n                  AlterationID: alterationIds,\n                  Travellers: travelers,\n                  // REAL traveler data\n                  ContactDetails: contactDetails // REAL contact data\n                }\n              };\n              console.log('📤 ProvideQuotationWithAlterations with REAL data:', alterationsRequestWithRealData);\n              const updatedAlterationsResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequestWithRealData);\n              console.log('📥 Updated alterations response:', updatedAlterationsResponse);\n\n              // ✅ UPDATE THE QUOTE ID WITH THE NEW ONE FROM ALTERATIONS\n              if (updatedAlterationsResponse.quoteResults && updatedAlterationsResponse.quoteResults.length > 0) {\n                const selectedPlan = updatedAlterationsResponse.quoteResults.find(q => {\n                  var _formData$selectedQuo19, _formData$selectedQuo20;\n                  return q.policytypeName === ((_formData$selectedQuo19 = formData.selectedQuote) === null || _formData$selectedQuo19 === void 0 ? void 0 : _formData$selectedQuo19.name) || q.GrossPrice === ((_formData$selectedQuo20 = formData.selectedQuote) === null || _formData$selectedQuo20 === void 0 ? void 0 : _formData$selectedQuo20.price);\n                }) || updatedAlterationsResponse.quoteResults[0];\n                if (selectedPlan && selectedPlan.QuoteID) {\n                  console.log('🔄 Updating quoteID after alterations from', formData.selectedQuote.terracottaQuoteId, 'to', selectedPlan.QuoteID);\n                  formData.selectedQuote.terracottaQuoteId = selectedPlan.QuoteID;\n                  console.log('✅ Using NEW QuoteID with REAL data + alterations:', selectedPlan.QuoteID);\n                }\n              }\n            }\n          } catch (updateError) {\n            console.warn('⚠️ Could not update quote with real data, continuing with existing quote:', updateError);\n            console.error('⚠️ This may result in policy using dummy data from initial quote request');\n          }\n        }\n\n        // Save policy details with Terracotta\n        if ((_formData$selectedQuo21 = formData.selectedQuote) !== null && _formData$selectedQuo21 !== void 0 && _formData$selectedQuo21.terracottaQuoteId) {\n          try {\n            console.log('💾 ========================================');\n            console.log('💾 Saving policy details with Terracotta...');\n            console.log('💾 ========================================');\n            console.log('📋 QuoteID being used for SavePolicyDetails:', formData.selectedQuote.terracottaQuoteId);\n            console.log('📋 (This should be the NEW quoteID with REAL traveler data, not the original dummy data quoteID)');\n            console.log('📋 Screening Answers:', terracottaScreeningAnswers);\n            console.log('👥 Traveler Data (REAL from Payment Step):', formData.travelers);\n            console.log('🏠 Billing Address (REAL from Payment Step):', formData.billingAddress);\n\n            // Log each traveler's details clearly\n            console.log('📝 SavePolicyDetails - Travelers being sent:');\n            travelers.forEach((t, idx) => {\n              console.log(`  Traveler ${idx + 1}: ${t.Title} ${t.FirstName} ${t.LastName}, Age: ${t.Age}, DOB: ${t.DateOfBirth}, AgebandID: ${t.AgebandID}, TitleID: ${t.TitleID}`);\n            });\n            console.log('📝 SavePolicyDetails - Contact Details being sent:', contactDetails);\n            const savePolicyResponse = await terracottaService.savePolicyDetails({\n              userID: '4072',\n              userCode: '111427',\n              quoteID: formData.selectedQuote.terracottaQuoteId,\n              screeningQuestionAnswers: terracottaScreeningAnswers,\n              medicalScreeningReference: 'string',\n              useDefaultAnswers: 1,\n              travelers: travelers,\n              contactDetails: contactDetails\n            });\n            console.log('✅ SavePolicyDetails response:', savePolicyResponse);\n            console.log('📋 Policy Saved Status:', savePolicyResponse.policySaved);\n            console.log('📋 Policy ID:', savePolicyResponse.policyID);\n            console.log('📄 Certificate URL:', savePolicyResponse.certificate);\n            console.log('📄 Policy Wording URL:', savePolicyResponse.PW);\n            console.log('📄 Summary of Cover URL:', savePolicyResponse.SI);\n\n            // Handle both \"Yes\" and \"true\" formats for policySaved\n            if (savePolicyResponse.policySaved === 'Yes' || savePolicyResponse.policySaved === 'true') {\n              if (!savePolicyResponse.policyID) {\n                console.error('⚠️ Warning: Policy saved but no Policy ID received!');\n                throw new Error('Policy saved but no Policy ID received from Terracotta');\n              }\n              console.log('✅ Policy saved successfully! Policy ID:', savePolicyResponse.policyID);\n              setPolicyNumber(savePolicyResponse.policyID);\n\n              // Store policy document URLs from SavePolicyDetails response\n              const documents = {\n                certificate: savePolicyResponse.certificate || '',\n                policyWording: savePolicyResponse.PW || '',\n                summaryOfCover: savePolicyResponse.SI || '',\n                keyFacts: savePolicyResponse.KF || '',\n                ipid: savePolicyResponse.IPID || ''\n              };\n              console.log('📄 Setting policy documents:', documents);\n              console.log('📄 SavePolicyDetails full response:', savePolicyResponse);\n              setPolicyDocuments(documents);\n\n              // Email Policy Documents to the policy holder\n              // VALIDATION: Only proceed if we have ALL required parameters\n              try {\n                var _formData$travelers$9;\n                console.log('📧 Validating parameters for EmailPolicyDocuments...');\n\n                // Extract required parameters\n                const policyHolderEmail = (_formData$travelers$9 = formData.travelers[0]) === null || _formData$travelers$9 === void 0 ? void 0 : _formData$travelers$9.email;\n                const policyID = savePolicyResponse.policyID;\n                const userID = '4072';\n                const userCode = '111427';\n\n                // Validation checks\n                const validationErrors = [];\n                if (!policyID || policyID.trim() === '') {\n                  validationErrors.push('Policy ID is missing or empty');\n                  console.error('❌ VALIDATION FAILED: Policy ID not received from SavePolicyDetails');\n                }\n                if (!policyHolderEmail || policyHolderEmail.trim() === '') {\n                  validationErrors.push('Policy holder email address is missing');\n                  console.error('❌ VALIDATION FAILED: No email address for Traveler 1 (Policy Holder)');\n                }\n                if (!userID || userID.trim() === '') {\n                  validationErrors.push('User ID is missing');\n                  console.error('❌ VALIDATION FAILED: User ID not configured');\n                }\n                if (!userCode || userCode.trim() === '') {\n                  validationErrors.push('User Code is missing');\n                  console.error('❌ VALIDATION FAILED: User Code not configured');\n                }\n\n                // Log validation status\n                if (validationErrors.length > 0) {\n                  console.error('⚠️ EmailPolicyDocuments VALIDATION FAILED:');\n                  validationErrors.forEach((error, index) => {\n                    console.error(`   ${index + 1}. ${error}`);\n                  });\n                  console.error('⚠️ Skipping email sending. Policy is saved but documents will not be emailed automatically.');\n                  throw new Error(`Cannot send policy documents email: ${validationErrors.join(', ')}`);\n                }\n\n                // All validations passed - log parameters\n                console.log('✅ All parameters validated successfully:');\n                console.log('   📋 User ID:', userID);\n                console.log('   📋 User Code:', userCode);\n                console.log('   📋 Policy ID:', policyID);\n                console.log('   📧 Email Address:', policyHolderEmail);\n                console.log('📧 Proceeding to send EmailPolicyDocuments request...');\n\n                // Send EmailPolicyDocuments request\n                const emailResponse = await terracottaService.emailPolicyDocuments({\n                  userID: userID,\n                  userCode: userCode,\n                  policyID: policyID,\n                  emailAddress: policyHolderEmail\n                });\n                console.log('✅ EmailPolicyDocuments response:', emailResponse);\n                if (emailResponse.emailSent) {\n                  console.log('✅ Policy documents successfully emailed to:', policyHolderEmail);\n                  alert(`✅ Success! Policy documents have been sent to ${policyHolderEmail}`);\n                } else {\n                  // Log the response but don't show popup to user\n                  console.warn('⚠️ EmailPolicyDocuments response did not explicitly confirm success:', emailResponse.message);\n                  console.warn('⚠️ emailSent value:', emailResponse.emailSent);\n                  // No alert - assume success if no error was thrown\n                }\n              } catch (emailError) {\n                console.error('❌ Error sending policy documents email:', emailError);\n                console.error('⚠️ Continuing with payment process despite email error');\n\n                // Detailed error logging\n                if (emailError instanceof Error) {\n                  console.error('   Error message:', emailError.message);\n                  console.error('   Error stack:', emailError.stack);\n                }\n\n                // Don't throw - allow payment process to continue even if email fails\n                alert('Note: There was an issue sending the policy documents email, but your policy has been saved. Please contact support to receive your documents.');\n              }\n\n              // Debug: Check if documents are empty and log\n              if (!documents.certificate) {\n                console.warn('⚠️ Certificate URL not found in SavePolicyDetails response!');\n                console.warn('💡 This might be normal - certificate may need to be generated separately');\n              }\n              if (!documents.policyWording) {\n                console.warn('⚠️ Policy Wording URL not found in SavePolicyDetails response!');\n              }\n              if (!documents.summaryOfCover) {\n                console.warn('⚠️ Summary of Cover URL not found in SavePolicyDetails response!');\n              }\n              if (!documents.certificate && !documents.policyWording && !documents.summaryOfCover) {\n                console.warn('⚠️ No document URLs received from SavePolicyDetails response!');\n                console.warn('💡 Full SavePolicyDetails response:', JSON.stringify(savePolicyResponse, null, 2));\n              }\n\n              // Update database with Terracotta Policy ID and status\n              console.log('💾 Updating database with Terracotta Policy ID...');\n              const paymentData = {\n                quoteId: quoteId,\n                paymentMethod: formData.paymentMethod || 'card',\n                cardNumber: formData.cardNumber || '',\n                expiryDate: formData.expiryDate || '',\n                cvv: formData.cvv || '',\n                billingAddress: formData.billingAddress,\n                amount: calculateTotalPrice(),\n                termsAccepted: termsAccepted,\n                // Include terms acceptance status\n                policyNumber: savePolicyResponse.policyID // Include Terracotta Policy ID\n              };\n              console.log('💳 Updating quote in database with policy details...');\n              console.log('🔍 DEBUG: termsAccepted value being sent (Terracotta path):', termsAccepted);\n              console.log('🔍 DEBUG: termsAccepted type (Terracotta path):', typeof termsAccepted);\n              const paymentResponse = await apiProcessPayment(paymentData);\n              if (paymentResponse.status === 'success') {\n                console.log('✅ Database updated successfully with Policy ID:', savePolicyResponse.policyID);\n              } else {\n                console.warn('⚠️ Database update failed, but policy was saved in Terracotta');\n              }\n              setIsProcessing(false);\n              nextPhase(); // Move to documents phase\n              return;\n            } else {\n              console.error('❌ Policy save failed. Message:', savePolicyResponse.Message);\n              throw new Error(savePolicyResponse.Message || 'Failed to save policy with Terracotta');\n            }\n          } catch (terracottaError) {\n            console.error('❌ Terracotta policy save error:', terracottaError);\n            // Fall through to regular payment processing\n          }\n        }\n\n        // Fallback to regular payment processing if Terracotta fails\n        const paymentData = {\n          quoteId: quoteId,\n          paymentMethod: formData.paymentMethod,\n          cardNumber: formData.cardNumber || '',\n          expiryDate: formData.expiryDate || '',\n          cvv: formData.cvv || '',\n          billingAddress: formData.billingAddress,\n          amount: calculateTotalPrice(),\n          termsAccepted: termsAccepted,\n          // Include terms acceptance status\n          policyNumber: policyNumber || undefined // Include Terracotta Policy ID if available\n        };\n        console.log('💳 Processing payment with data:', {\n          ...paymentData,\n          cardNumber: '****',\n          cvv: '***'\n        });\n        console.log('🔍 DEBUG: termsAccepted value being sent:', termsAccepted);\n        console.log('🔍 DEBUG: termsAccepted type:', typeof termsAccepted);\n        const paymentResponse = await apiProcessPayment(paymentData);\n        if (paymentResponse.status === 'success') {\n          var _paymentResponse$data;\n          if ((_paymentResponse$data = paymentResponse.data) !== null && _paymentResponse$data !== void 0 && _paymentResponse$data.policyNumber) {\n            setPolicyNumber(paymentResponse.data.policyNumber);\n          }\n          setIsProcessing(false);\n          nextPhase(); // Move to documents phase\n        } else {\n          throw new Error(paymentResponse.message || 'Payment failed');\n        }\n      } else {\n        throw new Error(quoteResponse.message || 'Failed to save quote');\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      setIsProcessing(false);\n      alert('Payment processing failed. Please try again. Error: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  };\n  const isPhaseValid = phase => {\n    switch (phase) {\n      case 1:\n        return !!(formData.destination && formData.startDate && formData.endDate && formData.tripType && formData.countryOfResidence);\n      case 2:\n        return !!formData.selectedQuote;\n      case 3:\n        return true;\n      // Additional policies phase is always valid (optional)\n      case 4:\n        return true;\n      // Review phase is always valid\n      case 5:\n        // Validate all travelers have basic info\n        const travelersBasicValid = formData.travelers.every(t => !!(t.firstName && t.lastName && (t.age || t.dateOfBirth)));\n        // Validate first traveler (policy holder) has contact details\n        const policyHolderContactValid = !!(formData.travelers.length > 0 && formData.travelers[0].email && formData.travelers[0].phone);\n        const paymentValid = !!(formData.cardNumber && formData.expiryDate && formData.cvv && formData.billingAddress.street && formData.billingAddress.city && formData.billingAddress.postalCode && formData.billingAddress.country && !expiryDateError &&\n        // Ensure expiry date is valid\n        formData.expiryDate.length === 9 // Ensure complete date format (MM / YYYY)\n        );\n        return travelersBasicValid && policyHolderContactValid && paymentValid;\n      case 6:\n        return true;\n      // Documents phase is always valid\n      default:\n        return false;\n    }\n  };\n  const renderPhase1 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-gray-900 mb-6 text-center\",\n      children: \"Trip Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2910,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tripType\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: [\"Trip Type\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-500 ml-1\",\n            children: isLoadingPolicyTypeDestinations ? '(Loading...)' : `(${availablePolicyTypes.length} types available)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2916,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2914,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"tripType\",\n          value: formData.tripType,\n          onChange: e => handleInputChange('tripType', e.target.value),\n          required: true,\n          disabled: isLoadingPolicyTypeDestinations,\n          className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-gray-900\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: isLoadingPolicyTypeDestinations ? 'Loading trip types...' : 'Select trip type'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2928,\n            columnNumber: 13\n          }, this), availablePolicyTypes.map(policyType => {\n            // Map policy type names to trip type values\n            let tripTypeValue = 'single';\n            const name = policyType.TypePolicyName.toLowerCase();\n            if (name.includes('annual')) {\n              tripTypeValue = 'annual';\n            } else if (name.includes('comprehensive')) {\n              tripTypeValue = 'comprehensive';\n            } else if (name.includes('longstay') || name.includes('long stay')) {\n              tripTypeValue = 'longstay';\n            }\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tripTypeValue,\n              children: policyType.TypePolicyName\n            }, policyType.TypePolicyID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2944,\n              columnNumber: 17\n            }, this);\n          }), !isLoadingPolicyTypeDestinations && availablePolicyTypes.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"single\",\n              children: \"Regular Single Trip Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2952,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"annual\",\n              children: \"Annual Multi-Trip Travel Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2953,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"comprehensive\",\n              children: \"Comprehensive Single Trip Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2954,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"longstay\",\n              children: \"Long Stay Travel Insurance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2955,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2920,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2913,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countryOfResidence\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Country of Residence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2963,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"countryOfResidence\",\n            value: formData.countryOfResidence,\n            onChange: e => handleInputChange('countryOfResidence', e.target.value),\n            required: true,\n            disabled: isLoadingCountriesOfResidence,\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-gray-900\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: isLoadingCountriesOfResidence ? 'Loading countries...' : 'Select your country of residence'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2972,\n              columnNumber: 15\n            }, this), countriesOfResidence.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.country_name,\n              children: country.country_name\n            }, country.country_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2976,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2964,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2962,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2 relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2984,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"destination\",\n              value: formData.destination,\n              onChange: e => handleDestinationChange(e.target.value),\n              onBlur: handleDestinationBlur,\n              onFocus: () => {\n                if (formData.destination.trim().length > 0 && destinationSuggestions.length > 0) {\n                  setShowDestinationSuggestions(true);\n                }\n              },\n              placeholder: isLoadingCategories ? 'Loading countries...' : 'Enter country name (e.g., Greece, France, Thailand)',\n              required: true,\n              disabled: isLoadingCategories,\n              className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-gray-900\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2988,\n              columnNumber: 15\n            }, this), showDestinationSuggestions && destinationSuggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-auto\",\n              children: destinationSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => handleDestinationSelect(suggestion),\n                className: \"px-4 py-2 hover:bg-blue-50 cursor-pointer border-b border-gray-100 last:border-b-0\",\n                children: suggestion\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3007,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3005,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2987,\n            columnNumber: 13\n          }, this), formData.destinationCategory && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: formData.destinationCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3020,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3019,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2983,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2961,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: [\"Departure Date \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500\",\n              children: \"(DD/MM/YYYY)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3028,\n              columnNumber: 107\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3028,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomDatePicker, {\n            id: \"startDate\",\n            value: formData.startDate,\n            onChange: value => handleInputChange('startDate', value),\n            placeholder: \"DD/MM/YYYY\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3029,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3027,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: [\"Return Date \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-500\",\n              children: \"(DD/MM/YYYY)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3038,\n              columnNumber: 102\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3038,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomDatePicker, {\n            id: \"endDate\",\n            value: formData.endDate,\n            onChange: value => handleInputChange('endDate', value),\n            placeholder: \"DD/MM/YYYY\",\n            required: true,\n            minDate: formData.startDate ? (() => {\n              // Set minimum date to start date + 1 day\n              const startDate = new Date(formData.startDate);\n              startDate.setDate(startDate.getDate() + 1);\n              return startDate.toISOString().split('T')[0];\n            })() : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3039,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3037,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3026,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numberOfTravelers\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Number of Travelers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3056,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"numberOfTravelers\",\n          value: formData.numberOfTravelers,\n          onChange: e => handleNumberOfTravelersChange(parseInt(e.target.value)),\n          className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\",\n          children: [1, 2, 3, 4, 5, 6, 7, 8].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: [num, \" Traveler\", num > 1 ? 's' : '']\n          }, num, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3064,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3057,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3055,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2912,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2909,\n    columnNumber: 5\n  }, this);\n  const renderPhase2 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold text-gray-900 mb-2\",\n        children: \"Choose Your Insurance Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3075,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600\",\n        children: \"Select the coverage that best fits your travel needs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3078,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3074,\n      columnNumber: 7\n    }, this), isLoadingQuotes && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 border border-blue-200 rounded-lg p-6 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700\",\n        children: \"Loading insurance quotes from Terracotta...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3086,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3085,\n      columnNumber: 9\n    }, this), quoteError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-800 font-semibold\",\n        children: [\"\\u26A0\\uFE0F \", quoteError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3092,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-700 text-sm mt-1\",\n        children: \"Using fallback quotes for demonstration.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3093,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3091,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-center gap-5 mt-5 overflow-x-auto py-5 max-w-full\",\n      children: quoteOptions.length > 0 ? quoteOptions.map(option => {\n        var _formData$selectedQuo22, _formData$selectedQuo23, _formData$selectedQuo24;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bg-white rounded-lg p-6 cursor-pointer transition-all duration-300 relative min-w-[320px] max-w-[320px] flex-shrink-0 ${((_formData$selectedQuo22 = formData.selectedQuote) === null || _formData$selectedQuo22 === void 0 ? void 0 : _formData$selectedQuo22.id) === option.id ? 'border-2 border-blue-600 shadow-lg shadow-blue-600/15' : 'border border-gray-300 shadow-md hover:shadow-lg hover:border-blue-600'}`,\n          onClick: () => selectQuote(option),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-blue-600 mb-2\",\n              children: option.policytypeName || option.policyTypeName || option.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600 mb-3\",\n              children: option.packageName || option.typePackageName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-3xl font-bold text-gray-900 leading-tight\",\n                children: [option.currency || '€', option.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mt-1\",\n                children: \"per trip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3109,\n            columnNumber: 13\n          }, this), option.isBestBuy === 1 && option.isBestBuyText && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5 bg-green-50 border border-green-500 rounded-md p-2 text-xs text-green-800 text-center font-bold\",\n            children: [\"\\u2728 \", option.isBestBuyText, \" \\u2728\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3128,\n            columnNumber: 15\n          }, this), option.SummaryCovers && option.SummaryCovers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-base font-bold mb-3 text-gray-900 text-center\",\n              children: \"Coverage Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3136,\n              columnNumber: 17\n            }, this), option.SummaryCovers.map((cover, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2.5 p-2 bg-gray-50 rounded text-sm text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-bold text-blue-600 mb-1\",\n                children: cover.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Limit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3143,\n                    columnNumber: 29\n                  }, this), \" \", cover.Limit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3143,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3142,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3138,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `w-full px-4 py-3 rounded font-bold uppercase transition-colors duration-300 text-white ${((_formData$selectedQuo23 = formData.selectedQuote) === null || _formData$selectedQuo23 === void 0 ? void 0 : _formData$selectedQuo23.id) === option.id ? 'bg-orange-600 hover:bg-orange-700' : 'bg-gray-900 hover:bg-gray-800'}`,\n            children: ((_formData$selectedQuo24 = formData.selectedQuote) === null || _formData$selectedQuo24 === void 0 ? void 0 : _formData$selectedQuo24.id) === option.id ? 'SELECTED' : 'SELECT PLAN'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3151,\n            columnNumber: 13\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3099,\n          columnNumber: 11\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: '1 / -1',\n          textAlign: 'center',\n          padding: '40px',\n          color: '#666'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading SOAP quotes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3097,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3073,\n    columnNumber: 5\n  }, this);\n  const renderPhase3 = () => {\n    var _formData$selectedQuo25, _formData$selectedQuo26;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Enhance Your Coverage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3177,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Add optional coverage for extra protection during your trip.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-plan-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-plan\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Selected Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3182,\n            columnNumber: 11\n          }, this), formData.selectedQuote && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-name\",\n              children: formData.selectedQuote.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-price\",\n              children: [\"\\u20AC\", formData.selectedQuote.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3181,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"additional-policies\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Optional Coverage Add-ons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3193,\n          columnNumber: 9\n        }, this), isLoadingAddons ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading available add-ons...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3195,\n          columnNumber: 11\n        }, this) : availableAdditionalPolicies.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No additional coverage options available for this policy type.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3205,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policies-grid\",\n          children: availableAdditionalPolicies.map(policy => {\n            const isSelected = formData.additionalPolicies.some(p => p.id === policy.id);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `policy-card ${isSelected ? 'selected' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"policy-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-icon\",\n                  children: policy.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"policy-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"flex items-center gap-2 flex-wrap\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: policy.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3224,\n                      columnNumber: 25\n                    }, this), policy.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm font-normal text-gray-600\",\n                      children: [\"- \", policy.description]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3226,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3223,\n                    columnNumber: 23\n                  }, this), policy.price > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"policy-price\",\n                    children: [\"\\u20AC\", policy.price.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3230,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3222,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `policy-btn ${isSelected ? 'remove' : 'add'}`,\n                  onClick: () => isSelected ? removeAdditionalPolicy(policy.id) : addAdditionalPolicy(policy),\n                  disabled: processingAddonId !== null,\n                  children: processingAddonId === policy.id ? 'PROCESSING...' : isSelected ? 'REMOVE' : 'ADD'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3220,\n                columnNumber: 19\n              }, this)\n            }, policy.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3219,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3192,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-summary-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"base-plan\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Base Plan: \", (_formData$selectedQuo25 = formData.selectedQuote) === null || _formData$selectedQuo25 === void 0 ? void 0 : _formData$selectedQuo25.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3251,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u20AC\", (_formData$selectedQuo26 = formData.selectedQuote) === null || _formData$selectedQuo26 === void 0 ? void 0 : _formData$selectedQuo26.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3252,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3250,\n            columnNumber: 11\n          }, this), formData.additionalPolicies.map(policy => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: policy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: policy.price > 0 ? `€${policy.price.toFixed(2)}` : 'Included in total'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3257,\n              columnNumber: 15\n            }, this)]\n          }, policy.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3255,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-line\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-label\",\n              children: \"Total Premium:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3261,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-amount\",\n              children: [\"\\u20AC\", calculateTotalPrice().toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3262,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3260,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3249,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3248,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3176,\n      columnNumber: 5\n    }, this);\n  };\n  const renderPhase4 = () => {\n    var _formData$selectedQuo27;\n    const calculateTripDuration = () => {\n      if (formData.startDate && formData.endDate) {\n        const start = new Date(formData.startDate);\n        const end = new Date(formData.endDate);\n        const days = Math.ceil((end.getTime() - start.getTime()) / (1000 * 3600 * 24));\n        return days;\n      }\n      return 0;\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Review Your Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Please carefully review all information below. You can go back to make changes if needed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professional-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDF0D Trip Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Insurance Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formData.tripType === 'single' ? 'Single Trip Insurance' : formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' : 'Comprehensive Single Trip Insurance'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3295,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Country of Residence:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formData.countryOfResidence\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Destination:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3307,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formData.destination\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3308,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Departure Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formatDateToEuropean(formData.startDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Return Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3315,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: formatDateToEuropean(formData.endDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3316,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Trip Duration:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3319,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: [calculateTripDuration(), \" days\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3320,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Number of Travelers:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3323,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: [formData.numberOfTravelers, \" \", formData.numberOfTravelers === 1 ? 'person' : 'people']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3324,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDEE1\\uFE0F Selected Insurance Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: formData.selectedQuote && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plan-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: formData.selectedQuote.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3339,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plan-price\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"price-label\",\n                    children: \"Total Premium:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3341,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"price-value\",\n                    children: [\"\\u20AC\", calculateTotalPrice().toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3342,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3340,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coverage-overview\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: {\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                    WebkitBackgroundClip: 'text',\n                    WebkitTextFillColor: 'transparent',\n                    fontSize: '1.5em',\n                    fontWeight: '700',\n                    marginBottom: '20px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '10px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '1.2em'\n                    },\n                    children: \"\\uD83D\\uDEE1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3358,\n                    columnNumber: 23\n                  }, this), \"Coverage Limits\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3347,\n                  columnNumber: 21\n                }, this), formData.selectedQuote.SummaryCovers && formData.selectedQuote.SummaryCovers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n                    gap: '15px',\n                    marginTop: '15px'\n                  },\n                  children: formData.selectedQuote.SummaryCovers.map((cover, index) => {\n                    // Determine icon and color based on cover name\n                    const getIconAndColor = name => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('medical') || lowerName.includes('emergency')) return {\n                        icon: '🏥',\n                        color: '#e74c3c',\n                        bgColor: '#fdeaea'\n                      };\n                      if (lowerName.includes('baggage') || lowerName.includes('luggage')) return {\n                        icon: '🧳',\n                        color: '#3498db',\n                        bgColor: '#eaf2f8'\n                      };\n                      if (lowerName.includes('cancellation')) return {\n                        icon: '❌',\n                        color: '#e67e22',\n                        bgColor: '#fef5e7'\n                      };\n                      if (lowerName.includes('delay')) return {\n                        icon: '⏰',\n                        color: '#9b59b6',\n                        bgColor: '#f4ecf7'\n                      };\n                      if (lowerName.includes('personal') && lowerName.includes('liability')) return {\n                        icon: '⚖️',\n                        color: '#16a085',\n                        bgColor: '#e8f8f5'\n                      };\n                      if (lowerName.includes('accident')) return {\n                        icon: '🚑',\n                        color: '#c0392b',\n                        bgColor: '#fadbd8'\n                      };\n                      if (lowerName.includes('legal')) return {\n                        icon: '⚖️',\n                        color: '#2c3e50',\n                        bgColor: '#ecf0f1'\n                      };\n                      if (lowerName.includes('money') || lowerName.includes('cash')) return {\n                        icon: '💰',\n                        color: '#f39c12',\n                        bgColor: '#fef9e7'\n                      };\n                      if (lowerName.includes('passport') || lowerName.includes('document')) return {\n                        icon: '📄',\n                        color: '#7f8c8d',\n                        bgColor: '#f2f3f4'\n                      };\n                      if (lowerName.includes('rental') || lowerName.includes('vehicle')) return {\n                        icon: '🚗',\n                        color: '#34495e',\n                        bgColor: '#ebedef'\n                      };\n                      if (lowerName.includes('winter') || lowerName.includes('sport')) return {\n                        icon: '⛷️',\n                        color: '#3498db',\n                        bgColor: '#ebf5fb'\n                      };\n                      if (lowerName.includes('personal') && lowerName.includes('effect')) return {\n                        icon: '👜',\n                        color: '#8e44ad',\n                        bgColor: '#f5eef8'\n                      };\n                      return {\n                        icon: '📋',\n                        color: '#27ae60',\n                        bgColor: '#eafaf1'\n                      };\n                    };\n                    const {\n                      icon,\n                      color,\n                      bgColor\n                    } = getIconAndColor(cover.name);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        background: `linear-gradient(135deg, ${bgColor} 0%, #ffffff 100%)`,\n                        border: `2px solid ${bgColor}`,\n                        borderRadius: '12px',\n                        padding: '18px',\n                        transition: 'all 0.3s ease',\n                        cursor: 'pointer',\n                        position: 'relative',\n                        overflow: 'hidden'\n                      },\n                      onMouseEnter: e => {\n                        e.currentTarget.style.transform = 'translateY(-5px)';\n                        e.currentTarget.style.boxShadow = `0 8px 25px rgba(0,0,0,0.15)`;\n                        e.currentTarget.style.borderColor = color;\n                      },\n                      onMouseLeave: e => {\n                        e.currentTarget.style.transform = 'translateY(0)';\n                        e.currentTarget.style.boxShadow = 'none';\n                        e.currentTarget.style.borderColor = bgColor;\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          position: 'absolute',\n                          top: '-20px',\n                          right: '-20px',\n                          width: '80px',\n                          height: '80px',\n                          background: color,\n                          opacity: '0.1',\n                          borderRadius: '50%'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3423,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          display: 'flex',\n                          alignItems: 'flex-start',\n                          gap: '12px',\n                          position: 'relative',\n                          zIndex: 1\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: '2.5em',\n                            background: color,\n                            width: '60px',\n                            height: '60px',\n                            borderRadius: '12px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            flexShrink: 0,\n                            boxShadow: `0 4px 15px ${color}40`\n                          },\n                          children: icon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3435,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            flex: 1,\n                            minWidth: 0\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '0.9em',\n                              color: '#555',\n                              fontWeight: '500',\n                              marginBottom: '8px',\n                              lineHeight: '1.3'\n                            },\n                            children: cover.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3450,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '1.3em',\n                              fontWeight: '700',\n                              color: color,\n                              marginBottom: '4px'\n                            },\n                            children: cover.Limit\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3459,\n                            columnNumber: 35\n                          }, this), cover.Excess && cover.Excess !== '€0' && cover.Excess !== 'Nil' && /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '0.85em',\n                              color: '#888',\n                              background: '#f8f9fa',\n                              padding: '4px 8px',\n                              borderRadius: '6px',\n                              display: 'inline-block',\n                              marginTop: '4px'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                fontWeight: '600'\n                              },\n                              children: \"Excess:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3477,\n                              columnNumber: 39\n                            }, this), \" \", cover.Excess]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3468,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3449,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3434,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3402,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3362,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coverage-grid\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"coverage-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"coverage-icon\",\n                      children: \"\\uD83C\\uDFE5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3489,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"coverage-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-type\",\n                        children: \"Medical Emergency\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3491,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-amount\",\n                        children: formData.selectedQuote.coverage.medical\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3492,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3490,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3488,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"coverage-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"coverage-icon\",\n                      children: \"\\uD83E\\uDDF3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3496,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"coverage-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-type\",\n                        children: \"Baggage Protection\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3498,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-amount\",\n                        children: formData.selectedQuote.coverage.baggage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3499,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3497,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3495,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"coverage-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"coverage-icon\",\n                      children: \"\\u274C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3503,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"coverage-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-type\",\n                        children: \"Trip Cancellation\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3505,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"coverage-amount\",\n                        children: formData.selectedQuote.coverage.cancellation\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3506,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3504,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3502,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3487,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3337,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card total-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row base-premium\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Base Premium:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3522,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: [\"\\u20AC\", (_formData$selectedQuo27 = formData.selectedQuote) === null || _formData$selectedQuo27 === void 0 ? void 0 : _formData$selectedQuo27.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3523,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3521,\n                columnNumber: 17\n              }, this), formData.additionalPolicies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Additional Policies:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3527,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: [\"\\u20AC\", ((_formData$selectedQuo28, _formData$selectedQuo29) => {\n                    // Calculate addon amount as Total Amount - Base Premium\n                    const basePrice = typeof ((_formData$selectedQuo28 = formData.selectedQuote) === null || _formData$selectedQuo28 === void 0 ? void 0 : _formData$selectedQuo28.price) === 'number' ? formData.selectedQuote.price : parseFloat(((_formData$selectedQuo29 = formData.selectedQuote) === null || _formData$selectedQuo29 === void 0 ? void 0 : _formData$selectedQuo29.price) || '0');\n                    const totalAmount = calculateTotalPrice();\n                    const addonAmount = totalAmount - basePrice;\n                    return addonAmount.toFixed(2);\n                  })()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3528,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3526,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Taxes & Fees:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: \"Included\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3541,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3539,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-row final-total\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-label\",\n                  children: \"Total Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3544,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"total-value\",\n                  children: [\"\\u20AC\", calculateTotalPrice().toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3545,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3543,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3520,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3519,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3281,\n      columnNumber: 7\n    }, this);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const renderPhase5 = () => {\n    var _formData$selectedQuo30;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3558,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please confirm that all details are correct before proceeding to payment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3559,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Trip:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3563,\n            columnNumber: 11\n          }, this), \" \", formData.destination, \" (\", formatDateToEuropean(formData.startDate), \" to \", formatDateToEuropean(formData.endDate), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3562,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Country of Residence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3566,\n            columnNumber: 11\n          }, this), \" \", formData.countryOfResidence]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3565,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Travelers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3569,\n            columnNumber: 11\n          }, this), \" \", formData.numberOfTravelers, \" person\", formData.numberOfTravelers > 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3568,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Plan:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3572,\n            columnNumber: 11\n          }, this), \" \", (_formData$selectedQuo30 = formData.selectedQuote) === null || _formData$selectedQuo30 === void 0 ? void 0 : _formData$selectedQuo30.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3571,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-item total\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3575,\n            columnNumber: 11\n          }, this), \" \\u20AC\", calculateTotalPrice().toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3574,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3561,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3557,\n      columnNumber: 5\n    }, this);\n  };\n\n  // Helper function to decode HTML entities and format question text\n  const decodeQuestionText = text => {\n    if (!text) return '';\n\n    // Create a temporary element to decode HTML entities\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = text;\n    let decoded = textarea.value;\n\n    // Replace <BR> tags (after decoding &lt;BR&gt;) with actual line breaks\n    decoded = decoded.replace(/<BR>/gi, '\\n');\n    decoded = decoded.replace(/&lt;BR&gt;/gi, '\\n');\n    return decoded;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const renderPhase6 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Screening Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3600,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please answer the following questions to complete your insurance application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3601,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screening-questions\",\n      children: screeningQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No screening questions required for this policy.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14px',\n            color: '#666',\n            marginTop: '10px'\n          },\n          children: \"The API returned an empty response or no questions are configured for this quote.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3607,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3605,\n        columnNumber: 11\n      }, this) : screeningQuestions.map((question, index) => {\n        const decodedQuestion = decodeQuestionText(question.question);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screening-question\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", question.questionNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3617,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            style: {\n              whiteSpace: 'pre-wrap',\n              lineHeight: '1.6',\n              padding: '15px',\n              background: '#f9f9f9',\n              borderRadius: '8px',\n              border: '1px solid #e0e0e0'\n            },\n            children: decodedQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3618,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-options\",\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question.questionNumber}`,\n                value: \"yes\",\n                checked: screeningAnswers[question.questionNumber] === 'yes',\n                onChange: e => setScreeningAnswers(prev => ({\n                  ...prev,\n                  [question.questionNumber]: 'yes'\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3631,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3641,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3630,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${question.questionNumber}`,\n                value: \"no\",\n                checked: screeningAnswers[question.questionNumber] === 'no',\n                onChange: e => setScreeningAnswers(prev => ({\n                  ...prev,\n                  [question.questionNumber]: 'no'\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3644,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3654,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3643,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3629,\n            columnNumber: 17\n          }, this), screeningAnswers[question.questionNumber] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `answer-message ${screeningAnswers[question.questionNumber]}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                whiteSpace: 'pre-wrap'\n              },\n              children: screeningAnswers[question.questionNumber] === 'yes' ? decodeQuestionText(question.yesMessage) : decodeQuestionText(question.noMessage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3661,\n              columnNumber: 21\n            }, this), question.yesAction && screeningAnswers[question.questionNumber] === 'yes' && question.yesActionText && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                marginTop: '5px',\n                fontStyle: 'italic'\n              },\n              children: [\"Action: \", question.yesActionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3668,\n              columnNumber: 23\n            }, this), question.noAction && screeningAnswers[question.questionNumber] === 'no' && question.noActionText && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                marginTop: '5px',\n                fontStyle: 'italic'\n              },\n              children: [\"Action: \", question.noActionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3673,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3660,\n            columnNumber: 19\n          }, this)]\n        }, question.questionNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3616,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3603,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3599,\n    columnNumber: 5\n  }, this);\n  const renderPhase7 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Payment Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3689,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Enter your payment information to complete your purchase.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3690,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-traveler-billing-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Traveler Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3696,\n          columnNumber: 11\n        }, this), formData.travelers.map((traveler, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"traveler-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [\"Traveler \", index + 1, index === 0 ? '/Policy holder' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `title-${index}`,\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3703,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `title-${index}`,\n                value: traveler.title || 'Mr',\n                onChange: e => handleTravelerChange(index, 'title', e.target.value),\n                title: \"Select the traveler's title\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Mr\",\n                  children: \"Mr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3710,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Mrs\",\n                  children: \"Mrs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3711,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Miss\",\n                  children: \"Miss\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3712,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Ms\",\n                  children: \"Ms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3713,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Dr\",\n                  children: \"Dr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3714,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Prof\",\n                  children: \"Prof\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3715,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3704,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `firstName-${index}`,\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3719,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `firstName-${index}`,\n                value: traveler.firstName,\n                onChange: e => handleTravelerChange(index, 'firstName', e.target.value),\n                placeholder: \"Enter first name\",\n                title: \"Enter the traveler's first name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3720,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3718,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `lastName-${index}`,\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3731,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `lastName-${index}`,\n                value: traveler.lastName,\n                onChange: e => handleTravelerChange(index, 'lastName', e.target.value),\n                placeholder: \"Enter last name\",\n                title: \"Enter the traveler's last name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3732,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3730,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3701,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `dateOfBirth-${index}`,\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3746,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: `dateOfBirth-${index}`,\n                value: traveler.dateOfBirth || '',\n                onChange: e => {\n                  const dateOfBirth = e.target.value;\n\n                  // Validate year is not more than 4 digits\n                  if (dateOfBirth) {\n                    const year = new Date(dateOfBirth).getFullYear();\n                    if (year.toString().length > 4) {\n                      alert('❌ Invalid Year\\n\\nPlease enter a valid year with maximum 4 digits.');\n                      return;\n                    }\n                  }\n\n                  // Auto-calculate age from date of birth\n                  if (dateOfBirth) {\n                    const age = calculateAgeFromDateOfBirth(dateOfBirth);\n                    handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                    handleTravelerChange(index, 'age', age.toString());\n                  } else {\n                    handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                  }\n                },\n                title: \"Enter the traveler's date of birth\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3747,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3745,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `vaxId-${index}`,\n                children: [\"VAT ID\", index === 0 && formData.countryOfResidence === 'Greece' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red'\n                  },\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3779,\n                  columnNumber: 79\n                }, this), index === 0 && formData.countryOfResidence === 'Greece' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '12px',\n                    color: '#666'\n                  },\n                  children: \" (Required for Greece)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3780,\n                  columnNumber: 79\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3777,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: `vaxId-${index}`,\n                value: traveler.vaxId,\n                onChange: e => handleTravelerChange(index, 'vaxId', e.target.value),\n                placeholder: index === 0 && formData.countryOfResidence === 'Greece' ? \"Enter VAT ID (Required)\" : \"Enter VAT ID (Optional)\",\n                title: index === 0 && formData.countryOfResidence === 'Greece' ? \"VAT ID is required for Greece\" : \"Enter the traveler's VAT ID (optional)\",\n                required: index === 0 && formData.countryOfResidence === 'Greece'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3782,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3776,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3744,\n            columnNumber: 13\n          }, this), index === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `email-${index}`,\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3798,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: `email-${index}`,\n                value: traveler.email,\n                onChange: e => handleTravelerChange(index, 'email', e.target.value),\n                placeholder: \"Enter email address\",\n                title: \"Enter the traveler's email address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3799,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3797,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `phone-${index}`,\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3810,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: `phone-${index}`,\n                value: traveler.phone,\n                onChange: e => handleTravelerChange(index, 'phone', e.target.value),\n                placeholder: \"+xx 123 456 7890\",\n                title: \"Enter the traveler's phone number\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3811,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3809,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3796,\n            columnNumber: 15\n          }, this), index === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n              style: {\n                margin: '20px 0',\n                border: 'none',\n                borderTop: '1px solid #e0e0e0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3827,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-center\",\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Billing Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3828,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"street\",\n                  children: \"Street Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3831,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"street\",\n                  value: formData.billingAddress.street,\n                  onChange: e => handleBillingAddressChange('street', e.target.value),\n                  placeholder: \"Enter street address\",\n                  title: \"Enter your billing street address\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3832,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3830,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"postalCode\",\n                  children: \"Postal Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3843,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"postalCode\",\n                  value: formData.billingAddress.postalCode,\n                  onChange: e => handleBillingAddressChange('postalCode', e.target.value),\n                  placeholder: \"Enter postal code\",\n                  title: \"Enter your billing postal code\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3844,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3842,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3829,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"city\",\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3857,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"city\",\n                  value: formData.billingAddress.city,\n                  onChange: e => handleBillingAddressChange('city', e.target.value),\n                  placeholder: \"Enter city\",\n                  title: \"Enter your billing city\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3858,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3856,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"country\",\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3869,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"country\",\n                  value: formData.billingAddress.country,\n                  onChange: e => handleBillingAddressChange('country', e.target.value),\n                  placeholder: \"Enter country\",\n                  title: \"Enter your billing country\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3870,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3868,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3855,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3698,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3695,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3693,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-method-group\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-methods\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3892,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-method-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: \"We accept all major credit and debit cards for secure payment processing.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3894,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center items-center gap-6 mt-4\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/visa_master.png\",\n                alt: \"VISA and Mastercard payment methods\",\n                style: {\n                  maxWidth: '200px',\n                  height: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3896,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3895,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3893,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3891,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"Card Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3906,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardNumber\",\n              children: \"Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3908,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"cardNumber\",\n              value: formData.cardNumber,\n              onChange: e => {\n                let value = e.target.value.replace(/\\D/g, ''); // Remove non-digits\n                if (value.length > 16) {\n                  value = value.substring(0, 16); // Limit to 16 digits\n                }\n                // Add spaces every 4 digits\n                if (value.length > 0) {\n                  var _value$match;\n                  value = ((_value$match = value.match(/.{1,4}/g)) === null || _value$match === void 0 ? void 0 : _value$match.join(' ')) || value;\n                }\n                handleInputChange('cardNumber', value);\n              },\n              placeholder: \"1234 5678 9012 3456\",\n              title: \"Enter your 16-digit card number\",\n              maxLength: 19,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3909,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3907,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"expiryDate\",\n                children: \"Expiry Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3932,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"expiryDate\",\n                value: formData.expiryDate,\n                onChange: e => handleExpiryDateChange(e.target.value),\n                placeholder: \"MM / YYYY\",\n                title: \"Enter card expiry date in MM / YYYY format (Month: 01-12, Year: current year or later)\",\n                maxLength: 9,\n                required: true,\n                className: expiryDateError ? 'border-red-500' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3933,\n                columnNumber: 15\n              }, this), expiryDateError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-500 text-sm mt-1\",\n                children: expiryDateError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3945,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3931,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cvv\",\n                children: \"CVV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3949,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"cvv\",\n                value: formData.cvv,\n                onChange: e => handleInputChange('cvv', e.target.value),\n                placeholder: \"123\",\n                title: \"Enter the 3-digit CVV code from the back of your card\",\n                maxLength: 3,\n                pattern: \"[0-9]{3}\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3950,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3948,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3930,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3905,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3890,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3889,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total Amount: \\u20AC\", calculateTotalPrice().toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3969,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3968,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3967,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          required: true,\n          checked: termsAccepted,\n          onChange: e => handleTermsAcceptance(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3975,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"I have read and accept the \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-button\",\n            onClick: e => {\n              e.preventDefault();\n              setShowPrivacyPolicy(true);\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#0077b6',\n              textDecoration: 'underline',\n              cursor: 'pointer',\n              padding: 0\n            },\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3981,\n            columnNumber: 44\n          }, this), \", \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-button\",\n            onClick: e => {\n              e.preventDefault();\n              setShowTermsAndConditions(true);\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#0077b6',\n              textDecoration: 'underline',\n              cursor: 'pointer',\n              padding: 0\n            },\n            children: \"Terms and Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3987,\n            columnNumber: 22\n          }, this), \" and \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link-button\",\n            onClick: e => {\n              e.preventDefault();\n              fetchGeneralConditions();\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#0077b6',\n              textDecoration: 'underline',\n              cursor: 'pointer',\n              padding: 0\n            },\n            children: \"General conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3993,\n            columnNumber: 25\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3981,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3974,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          required: true,\n          checked: marketingEmailsAccepted,\n          onChange: e => setMarketingEmailsAccepted(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4002,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"I would like to receive marketing emails about travel insurance offers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4008,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4001,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3973,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3688,\n    columnNumber: 5\n  }, this);\n  const renderPhase8 = () => {\n    var _formData$travelers$0, _formData$selectedQuo31, _formData$selectedQuo32;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-phase\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"\\uD83C\\uDF89 Congratulations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4016,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: \"Your travel insurance has been successfully purchased.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4017,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message bg-gray-900\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"policy-number\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Policy Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4021,\n            columnNumber: 11\n          }, this), \" \", policyNumber ? policyNumber : 'Processing...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4020,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-email\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"A confirmation email has been sent to \", (_formData$travelers$0 = formData.travelers[0]) === null || _formData$travelers$0 === void 0 ? void 0 : _formData$travelers$0.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4024,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4023,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4019,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"documents-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"Your Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4029,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          style: {\n            fontSize: '14px',\n            color: '#666',\n            marginBottom: '15px'\n          },\n          children: \"Click on any document to open it in a new tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4030,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"document-links\",\n          children: [policyDocuments.summaryOfCover ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.summaryOfCover,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Summary of Cover in new tab\",\n            title: \"View Summary of Cover from Terracotta\",\n            children: \"\\uD83D\\uDCC4 Summary of Cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4036,\n            columnNumber: 13\n          }, this) : (_formData$selectedQuo31 = formData.selectedQuote) !== null && _formData$selectedQuo31 !== void 0 && _formData$selectedQuo31.SI ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: formData.selectedQuote.SI,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Summary of Cover in new tab\",\n            title: \"View Summary of Cover (from quote)\",\n            children: \"\\uD83D\\uDCC4 Summary of Cover (from quote)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4047,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-link disabled\",\n            style: {\n              opacity: 0.5,\n              cursor: 'not-allowed'\n            },\n            children: \"\\uD83D\\uDCC4 Summary of Cover (Not Available)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4058,\n            columnNumber: 13\n          }, this), policyDocuments.policyWording ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.policyWording,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Policy Wording in new tab\",\n            title: \"View Policy Wording from Terracotta\",\n            children: \"\\uD83D\\uDCCB Policy Wording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4065,\n            columnNumber: 13\n          }, this) : (_formData$selectedQuo32 = formData.selectedQuote) !== null && _formData$selectedQuo32 !== void 0 && _formData$selectedQuo32.PW ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: formData.selectedQuote.PW,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Policy Wording in new tab\",\n            title: \"View Policy Wording (from quote)\",\n            children: \"\\uD83D\\uDCCB Policy Wording (from quote)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4076,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-link disabled\",\n            style: {\n              opacity: 0.5,\n              cursor: 'not-allowed'\n            },\n            children: \"\\uD83D\\uDCCB Policy Wording (Not Available)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4087,\n            columnNumber: 13\n          }, this), policyDocuments.certificate ? /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.certificate,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Certificate in new tab\",\n            title: \"View Certificate from Terracotta\",\n            children: \"\\uD83C\\uDD94 Certificate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4094,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-link disabled\",\n            style: {\n              opacity: 0.5,\n              cursor: 'not-allowed'\n            },\n            children: \"\\uD83C\\uDD94 Certificate (Pending - may be emailed separately)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4105,\n            columnNumber: 13\n          }, this), policyDocuments.keyFacts && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.keyFacts,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open Key Facts in new tab\",\n            title: \"View Key Facts from Terracotta\",\n            children: \"\\uD83D\\uDCCB Key Facts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4112,\n            columnNumber: 13\n          }, this), policyDocuments.ipid && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: policyDocuments.ipid,\n            className: \"document-link\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            \"aria-label\": \"Open IPID in new tab\",\n            title: \"View Insurance Product Information Document\",\n            children: \"\\uD83D\\uDCC4 IPID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadPolicyPDF,\n            className: \"document-link download-btn\",\n            \"aria-label\": \"Download your policy summary as a PDF document\",\n            title: \"Download a PDF copy of your travel insurance policy summary\",\n            type: \"button\",\n            children: \"\\uD83D\\uDCC4 Download Your Policy Summary (PDF)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4139,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4033,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4028,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"What's Next?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Save your policy documents in a safe place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Keep the emergency contact numbers with you while traveling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4155,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Download our mobile app for easy access to your policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4156,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Contact us anytime at +30 6974907500 for assistance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4157,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4151,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4015,\n      columnNumber: 5\n    }, this);\n  };\n  const renderPhaseContent = () => {\n    switch (currentPhase) {\n      case 1:\n        return renderPhase1();\n      // Trip Details\n      case 2:\n        return renderPhase2();\n      // Quotes\n      case 3:\n        return renderPhase3();\n      // Add-ons\n      case 4:\n        return renderPhase4();\n      // Review\n      case 5:\n        return renderPhase7();\n      // Payment\n      case 6:\n        return renderPhase8();\n      // Documents\n      default:\n        return renderPhase1();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-8 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl md:text-5xl font-bold text-gray-900 mb-8\",\n          children: \"Travel Insurance Quote Wizard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center gap-4 mb-8 relative px-8\",\n          children: [1, 2, 3, 4, 5, 6].map((phase, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex flex-col items-center relative flex-1 max-w-[120px] ${index < 5 ? 'w-full' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-10 h-10 rounded-full flex items-center justify-center font-semibold mb-2 transition-all duration-300 relative z-10 ${currentPhase >= phase ? currentPhase === phase ? 'bg-blue-600 text-white shadow-lg shadow-blue-600/20' : 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'}`,\n                children: phase\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `text-sm font-medium ${currentPhase >= phase ? 'text-blue-600' : 'text-gray-600'}`,\n                children: [phase === 1 && 'Details', phase === 2 && 'Quotes', phase === 3 && 'Add-ons', phase === 4 && 'Review', phase === 5 && 'Payment', phase === 6 && 'Documents']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 4208,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4198,\n              columnNumber: 19\n            }, this), index < 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex-1 h-0.5 rounded transition-all duration-300 ${currentPhase > phase ? 'bg-blue-600' : 'bg-gray-300'}`,\n              style: {\n                maxWidth: 'calc(100% - 120px)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4220,\n              columnNumber: 21\n            }, this)]\n          }, phase, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4197,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-8 md:p-12 mb-8 min-h-[500px]\",\n        children: renderPhaseContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center px-4 gap-4\",\n        children: [currentPhase > 1 && currentPhase < 6 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-transparent text-gray-900 border-2 border-gray-900 hover:bg-gray-900 hover:text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed\",\n          onClick: prevPhase,\n          \"aria-label\": \"Go to previous step\",\n          title: \"Go back to the previous step\",\n          type: \"button\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4235,\n          columnNumber: 13\n        }, this), currentPhase === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-900\",\n            onClick: nextPhase,\n            disabled: !isPhaseValid(currentPhase),\n            \"aria-label\": \"Go to next step\",\n            title: \"Continue to next step\",\n            type: \"button\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), currentPhase > 1 && currentPhase < 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-900\",\n          onClick: nextPhase,\n          disabled: !isPhaseValid(currentPhase),\n          \"aria-label\": currentPhase === 4 ? 'Proceed to payment step' : 'Go to next step',\n          title: currentPhase === 4 ? 'Continue to payment details' : 'Continue to next step',\n          type: \"button\",\n          children: currentPhase === 4 ? 'Proceed to Payment' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4262,\n          columnNumber: 13\n        }, this), currentPhase === 5 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-900\",\n            onClick: processPayment,\n            disabled: !isPhaseValid(currentPhase) || isProcessing,\n            \"aria-label\": isProcessing ? 'Processing payment, please wait' : `Pay €${calculateTotalPrice().toFixed(2)} for your travel insurance`,\n            title: isProcessing ? 'Payment is being processed, please wait' : `Complete payment of €${calculateTotalPrice().toFixed(2)}`,\n            type: \"button\",\n            children: isProcessing ? 'Processing Payment...' : `Pay €${calculateTotalPrice().toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), currentPhase === 6 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300\",\n            onClick: () => window.location.href = '/',\n            \"aria-label\": \"Return to homepage\",\n            title: \"Go back to the main homepage\",\n            type: \"button\",\n            children: \"Return to Homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4192,\n      columnNumber: 7\n    }, this), showHelpPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowHelpPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Destination Categories & Countries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowHelpPopup(false),\n            \"aria-label\": \"Close help popup\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: isLoadingCountries ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-message\",\n            children: \"Loading countries...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4325,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categories-container\",\n            children: Object.entries(countriesByCategory).map(([category, countries]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"category-title\",\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4330,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"countries-grid\",\n                children: countries.map(country => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"country-item\",\n                  children: country\n                }, country, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 4333,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4331,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-count\",\n                children: [countries.length, \" countries\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 4338,\n                columnNumber: 23\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4329,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4327,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4311,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4310,\n      columnNumber: 9\n    }, this), showPrivacyPolicy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowPrivacyPolicy(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowPrivacyPolicy(false),\n            \"aria-label\": \"Close privacy policy\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              lineHeight: '1.6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Sample Privacy Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is a sample Privacy Policy. The actual content will be added later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"1. Information We Collect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We collect information that you provide directly to us, including personal information such as your name, email address, date of birth, and travel details.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4371,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"2. How We Use Your Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We use the information we collect to provide, maintain, and improve our services, including processing your insurance quotes and policies.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"3. Data Security\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We implement appropriate technical and organizational measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"4. Your Rights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4379,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You have the right to access, correct, or delete your personal information. You may also object to or restrict certain processing of your data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"5. Contact Us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4382,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"If you have any questions about this Privacy Policy, please contact us at privacy@example.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: '20px',\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: [\"Last updated: \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4366,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4353,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4352,\n      columnNumber: 9\n    }, this), showTermsAndConditions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowTermsAndConditions(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Terms and Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowTermsAndConditions(false),\n            \"aria-label\": \"Close terms and conditions\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              lineHeight: '1.6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Sample Terms and Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is a sample Terms and Conditions document. The actual content will be added later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"1. Acceptance of Terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"By purchasing travel insurance from us, you agree to be bound by these Terms and Conditions. Please read them carefully before proceeding with your purchase.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"2. Insurance Coverage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The insurance coverage is subject to the terms, conditions, and exclusions set forth in the policy documents. Coverage begins on the start date specified in your policy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"3. Premium Payment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4420,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"The insurance premium must be paid in full before coverage begins. All payments are processed securely through our payment gateway.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"4. Claims Process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"In the event of a claim, you must notify us as soon as reasonably possible and provide all required documentation to support your claim.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"5. Cancellation Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You may cancel your policy within the cooling-off period specified in your policy documents for a full refund, provided no claims have been made.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                marginTop: '20px'\n              },\n              children: \"6. Governing Law\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"These Terms and Conditions are governed by and construed in accordance with applicable insurance regulations.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: '20px',\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: [\"Last updated: \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 4432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4410,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4397,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4396,\n      columnNumber: 9\n    }, this), showGeneralConditions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"help-popup-overlay\",\n      onClick: () => setShowGeneralConditions(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"General Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"help-popup-close\",\n            onClick: () => setShowGeneralConditions(false),\n            \"aria-label\": \"Close general conditions\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 4447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 4445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"help-popup-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              lineHeight: '1.6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Screening Questions & General Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '20px',\n                color: '#666'\n              },\n              children: \"These are the general conditions and screening questions for your selected policy.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4459,\n              columnNumber: 17\n            }, this), generalConditionsData.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '20px',\n                textAlign: 'center',\n                color: '#666'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No general conditions available for this policy.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 4465,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4464,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"screening-questions\",\n              children: generalConditionsData.map((question, index) => {\n                const decodedQuestion = decodeQuestionText(question.question);\n                const decodedNoMessage = question.noMessage ? decodeQuestionText(question.noMessage) : '';\n\n                // Filter out specific unwanted text from the No message\n                const filteredNoMessage = decodedNoMessage.replace(/Yes\\/No \\(If No cannot proceed with purchase\\)\\.\\s*If No:\\s*You must confirm that you have read and accepted the following to purchase this insurance by selecting Yes\\.\\s*If you are unable to agree with any of the following statements, then you are unable to continue with the purchase of this insurance\\.\\s*/gi, '').trim();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '25px',\n                    padding: '15px',\n                    background: '#f9f9f9',\n                    borderRadius: '8px',\n                    border: '1px solid #e0e0e0'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      whiteSpace: 'pre-wrap',\n                      lineHeight: '1.6',\n                      marginBottom: '10px'\n                    },\n                    children: decodedQuestion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 4487,\n                    columnNumber: 27\n                  }, this), question.yesMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: '10px',\n                      fontSize: '14px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        color: '#d9534f'\n                      },\n                      children: \"If Yes:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4497,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        whiteSpace: 'pre-wrap',\n                        marginTop: '5px',\n                        color: '#555'\n                      },\n                      children: decodeQuestionText(question.yesMessage)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4498,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 4496,\n                    columnNumber: 29\n                  }, this), filteredNoMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: '10px',\n                      fontSize: '14px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        color: '#5cb85c'\n                      },\n                      children: \"If No:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4506,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        whiteSpace: 'pre-wrap',\n                        marginTop: '5px',\n                        color: '#555'\n                      },\n                      children: filteredNoMessage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 4507,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 4505,\n                    columnNumber: 29\n                  }, this)]\n                }, question.questionNumber, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 4480,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 4468,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 4457,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 4456,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 4444,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4443,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4183,\n    columnNumber: 5\n  }, this);\n};\n_s2(Quote, \"Ff8WUcDAk0g9uoyKGcrd8AMUXZg=\");\n_c = Quote;\nexport default Quote;\nvar _c;\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","createQuote","processPayment","apiProcessPayment","getAddonsByPolicyType","TerracottaService","getResidenceID","getTypePolicyID","getAgebandID","jsxDEV","_jsxDEV","Fragment","_Fragment","generatePDF","formData","calculateTotalPrice","formatDateToEuropean","policyNumber","_formData$selectedQuo","jsPDF","default","doc","currentDate","Date","toLocaleDateString","setFontSize","text","yPos","tripType","countryOfResidence","destination","startDate","endDate","numberOfTravelers","travelers","forEach","traveler","index","addPage","firstName","lastName","age","email","phone","selectedQuote","name","coverage","medical","baggage","cancellation","features","length","feature","additionalPolicies","policy","price","toFixed","additional","reduce","sum","save","error","console","generateHTMLPolicy","_formData$selectedQuo2","htmlContent","map","join","printWindow","window","open","document","write","close","dateString","year","month","day","split","calculateAgeFromDateOfBirth","dateOfBirth","birthDate","today","getFullYear","monthDiff","getMonth","getDate","Math","max","Quote","onNavigate","_s2","_formData$selectedQuo10","_s","$RefreshSig$","currentPhase","setCurrentPhase","setFormData","destinationCategory","vaxId","nationality","paymentMethod","cardNumber","expiryDate","cvv","billingAddress","street","city","postalCode","country","quoteOptions","setQuoteOptions","isProcessing","setIsProcessing","setPolicyNumber","policyDocuments","setPolicyDocuments","terracottaService","log","getInstance","screeningQuestions","screeningAnswers","setScreeningAnswers","isLoadingQuotes","setIsLoadingQuotes","quoteError","setQuoteError","availableProducts","setAvailableProducts","availablePolicyTypes","setAvailablePolicyTypes","isLoadingPolicyTypeDestinations","setIsLoadingPolicyTypeDestinations","destinationCategories","setDestinationCategories","isLoadingCategories","setIsLoadingCategories","allCountriesWithCategories","setAllCountriesWithCategories","destinationSuggestions","setDestinationSuggestions","showDestinationSuggestions","setShowDestinationSuggestions","expiryDateError","setExpiryDateError","showHelpPopup","setShowHelpPopup","countriesByCategory","setCountriesByCategory","isLoadingCountries","setIsLoadingCountries","showPrivacyPolicy","setShowPrivacyPolicy","showTermsAndConditions","setShowTermsAndConditions","showGeneralConditions","setShowGeneralConditions","generalConditionsData","setGeneralConditionsData","termsAccepted","setTermsAccepted","marketingEmailsAccepted","setMarketingEmailsAccepted","countriesOfResidence","setCountriesOfResidence","isLoadingCountriesOfResidence","setIsLoadingCountriesOfResidence","availableAdditionalPolicies","setAvailableAdditionalPolicies","isLoadingAddons","setIsLoadingAddons","totalGrossPriceWithAddons","setTotalGrossPriceWithAddons","processingAddonId","setProcessingAddonId","scrollTo","top","behavior","loadTerracottaProducts","_productResponse$Sche","productResponse","getUserProductList","Schemas","loadPolicyTypes","allPolicyTypes","product","SchemaID","SchemaName","policyResponse","getUserProductTypePolicy","toString","policyTypesWithSchema","PolicyTypes","policyType","push","uniquePolicyTypes","filter","self","findIndex","p","TypePolicyID","schemaToUse","find","policyTypeResponse","loadCountriesOfResidence","response","fetch","data","json","status","countries","message","loadAllCountries","loadCountriesForCategories","countriesData","category","encodeURIComponent","generateQuotesIfNeeded","options","generateQuoteOptions","normalizePolicyTypeName","soapPolicyType","normalized","trim","mappings","key","value","Object","entries","toLowerCase","lowerNormalized","includes","warn","fetchAddons","_formData$selectedQuo3","_formData$selectedQuo4","_formData$selectedQuo5","_formData$selectedQuo6","_formData$selectedQuo7","_formData$selectedQuo8","_formData$selectedQuo9","_formData$selectedQuo0","rawPolicyTypeName","policytypeName","policyTypeName","typePolicyName","selectedField","addonsData","addons","transformedAddons","addon","getIcon","lowerName","getCategory","id","alteration_id","additional_cover_name","description","additional_cover_detail","icon","alterationId","_formData$selectedQuo1","nameParts","extractedPolicyType","normalizedType","prev","_response$quoteResult","terracottaRequest","convertToTerracottaFormat","provideQuotation","Message","quoteResults","realQuotes","result","QuoteID","schemaName","type","isBestBuy","GrossPrice","coverLevel","toLocaleString","activities","isAnnual","maxDaysPerTrip","terracottaQuoteId","summaryOfCoverUrl","SI","policyWordingUrl","PW","currency","ipt","IPT","schemaID","destinationName","residenceName","packageName","typePackageName","isBestBuyText","discount","Discount","iconURL","IconURL","helpFile","HelpFile","policytypeShortName","keyFactsUrl","KF","policyTypeID","PolicyTypeID","destinationID","DestinationID","packageID","PackageID","screeningPremium","ipRate","IPTRate","netUW","wbComm","agentComm","SummaryCovers","sortedByIPT","sort","a","b","iptA","iptB","top3Quotes","slice","sortedByPrice","q","generateSampleSOAPQuotes","allSampleQuotes","top3","calculateCoverageLevels","baseMedical","baseBaggage","baseCancellation","medicalMultiplier","baggageMultiplier","cancellationMultiplier","parseInt","replace","generateActivitiesForDestination","determineQuoteType","generateFeaturesForDestination","baseFeatures","destinationFeatures","baseActivities","generateEnhancedMockQuoteOptions","days","ceil","getTime","basePrice","dailyRate","tripMultiplier","mockQuotes","schemasToUse","schema","round","quoteType","now","generateLegacyMockQuoteOptions","CustomDatePicker","onChange","placeholder","required","minDate","isOpen","setIsOpen","setCurrentDate","pickerRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","isDateValid","date","setHours","inputDate","minDateObj","generateCalendar","firstDay","lastDay","daysInMonth","startingDayOfWeek","getDay","i","className","fileName","_jsxFileName","lineNumber","columnNumber","padStart","isSelected","isToday","toDateString","isValid","onClick","style","cursor","opacity","children","navigateMonth","direction","monthNames","ref","e","formattedValue","formatDateInput","isoDate","convertToISO","title","pattern","maxLength","findBestCountryMatch","input","normalizedInput","exactMatch","item","destination_category","startsWithMatch","startsWith","containsMatches","aIndex","indexOf","bIndex","handleDestinationChange","suggestions","handleDestinationSelect","match","handleDestinationBlur","setTimeout","handleExpiryDateChange","digitsOnly","substring","currentYear","currentMonth","handleInputChange","field","newData","cvvValue","setDate","handleTravelerChange","handleNumberOfTravelersChange","count","splice","handleBillingAddressChange","ddmmyyyy","toISOString","digits","fetchGeneralConditions","_formData$selectedQuo11","screeningResponse","getScreeningQuestions","handleTermsAcceptance","checked","allYesAnswers","question","questionNumber","nextPhase","JSON","stringify","essentialPlan","option","_option$name","_option$policytypeNam","Error","String","stack","prevPhase","selectQuote","quote","addAdditionalPolicy","_formData$selectedQuo12","_formData$billingAddr","_formData$billingAddr2","_formData$travelers$","_formData$travelers$2","alert","existingAlterationIds","allAlterationIds","calculateAgeFromDOB","calculateDOBFromAge","TravellerNumber","Title","FirstName","LastName","DateOfBirth","formatDateForTerracotta","Age","TitleID","getTitleID","AlterationID","contactDetails","Address","Postcode","Email","Telephone","alterationsRequest","userID","userCode","quoteID","specificQuoteDetails","Travellers","ContactDetails","provideQuotationWithAlterations","updatedQuote","newGrossPrice","dob","birthYear","parts","titleMap","removeAdditionalPolicy","policyId","_formData$selectedQuo13","remainingAddons","_formData$billingAddr3","_formData$billingAddr4","_formData$travelers$3","_formData$travelers$4","remainingAlterationIds","_formData$selectedQuo14","_formData$selectedQuo15","parseFloat","additionalPrice","generatePolicyPDF","downloadPolicyPDF","_formData$travelers$5","policyHolderEmail","emailRegex","test","_formData$travelers$6","vatId","travelersWithNumber","travellerNumber","quoteData","totalAmount","quoteResponse","_formData$travelers$7","_formData$travelers$8","_formData$selectedQuo16","_formData$selectedQuo21","quoteId","terracottaScreeningAnswers","answer","sortedTravelers","t","travelerData","AgebandID","minAge","maxAge","ScreeningInformation","quoteRequestWithRealData","quoteDetails","ResidenceID","TypePackageID","Destination","StartDate","EndDate","includeAnnualQuotes","includeUpsell","currencyID","schemaIDFilter","updatedQuoteResponse","selectedPlan","_formData$selectedQuo17","_formData$selectedQuo18","alterationIds","alterationsRequestWithRealData","updatedAlterationsResponse","_formData$selectedQuo19","_formData$selectedQuo20","updateError","idx","savePolicyResponse","savePolicyDetails","screeningQuestionAnswers","medicalScreeningReference","useDefaultAnswers","policySaved","policyID","certificate","documents","policyWording","summaryOfCover","keyFacts","ipid","IPID","_formData$travelers$9","validationErrors","emailResponse","emailPolicyDocuments","emailAddress","emailSent","emailError","paymentData","amount","paymentResponse","terracottaError","undefined","_paymentResponse$data","isPhaseValid","phase","travelersBasicValid","every","policyHolderContactValid","paymentValid","renderPhase1","htmlFor","disabled","tripTypeValue","TypePolicyName","country_name","country_id","onBlur","onFocus","suggestion","num","renderPhase2","_formData$selectedQuo22","_formData$selectedQuo23","_formData$selectedQuo24","cover","Limit","gridColumn","textAlign","padding","color","renderPhase3","_formData$selectedQuo25","_formData$selectedQuo26","display","justifyContent","alignItems","some","renderPhase4","_formData$selectedQuo27","calculateTripDuration","start","end","background","WebkitBackgroundClip","WebkitTextFillColor","fontSize","fontWeight","marginBottom","gap","gridTemplateColumns","marginTop","getIconAndColor","bgColor","border","borderRadius","transition","position","overflow","onMouseEnter","currentTarget","transform","boxShadow","borderColor","onMouseLeave","right","width","height","zIndex","flexShrink","flex","minWidth","lineHeight","Excess","_formData$selectedQuo28","_formData$selectedQuo29","addonAmount","renderPhase5","_formData$selectedQuo30","decodeQuestionText","textarea","createElement","innerHTML","decoded","renderPhase6","decodedQuestion","whiteSpace","yesMessage","noMessage","yesAction","yesActionText","fontStyle","noAction","noActionText","renderPhase7","margin","borderTop","src","alt","maxWidth","_value$match","preventDefault","textDecoration","renderPhase8","_formData$travelers$0","_formData$selectedQuo31","_formData$selectedQuo32","href","rel","renderPhaseContent","location","stopPropagation","decodedNoMessage","filteredNoMessage","_c","$RefreshReg$"],"sources":["C:/Users/laptop-123/TravelInsurance_Demo_2/src/pages/Quote.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\n// Import API service for database integration\nimport { createQuote, processPayment as apiProcessPayment, getAddonsByPolicyType } from '../services/apiService';\n// Import Terracotta service for insurance quotes\nimport TerracottaService, { \n  TerracottaQuoteResponse, \n  TerracottaPolicyType,\n  SummaryCover,\n  TerracottaQuoteWithAlterationsRequest,\n  TerracottaTraveler,\n  TerracottaContactDetails,\n  getResidenceID,\n  getTypePolicyID,\n  getAgebandID\n} from '../services/terracottaService';\n\n// Import jsPDF dynamically to avoid build issues\nconst generatePDF = async (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  try {\n    // Dynamic import of jsPDF\n    const jsPDF = (await import('jspdf')).default;\n    \n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleDateString('en-GB');\n    \n    // Set up fonts and styles\n    doc.setFontSize(20);\n    doc.text('TRAVEL INSURANCE POLICY', 20, 20);\n    \n    doc.setFontSize(14);\n    doc.text(`Policy Number: ${policyNumber}`, 20, 35);\n    doc.text(`Issue Date: ${currentDate}`, 20, 45);\n    \n    let yPos = 65;\n    \n    // Trip Information Section\n    doc.setFontSize(16);\n    doc.text('TRIP INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    const tripType = formData.tripType === 'single' ? 'Single Trip Insurance' : \n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance';\n    \n    doc.text(`Trip Type: ${tripType}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Country of Residence: ${formData.countryOfResidence}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Destination: ${formData.destination}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Departure: ${formatDateToEuropean(formData.startDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Return: ${formatDateToEuropean(formData.endDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Travelers: ${formData.numberOfTravelers}`, 20, yPos);\n    yPos += 20;\n    \n    // Traveler Information\n    doc.setFontSize(16);\n    doc.text('TRAVELER INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    formData.travelers.forEach((traveler: any, index: number) => {\n      if (yPos > 250) { // New page if needed\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.text(`${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}:`, 20, yPos);\n      yPos += 10;\n      doc.text(`Name: ${traveler.firstName} ${traveler.lastName}`, 20, yPos);\n      yPos += 8;\n      doc.text(`Age: ${traveler.age} years old`, 20, yPos);\n      yPos += 8;\n      doc.text(`Email: ${traveler.email}`, 20, yPos);\n      yPos += 8;\n      if (traveler.phone) {\n        doc.text(`Phone: ${traveler.phone}`, 20, yPos);\n        yPos += 8;\n      }\n      yPos += 10;\n    });\n    \n    // Selected Plan\n    if (formData.selectedQuote) {\n      if (yPos > 180) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('SELECTED INSURANCE PLAN', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      doc.text(`Plan: ${formData.selectedQuote.name}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Medical: ${formData.selectedQuote.coverage.medical}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Baggage: ${formData.selectedQuote.coverage.baggage}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Cancellation: ${formData.selectedQuote.coverage.cancellation}`, 20, yPos);\n      yPos += 15;\n      \n      // Add Included Features\n      if (formData.selectedQuote.features && formData.selectedQuote.features.length > 0) {\n        doc.text('Included Features:', 20, yPos);\n        yPos += 10;\n        formData.selectedQuote.features.forEach((feature: string) => {\n          if (yPos > 270) { // Check for page break\n            doc.addPage();\n            yPos = 20;\n          }\n          doc.text(`• ${feature}`, 25, yPos);\n          yPos += 8;\n        });\n        yPos += 10;\n      }\n    }\n    \n    // Additional Coverage\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      if (yPos > 220) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('ADDITIONAL COVERAGE', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      formData.additionalPolicies.forEach((policy: any) => {\n        if (yPos > 270) { // Check for page break\n          doc.addPage();\n          yPos = 20;\n        }\n        doc.text(`• ${policy.name} - €${policy.price.toFixed(2)}`, 25, yPos);\n        yPos += 8;\n      });\n      yPos += 15;\n    }\n    \n    // Premium Summary\n    if (yPos > 200) {\n      doc.addPage();\n      yPos = 20;\n    }\n    \n    doc.setFontSize(16);\n    doc.text('PREMIUM SUMMARY', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    doc.text(`Base Premium: €${formData.selectedQuote?.price}`, 20, yPos);\n    yPos += 10;\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      const additional = formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0);\n      doc.text(`Additional Policies: €${additional.toFixed(2)}`, 20, yPos);\n      yPos += 10;\n    }\n    doc.text('Taxes & Fees: Included', 20, yPos);\n    yPos += 10;\n    doc.text(`Total Premium: €${calculateTotalPrice().toFixed(2)}`, 20, yPos);\n    yPos += 20;\n    \n    doc.text('Emergency Contact: +30 6974907500', 20, yPos);\n    \n    // Save the PDF\n    doc.save(`Travel_Insurance_Policy_${policyNumber}.pdf`);\n    \n  } catch (error) {\n    console.error('PDF generation failed, falling back to HTML:', error);\n    // Fallback to HTML generation if PDF fails\n    generateHTMLPolicy(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  }\n};\n\nconst generateHTMLPolicy = (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  const currentDate = new Date().toLocaleDateString('en-GB');\n  \n  const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Travel Insurance Policy - ${policyNumber}</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\n        .section { margin-bottom: 25px; }\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\n        .info-row { margin: 8px 0; }\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\n        @media print { body { margin: 0; } }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>TRAVEL INSURANCE POLICY</h1>\n        <h2>Policy Number: ${policyNumber}</h2>\n        <p>Issue Date: ${currentDate}</p>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRIP INFORMATION</div>\n        <div class=\"info-row\"><strong>Trip Type:</strong> ${formData.tripType === 'single' ? 'Single Trip Insurance' : \n                        formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                        formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                        'Comprehensive Single Trip Insurance'}</div>\n        <div class=\"info-row\"><strong>Country of Residence:</strong> ${formData.countryOfResidence}</div>\n        <div class=\"info-row\"><strong>Destination:</strong> ${formData.destination}</div>\n        <div class=\"info-row\"><strong>Departure:</strong> ${formatDateToEuropean(formData.startDate)}</div>\n        <div class=\"info-row\"><strong>Return:</strong> ${formatDateToEuropean(formData.endDate)}</div>\n        <div class=\"info-row\"><strong>Travelers:</strong> ${formData.numberOfTravelers}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRAVELER INFORMATION</div>\n        ${formData.travelers.map((traveler: any, index: number) => `\n            <div class=\"traveler-block\">\n                <strong>${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}</strong>\n                <div class=\"info-row\"><strong>Name:</strong> ${traveler.firstName} ${traveler.lastName}</div>\n                <div class=\"info-row\"><strong>Age:</strong> ${traveler.age} years old</div>\n                <div class=\"info-row\"><strong>Email:</strong> ${traveler.email}</div>\n                ${traveler.phone ? `<div class=\"info-row\"><strong>Phone:</strong> ${traveler.phone}</div>` : ''}\n            </div>\n        `).join('')}\n    </div>\n    \n    ${formData.selectedQuote ? `\n    <div class=\"section\">\n        <div class=\"section-title\">SELECTED INSURANCE PLAN</div>\n        <div class=\"info-row\"><strong>Plan:</strong> ${formData.selectedQuote.name}</div>\n        <div class=\"info-row\"><strong>Medical Coverage:</strong> ${formData.selectedQuote.coverage.medical}</div>\n        <div class=\"info-row\"><strong>Baggage Coverage:</strong> ${formData.selectedQuote.coverage.baggage}</div>\n        <div class=\"info-row\"><strong>Trip Cancellation:</strong> ${formData.selectedQuote.coverage.cancellation}</div>\n        \n        ${formData.selectedQuote.features && formData.selectedQuote.features.length > 0 ? `\n        <div style=\"margin-top: 15px;\">\n            <strong>Included Features:</strong>\n            <ul>\n                ${formData.selectedQuote.features.map((feature: string) => `<li>${feature}</li>`).join('')}\n            </ul>\n        </div>\n        ` : ''}\n    </div>\n    ` : ''}\n    \n    ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n    <div class=\"section\">\n        <div class=\"section-title\">ADDITIONAL COVERAGE</div>\n        <ul>\n            ${formData.additionalPolicies.map((policy: any) => `<li>${policy.name} - €${policy.price.toFixed(2)}</li>`).join('')}\n        </ul>\n    </div>\n    ` : ''}\n    \n    <div class=\"section\">\n        <div class=\"section-title\">PREMIUM SUMMARY</div>\n        <div class=\"info-row\"><strong>Base Premium:</strong> €${formData.selectedQuote?.price}</div>\n        ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n        <div class=\"info-row\"><strong>Additional Policies:</strong> €${formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0).toFixed(2)}</div>\n        ` : ''}\n        <div class=\"info-row\"><strong>Taxes & Fees:</strong> Included</div>\n        <div class=\"info-row\"><strong>Total Premium:</strong> €${calculateTotalPrice().toFixed(2)}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"info-row\"><strong>Emergency Contact:</strong> +30 6974907500</div>\n        <div class=\"info-row\" style=\"margin-top: 20px; font-style: italic;\">\n            This document serves as proof of travel insurance coverage.\n        </div>\n    </div>\n    \n    <script>\n        window.onload = function() { window.print(); };\n        window.onafterprint = function() { window.close(); };\n    </script>\n</body>\n</html>`;\n\n  const printWindow = window.open('', '_blank', 'width=800,height=600');\n  if (printWindow) {\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }\n};\n\n// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean = (dateString: string): string => {\n  if (!dateString) return '';\n  // Parse the ISO date string directly to avoid timezone issues\n  const [year, month, day] = dateString.split('-');\n  return `${day}/${month}/${year}`;\n};\n\nconst calculateAgeFromDateOfBirth = (dateOfBirth: string): number => {\n  const birthDate = new Date(dateOfBirth);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  \n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  \n  return Math.max(0, age);\n};\n\ninterface TravelerInfo {\n  firstName: string;\n  lastName: string;\n  age: string;\n  email: string;\n  phone: string;\n  vaxId: string;\n  nationality: string;\n  title?: string;\n  dateOfBirth?: string;\n  gender?: string;\n}\n\ninterface QuoteOption {\n  id: string;\n  name: string;\n  type: 'basic' | 'standard' | 'premium';\n  price: number;\n  coverage: {\n    medical: string;\n    baggage: string;\n    cancellation: string;\n    activities: string[];\n  };\n  features: string[];\n  // Terracotta specific fields\n  terracottaQuoteId?: string;\n  schemaName?: string;\n  policyTypeName?: string;\n  policytypeName?: string; // Raw field from SOAP response\n  summaryOfCoverUrl?: string;\n  policyWordingUrl?: string;\n  currency?: string;\n  ipt?: number;\n  // Enhanced metadata fields\n  schemaID?: number;\n  destinationCategory?: string;\n  tripType?: string;\n  // Enhanced SOAP fields\n  residenceName?: string;\n  destinationName?: string;\n  packageName?: string;\n  typePackageName?: string;\n  isAnnual?: number;\n  isBestBuy?: number;\n  maxDaysPerTrip?: number;\n  coverLevel?: number;\n  discount?: number;\n  iconURL?: string;\n  helpFile?: string;\n  policytypeShortName?: string;\n  // Additional SOAP response fields\n  keyFactsUrl?: string;\n  policyTypeID?: number;\n  destinationID?: number;\n  packageID?: number;\n  screeningPremium?: number;\n  ipRate?: number;\n  netUW?: number;\n  wbComm?: number;\n  agentComm?: number;\n  // Additional fields from SOAP response\n  typePolicyName?: string;\n  isBestBuyText?: string;\n  SummaryCovers?: SummaryCover[];\n  // Document URLs from quote response\n  SI?: string;  // Summary of Cover URL\n  PW?: string;  // Policy Wording URL\n}\n\ninterface QuoteFormData {\n  // Trip Details\n  destination: string;\n  destinationCategory?: string; // Category determined from country match\n  startDate: string;\n  endDate: string;\n  tripType: 'single' | 'annual' | 'comprehensive' | 'longstay';\n  countryOfResidence: string;\n  \n  // Traveler Information\n  numberOfTravelers: number;\n  travelers: TravelerInfo[];\n  \n  // Selected Quote\n  selectedQuote: QuoteOption | null;\n  \n  // Additional Policies\n  additionalPolicies: AdditionalPolicy[];\n  \n  // Payment Details\n  paymentMethod: 'card' | 'bank' | 'paypal';\n  cardNumber: string;\n  expiryDate: string;\n  cvv: string;\n  billingAddress: {\n    street: string;\n    city: string;\n    postalCode: string;\n    country: string;\n  };\n}\n\ninterface AdditionalPolicy {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  icon: string;\n  category: string;\n  alterationId: string; // Terracotta alteration ID for SOAP calls\n}\n\ntype WizardPhase = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface QuoteProps {\n  onNavigate?: (page: string) => void;\n}\n\nconst Quote: React.FC<QuoteProps> = ({ onNavigate }) => {\n  const [currentPhase, setCurrentPhase] = useState<WizardPhase>(1);\n  const [formData, setFormData] = useState<QuoteFormData>({\n    destination: '',\n    destinationCategory: '',\n    startDate: '',\n    endDate: '',\n    tripType: 'single',\n    countryOfResidence: '',\n    numberOfTravelers: 1,\n    travelers: [\n      {\n        firstName: '',\n        lastName: '',\n        age: '',\n        email: '',\n        phone: '',\n        vaxId: '',\n        nationality: ''\n      }\n    ],\n    selectedQuote: null,\n    additionalPolicies: [],\n    paymentMethod: 'card',\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    billingAddress: {\n      street: '',\n      city: '',\n      postalCode: '',\n      country: ''\n    }\n  });\n\n  const [quoteOptions, setQuoteOptions] = useState<QuoteOption[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [policyNumber, setPolicyNumber] = useState<string>('');\n  const [policyDocuments, setPolicyDocuments] = useState<{\n    certificate?: string;\n    policyWording?: string;\n    summaryOfCover?: string;\n    keyFacts?: string;\n    ipid?: string;\n  }>({});\n  const [terracottaService] = useState<TerracottaService>(() => {\n    console.log('Creating TerracottaService instance...');\n    return TerracottaService.getInstance('4072', '111427');\n  });\n  const [screeningQuestions] = useState<any[]>([]);\n  const [screeningAnswers, setScreeningAnswers] = useState<{[key: number]: 'yes' | 'no'}>({});\n  const [isLoadingQuotes, setIsLoadingQuotes] = useState(false);\n  const [quoteError, setQuoteError] = useState<string>('');\n  const [availableProducts, setAvailableProducts] = useState<any[]>([]);\n  \n  // Policy types state\n  const [availablePolicyTypes, setAvailablePolicyTypes] = useState<TerracottaPolicyType[]>([]);\n  \n  // Policy type destinations state (Trip Types) - commented out as unused\n  // const [availablePolicyTypeDestinations] = useState<TerracottaPolicyTypeDestination[]>([]);\n  const [isLoadingPolicyTypeDestinations, setIsLoadingPolicyTypeDestinations] = useState(false);\n  \n  // Destination categories state\n  const [destinationCategories, setDestinationCategories] = useState<string[]>([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n  \n  // All countries with their categories for autocomplete\n  const [allCountriesWithCategories, setAllCountriesWithCategories] = useState<Array<{country: string, destination_category: string}>>([]);\n  const [destinationSuggestions, setDestinationSuggestions] = useState<string[]>([]);\n  const [showDestinationSuggestions, setShowDestinationSuggestions] = useState(false);\n  \n  // Expiry date validation error\n  const [expiryDateError, setExpiryDateError] = useState<string>('');\n  \n  // Help popup state\n  const [showHelpPopup, setShowHelpPopup] = useState(false);\n  const [countriesByCategory, setCountriesByCategory] = useState<{[key: string]: string[]}>({});\n  const [isLoadingCountries, setIsLoadingCountries] = useState(false);\n  \n  // Privacy Policy and Terms modal states\n  const [showPrivacyPolicy, setShowPrivacyPolicy] = useState(false);\n  const [showTermsAndConditions, setShowTermsAndConditions] = useState(false);\n  const [showGeneralConditions, setShowGeneralConditions] = useState(false);\n  const [generalConditionsData, setGeneralConditionsData] = useState<any[]>([]);\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [marketingEmailsAccepted, setMarketingEmailsAccepted] = useState(false);\n  \n  // Countries of residence state\n  const [countriesOfResidence, setCountriesOfResidence] = useState<{country_id: number, country_name: string}[]>([]);\n  const [isLoadingCountriesOfResidence, setIsLoadingCountriesOfResidence] = useState(false);\n  \n  // Addons state - fetched from database based on selected policy type\n  const [availableAdditionalPolicies, setAvailableAdditionalPolicies] = useState<AdditionalPolicy[]>([]);\n  const [isLoadingAddons, setIsLoadingAddons] = useState(false);\n  \n  // Store the total GrossPrice from SOAP alterations response\n  const [totalGrossPriceWithAddons, setTotalGrossPriceWithAddons] = useState<number | null>(null);\n  \n  // Loading state for addon operations - track which specific addon is being processed\n  const [processingAddonId, setProcessingAddonId] = useState<string | null>(null);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  \n\n  // Load available Terracotta products on component mount\n  useEffect(() => {\n    const loadTerracottaProducts = async () => {\n      try {\n        // setIsLoadingProducts(true);\n        console.log('Loading Terracotta products...');\n        const productResponse = await terracottaService.getUserProductList();\n        console.log('Terracotta products loaded:', productResponse);\n        console.log(`✅ Successfully loaded ${productResponse.Schemas?.length || 0} products for your account`);\n        setAvailableProducts(productResponse.Schemas || []);\n        // setIsLoadingProducts(false);\n      } catch (error) {\n        console.error('Error loading Terracotta products:', error);\n        // setIsLoadingProducts(false);\n        // Don't show error to user, just log it - we'll use fallback\n      }\n    };\n\n    loadTerracottaProducts();\n  }, [terracottaService]);\n\n  // Load policy types when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        // setIsLoadingPolicyTypes(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema)\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        for (const product of availableProducts) {\n          try {\n            console.log(`Loading policy types for schema ${product.SchemaID}: ${product.SchemaName}`);\n            const policyResponse = await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());\n            console.log(`Policy types for schema ${product.SchemaID}:`, policyResponse);\n            \n            // Add schema context to each policy type\n            const policyTypesWithSchema = policyResponse.PolicyTypes.map(policyType => ({\n              ...policyType,\n              SchemaID: product.SchemaID,\n              SchemaName: product.SchemaName\n            }));\n            \n            allPolicyTypes.push(...policyTypesWithSchema);\n          } catch (error) {\n            console.error(`Error loading policy types for schema ${product.SchemaID}:`, error);\n          }\n        }\n        \n        // Remove duplicates based on TypePolicyID\n        const uniquePolicyTypes = allPolicyTypes.filter((policyType, index, self) => \n          index === self.findIndex(p => p.TypePolicyID === policyType.TypePolicyID)\n        );\n        \n        setAvailablePolicyTypes(uniquePolicyTypes);\n        console.log(`✅ Successfully loaded ${uniquePolicyTypes.length} unique policy types`);\n        // setIsLoadingPolicyTypes(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        // setIsLoadingPolicyTypes(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Load policy types (Trip Types) when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        setIsLoadingPolicyTypeDestinations(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema) - Using schema 717 as specified\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        // Use schema 717 as specified in the requirement\n        const schemaToUse = availableProducts.find(p => p.SchemaID === 717) || availableProducts[0];\n        \n        try {\n          console.log(`Loading policy types for schema ${schemaToUse.SchemaID}: ${schemaToUse.SchemaName}`);\n          const policyTypeResponse = await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());\n          console.log(`Policy types for schema ${schemaToUse.SchemaID}:`, policyTypeResponse);\n          \n          allPolicyTypes.push(...policyTypeResponse.PolicyTypes);\n        } catch (error) {\n          console.error(`Error loading policy types for schema ${schemaToUse.SchemaID}:`, error);\n        }\n        \n        setAvailablePolicyTypes(allPolicyTypes);\n        console.log(`✅ Successfully loaded ${allPolicyTypes.length} policy types`);\n        setIsLoadingPolicyTypeDestinations(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypeDestinations(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Show a brief message when end date is cleared due to start date change\n  useEffect(() => {\n    if (formData.startDate && !formData.endDate) {\n      // This effect will run when start date exists but end date is empty\n      // We could add a toast notification here if needed\n    }\n  }, [formData.startDate, formData.endDate]);\n\n  // Load countries of residence on component mount\n  useEffect(() => {\n    const loadCountriesOfResidence = async () => {\n      try {\n        setIsLoadingCountriesOfResidence(true);\n        console.log('Loading countries of residence...');\n        const response = await fetch('http://localhost:5002/api/countries');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setCountriesOfResidence(data.countries);\n          console.log('✅ Countries of residence loaded:', data.countries.length, 'countries');\n        } else {\n          console.error('❌ Failed to load countries of residence:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries of residence:', error);\n      } finally {\n        setIsLoadingCountriesOfResidence(false);\n      }\n    };\n\n    loadCountriesOfResidence();\n  }, []);\n\n  // Load all countries with their categories for autocomplete\n  useEffect(() => {\n    const loadAllCountries = async () => {\n      try {\n        setIsLoadingCategories(true);\n        console.log('Loading all countries with destination categories...');\n        const response = await fetch('http://localhost:5002/api/destination-categories/all-countries');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setAllCountriesWithCategories(data.countries);\n          console.log('✅ Countries with categories loaded:', data.countries.length);\n        } else {\n          console.error('❌ Failed to load countries:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries:', error);\n      } finally {\n        setIsLoadingCategories(false);\n      }\n    };\n\n    loadAllCountries();\n  }, []);\n\n  // Load countries for each category when categories are loaded\n  useEffect(() => {\n    const loadCountriesForCategories = async () => {\n      if (destinationCategories.length === 0) return;\n      \n      try {\n        setIsLoadingCountries(true);\n        const countriesData: {[key: string]: string[]} = {};\n        \n        // Load countries for each category\n        for (const category of destinationCategories) {\n          try {\n            const response = await fetch(`http://localhost:5002/api/destination-categories/${encodeURIComponent(category)}/countries`);\n            const data = await response.json();\n            \n            if (data.status === 'success') {\n              countriesData[category] = data.countries;\n            }\n          } catch (error) {\n            console.error(`Error loading countries for ${category}:`, error);\n            countriesData[category] = [];\n          }\n        }\n        \n        setCountriesByCategory(countriesData);\n      } catch (error) {\n        console.error('Error loading countries:', error);\n      } finally {\n        setIsLoadingCountries(false);\n      }\n    };\n\n    loadCountriesForCategories();\n  }, [destinationCategories]);\n\n  // Generate quotes when component mounts or when form data is complete\n  useEffect(() => {\n    const generateQuotesIfNeeded = async () => {\n      // Only generate quotes if we have basic form data and we're in phase 2\n      if (currentPhase === 2 && quoteOptions.length === 0) {\n        console.log('🔄 Generating quotes on component load...');\n        try {\n          const options = await generateQuoteOptions();\n          setQuoteOptions(options);\n        } catch (error) {\n          console.error('Error generating quotes:', error);\n        }\n      }\n    };\n\n    generateQuotesIfNeeded();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPhase, quoteOptions.length]);\n\n  // Helper function to normalize SOAP policy type names to match database\n  const normalizePolicyTypeName = (soapPolicyType: string): string => {\n    if (!soapPolicyType) return '';\n    \n    // Trim and normalize whitespace\n    let normalized = soapPolicyType.trim();\n    \n    // Map common SOAP response values to database policy type names\n    const mappings: { [key: string]: string } = {\n      // Annual Multi-Trip variants (handle various capitalizations)\n      'Silver Annual Multi-Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi-Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi-Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi-trip': 'Silver Annual Multi-Trip', // lowercase 't'\n      'Gold Annual Multi-trip': 'Gold Annual Multi-Trip', // lowercase 't'\n      'Essential Annual Multi-trip': 'Essential Annual Multi-Trip', // lowercase 't'\n      \n      // Single Trip variants\n      'Silver Single Trip': 'Silver Single Trip',\n      'Gold Single Trip': 'Gold Single Trip',\n      'Essential Single Trip': 'Essential Single Trip',\n      'Value Single Trip': 'Value Single Trip',\n      \n      // Long Stay variants\n      'Long Stay Standard': 'Long Stay Standard',\n      'Long Stay Study Abroad': 'Long Stay Study Abroad',\n      'Longstay Standard': 'Long Stay Standard',\n      'Longstay Study Abroad': 'Long Stay Study Abroad',\n    };\n    \n    // Try exact match first (case-insensitive)\n    for (const [key, value] of Object.entries(mappings)) {\n      if (normalized.toLowerCase() === key.toLowerCase()) {\n        console.log(`✅ Exact match found! Normalized policy type: \"${normalized}\" -> \"${value}\"`);\n        return value;\n      }\n    }\n    \n    console.log(`⚠️ No exact mapping found for: \"${normalized}\", trying pattern matching...`);\n    \n    // Try pattern matching if exact match fails\n    const lowerNormalized = normalized.toLowerCase();\n    \n    // Silver Annual Multi-Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Annual Multi-Trip\"`);\n      return 'Silver Annual Multi-Trip';\n    }\n    \n    // Gold Annual Multi-Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Annual Multi-Trip\"`);\n      return 'Gold Annual Multi-Trip';\n    }\n    \n    // Essential Annual Multi-Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Annual Multi-Trip\"`);\n      return 'Essential Annual Multi-Trip';\n    }\n    \n    // Silver Single Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Single Trip\"`);\n      return 'Silver Single Trip';\n    }\n    \n    // Gold Single Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Single Trip\"`);\n      return 'Gold Single Trip';\n    }\n    \n    // Essential Single Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Single Trip\"`);\n      return 'Essential Single Trip';\n    }\n    \n    // Value Single Trip patterns\n    if (lowerNormalized.includes('value') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Value Single Trip\"`);\n      return 'Value Single Trip';\n    }\n    \n    // Long Stay patterns\n    if (lowerNormalized.includes('long') && lowerNormalized.includes('stay')) {\n      if (lowerNormalized.includes('study') || lowerNormalized.includes('abroad')) {\n        console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Study Abroad\"`);\n        return 'Long Stay Study Abroad';\n      }\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Standard\"`);\n      return 'Long Stay Standard';\n    }\n    \n    // If no match found, return original and log warning\n    console.warn(`⚠️ No mapping found for policy type: \"${normalized}\"`);\n    return normalized;\n  };\n\n  // Fetch addons when entering Step 3 (Add-ons phase)\n  useEffect(() => {\n    const fetchAddons = async () => {\n      // Only fetch addons when we're in Step 3 (Add-ons phase)\n      if (currentPhase !== 3) {\n        console.log('ℹ️ Not in Step 3, skipping addon fetch (current phase:', currentPhase, ')');\n        return;\n      }\n\n      // Debug: Log the entire selected quote to see all available fields\n      console.log('🔍 DEBUG - Selected Quote:', formData.selectedQuote);\n      console.log('📍 Current Phase:', currentPhase, '- Fetching add-ons for Step 3');\n      \n      // Only fetch if we have a selected quote with a policy type name\n      // IMPORTANT: prioritize policytypeName first as it contains the full name (e.g., \"Silver Annual Multi-Trip\")\n      // policyTypeName often just contains \"Annual Multi-Trip\" without the tier (Silver/Gold/Essential)\n      const rawPolicyTypeName = formData.selectedQuote?.policytypeName || formData.selectedQuote?.policyTypeName || formData.selectedQuote?.typePolicyName;\n      \n      console.log('🔍 DEBUG - Policy type field values:', {\n        policyTypeName: formData.selectedQuote?.policyTypeName,\n        policytypeName: formData.selectedQuote?.policytypeName,\n        typePolicyName: formData.selectedQuote?.typePolicyName,\n        rawPolicyTypeName: rawPolicyTypeName,\n        selectedField: formData.selectedQuote?.policytypeName ? 'policytypeName' : \n                       formData.selectedQuote?.policyTypeName ? 'policyTypeName' : 'typePolicyName'\n      });\n      \n      if (rawPolicyTypeName) {\n        // Normalize the policy type name to match database\n        const policyTypeName = normalizePolicyTypeName(rawPolicyTypeName);\n        console.log('📋 Fetching addons for policy type:', policyTypeName, '(raw:', rawPolicyTypeName, ')');\n        setIsLoadingAddons(true);\n        \n        try {\n          const response = await getAddonsByPolicyType(policyTypeName);\n          \n          if (response.status === 'success') {\n            const addonsData = (response as any).addons || [];\n            console.log(`✅ Loaded ${addonsData.length} addons for ${policyTypeName}`);\n            \n            // Transform database addons to AdditionalPolicy format\n            const transformedAddons: AdditionalPolicy[] = addonsData.map((addon: any) => {\n              // Determine icon based on addon type\n              const getIcon = (name: string) => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                if (lowerName.includes('business')) return '💼';\n                if (lowerName.includes('golf')) return '⛳';\n                if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                if (lowerName.includes('wedding')) return '💍';\n                if (lowerName.includes('event')) return '🎫';\n                if (lowerName.includes('cancellation')) return '❌';\n                if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                if (lowerName.includes('accident')) return '🚑';\n                if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                if (lowerName.includes('emigration')) return '🌍';\n                if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                return '📋'; // Default icon\n              };\n              \n              // Determine category based on addon type\n              const getCategory = (name: string) => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                if (lowerName.includes('business')) return 'Business';\n                if (lowerName.includes('cancellation')) return 'Cancellation';\n                if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                return 'Other';\n              };\n              \n              return {\n                id: `addon-${addon.alteration_id}`,\n                name: addon.additional_cover_name,\n                description: addon.additional_cover_detail || '',\n                price: 0, // Price will be updated from SOAP response\n                icon: getIcon(addon.additional_cover_name),\n                category: getCategory(addon.additional_cover_name),\n                alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n              };\n            });\n            \n            setAvailableAdditionalPolicies(transformedAddons);\n          } else {\n            console.warn('No addons found for policy type:', policyTypeName);\n            setAvailableAdditionalPolicies([]);\n          }\n        } catch (error) {\n          console.error('Error fetching addons:', error);\n          // Keep empty array on error\n          setAvailableAdditionalPolicies([]);\n        } finally {\n          setIsLoadingAddons(false);\n        }\n      } else {\n        // No policy type selected, try to extract from quote name as fallback\n        if (formData.selectedQuote?.name) {\n          console.warn('⚠️ No policy type field found, attempting to extract from quote name:', formData.selectedQuote.name);\n          \n          // Try to extract policy type from the name field\n          // Format is usually: \"SchemaName - PolicyTypeName\"\n          const nameParts = formData.selectedQuote.name.split(' - ');\n          if (nameParts.length > 1) {\n            const extractedPolicyType = nameParts[1].trim();\n            console.log('🔍 Extracted policy type from name:', extractedPolicyType);\n            \n            const normalizedType = normalizePolicyTypeName(extractedPolicyType);\n            if (normalizedType) {\n              setIsLoadingAddons(true);\n              try {\n                const response = await getAddonsByPolicyType(normalizedType);\n                if (response.status === 'success') {\n                  const addonsData = (response as any).addons || [];\n                  console.log(`✅ Loaded ${addonsData.length} addons using extracted type: ${normalizedType}`);\n                  \n                  const transformedAddons: AdditionalPolicy[] = addonsData.map((addon: any) => {\n                    const getIcon = (name: string) => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                      if (lowerName.includes('business')) return '💼';\n                      if (lowerName.includes('golf')) return '⛳';\n                      if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                      if (lowerName.includes('wedding')) return '💍';\n                      if (lowerName.includes('event')) return '🎫';\n                      if (lowerName.includes('cancellation')) return '❌';\n                      if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                      if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                      if (lowerName.includes('accident')) return '🚑';\n                      if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                      if (lowerName.includes('emigration')) return '🌍';\n                      if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                      if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                      return '📋';\n                    };\n                    \n                    const getCategory = (name: string) => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                      if (lowerName.includes('business')) return 'Business';\n                      if (lowerName.includes('cancellation')) return 'Cancellation';\n                      if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                      if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                      if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                      return 'Other';\n                    };\n                    \n                    return {\n                      id: `addon-${addon.alteration_id}`,\n                      name: addon.additional_cover_name,\n                      description: addon.additional_cover_detail || '',\n                      price: 0, // Price will be updated from SOAP response\n                      icon: getIcon(addon.additional_cover_name),\n                      category: getCategory(addon.additional_cover_name),\n                      alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n                    };\n                  });\n                  \n                  setAvailableAdditionalPolicies(transformedAddons);\n                }\n              } catch (error) {\n                console.error('Error fetching addons with extracted type:', error);\n                setAvailableAdditionalPolicies([]);\n              } finally {\n                setIsLoadingAddons(false);\n              }\n              return;\n            }\n          }\n        }\n        \n        console.warn('⚠️ No policy type found in selected quote, clearing addons');\n        setAvailableAdditionalPolicies([]);\n      }\n    };\n\n    fetchAddons();\n  }, [currentPhase, formData.selectedQuote]); // Trigger when entering Step 3 OR when quote changes\n\n  // Reset addons and pricing when the selected quote changes\n  useEffect(() => {\n    if (formData.selectedQuote) {\n      console.log('Quote changed, resetting addons and pricing...');\n      \n      // Clear existing addons\n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: []\n      }));\n      \n      // Reset SOAP pricing\n      setTotalGrossPriceWithAddons(null);\n      \n      // Clear available addons to force refresh\n      setAvailableAdditionalPolicies([]);\n      \n      console.log('✅ Addons and pricing reset for new quote');\n    }\n  }, [formData.selectedQuote?.id, formData.selectedQuote]); // Only trigger when the quote ID actually changes\n\n  // REMOVED: Auto-loading sample quotes - now using real SOAP response\n  // useEffect(() => {\n  //   if (currentPhase === 2) {\n  //     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n  //     const sampleQuotes = generateSampleSOAPQuotes();\n  //     setQuoteOptions(sampleQuotes);\n  //     setIsLoadingQuotes(false);\n  //   }\n  // }, [currentPhase]);\n\n  const generateQuoteOptions = useCallback(async (): Promise<QuoteOption[]> => {\n    setIsLoadingQuotes(true);\n    setQuoteError('');\n\n    try {\n      console.log('🚀 Getting real quotes from Terracotta SOAP API...');\n      console.log('Form data:', formData);\n      \n      // Make a single SOAP request to get all available quotes\n      const terracottaRequest = TerracottaService.convertToTerracottaFormat(formData, availablePolicyTypes);\n      console.log('SOAP Request:', terracottaRequest);\n      \n      // Get quotes from Terracotta SOAP API\n      const response: TerracottaQuoteResponse = await terracottaService.provideQuotation(terracottaRequest);\n      console.log('SOAP Response:', response);\n      \n      console.log('📊 SOAP Response Message:', response.Message);\n      console.log('📊 Quote Results Count:', response.quoteResults?.length || 0);\n      \n      if (response.quoteResults && response.quoteResults.length > 0) {\n        console.log('📊 Processing SOAP results:', response.quoteResults);\n        // Convert SOAP response directly to QuoteOption format\n        const realQuotes: QuoteOption[] = response.quoteResults.map((result, index) => {\n          console.log(`Processing quote ${index + 1}:`, result);\n          return {\n            id: `soap-${result.QuoteID}`,\n            name: `${result.schemaName} - ${result.policytypeName || result.typePolicyName}`,\n            type: result.isBestBuy === 1 ? 'premium' : result.GrossPrice > 100 ? 'standard' : 'basic',\n            price: result.GrossPrice || 0,\n            coverage: {\n              medical: result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : '€2,000,000',\n              baggage: '€1,000', // This would ideally come from SOAP response\n              cancellation: '€2,000', // This would ideally come from SOAP response\n              activities: ['Standard activities', 'Adventure sports']\n            },\n            features: [\n              '24/7 Emergency Assistance',\n              'Medical Coverage',\n              'Trip Cancellation',\n              'Baggage Protection',\n              ...(result.isAnnual === 1 ? ['Annual Multi-Trip Coverage'] : []),\n              ...(result.isBestBuy === 1 ? ['Best Buy Option'] : []),\n              ...(result.maxDaysPerTrip > 0 ? [`Up to ${result.maxDaysPerTrip} days per trip`] : [])\n            ],\n            // Real SOAP response data\n            terracottaQuoteId: result.QuoteID,\n            schemaName: result.schemaName,\n            policytypeName: result.policytypeName,\n            policyTypeName: result.typePolicyName || result.policytypeName,\n            typePolicyName: result.typePolicyName || result.policytypeName,\n            summaryOfCoverUrl: result.SI,\n            policyWordingUrl: result.PW,\n            currency: result.currency,\n            ipt: result.IPT,\n            // Complete SOAP response fields\n            schemaID: result.SchemaID,\n            destinationCategory: result.destinationName,\n            tripType: formData.tripType,\n            residenceName: result.residenceName,\n            destinationName: result.destinationName,\n            packageName: result.packageName,\n            typePackageName: result.typePackageName,\n            isAnnual: result.isAnnual,\n            isBestBuy: result.isBestBuy,\n            isBestBuyText: result.isBestBuyText,\n            maxDaysPerTrip: result.maxDaysPerTrip,\n            coverLevel: result.coverLevel,\n            discount: result.Discount,\n            iconURL: result.IconURL,\n            helpFile: result.HelpFile,\n            policytypeShortName: result.policytypeShortName,\n            // Additional SOAP fields\n            keyFactsUrl: result.KF,\n            policyTypeID: result.PolicyTypeID,\n            destinationID: result.DestinationID,\n            packageID: result.PackageID,\n            screeningPremium: result.screeningPremium,\n            ipRate: result.IPTRate,\n            netUW: result.netUW,\n            wbComm: result.wbComm,\n            agentComm: result.agentComm,\n            SummaryCovers: result.SummaryCovers || [],\n            // Document URLs\n            SI: result.SI,\n            PW: result.PW\n          };\n        });\n        \n        console.log(`✅ Received ${realQuotes.length} real quotes from Terracotta SOAP API`);\n        \n        // Sort by IPT (highest first) and take top 3\n        const sortedByIPT = realQuotes.sort((a, b) => {\n          const iptA = a.ipt || 0;\n          const iptB = b.ipt || 0;\n          return iptB - iptA; // Descending order (highest IPT first)\n        });\n        \n        const top3Quotes = sortedByIPT.slice(0, 3);\n        \n        // Sort the top 3 by price (ascending - least expensive to most expensive)\n        const sortedByPrice = top3Quotes.sort((a, b) => a.price - b.price);\n        \n        console.log(`📊 Filtered to top 3 quotes with highest IPT, sorted by price:`, sortedByPrice.map(q => ({ \n          name: q.name, \n          price: q.price,\n          ipt: q.ipt \n        })));\n        \n        setIsLoadingQuotes(false);\n        return sortedByPrice;\n      } else {\n        console.log('⚠️ No quotes in SOAP response, using sample data');\n        console.log('⚠️ Response message:', response.Message);\n        console.log('⚠️ This might be due to:');\n        console.log('   - Incorrect API credentials');\n        console.log('   - Invalid parameter values');\n        console.log('   - API restrictions or downtime');\n        console.log('   - Date range issues (past dates)');\n        setIsLoadingQuotes(false);\n        return generateSampleSOAPQuotes();\n      }\n      \n    } catch (error) {\n      console.error('❌ Error getting real SOAP quotes:', error);\n      setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');\n      setIsLoadingQuotes(false);\n      \n      // Fallback to sample SOAP response data\n      console.log('🔄 Using sample SOAP response data');\n      return generateSampleSOAPQuotes();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formData, availablePolicyTypes, terracottaService]);\n\n  // Generate sample quotes using your SOAP response data\n  const generateSampleSOAPQuotes = (): QuoteOption[] => {\n    const allSampleQuotes: QuoteOption[] = [\n      {\n        id: 'soap-12345',\n        name: 'TravelSafe Basic 2024 - Single Trip Travel Insurance',\n        type: 'premium' as const, // Best buy\n        price: 72.60,\n        coverage: {\n          medical: '€5,000,000', // Cover level 5\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Best Buy Option',\n          'Up to 90 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12345\n        terracottaQuoteId: '12345',\n        schemaName: 'TravelSafe Basic 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12345.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12345.pdf',\n        currency: 'EUR',\n        ipt: 12.60,\n        // Complete SOAP response fields\n        schemaID: 683,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Standard',\n        typePackageName: 'Standard Package',\n        isAnnual: 0,\n        isBestBuy: 1,\n        isBestBuyText: 'Best Value Option',\n        maxDaysPerTrip: 90,\n        coverLevel: 5,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/basic.png',\n        helpFile: 'https://terracotta.example.com/help/12345.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12345.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 1,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 60.00,\n        wbComm: 5.40,\n        agentComm: 7.20\n      },\n      {\n        id: 'soap-12346',\n        name: 'TravelSafe Premium 2024 - Single Trip Travel Insurance',\n        type: 'standard' as const,\n        price: 108.90,\n        coverage: {\n          medical: '€10,000,000', // Cover level 10\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Up to 120 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12346\n        terracottaQuoteId: '12346',\n        schemaName: 'TravelSafe Premium 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12346.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12346.pdf',\n        currency: 'EUR',\n        ipt: 18.90,\n        // Complete SOAP response fields\n        schemaID: 717,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Premium',\n        typePackageName: 'Premium Package',\n        isAnnual: 0,\n        isBestBuy: 0,\n        isBestBuyText: '',\n        maxDaysPerTrip: 120,\n        coverLevel: 10,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/premium.png',\n        helpFile: 'https://terracotta.example.com/help/12346.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12346.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 2,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 90.00,\n        wbComm: 8.10,\n        agentComm: 10.80\n      }\n    ];\n    \n    // Sort by IPT (highest first) and take top 3\n    const sortedByIPT = allSampleQuotes.sort((a, b) => {\n      const iptA = a.ipt || 0;\n      const iptB = b.ipt || 0;\n      return iptB - iptA; // Descending order (highest IPT first)\n    });\n    \n    const top3 = sortedByIPT.slice(0, 3);\n    \n    // Sort the top 3 by price (ascending - least expensive to most expensive)\n    return top3.sort((a, b) => a.price - b.price);\n  };\n\n\n\n  // Helper function to calculate coverage levels based on destination and trip type (fallback)\n  const calculateCoverageLevels = (destination: string, tripType: string, price: number) => {\n    const baseMedical = tripType === 'annual' ? '€5,000,000' : tripType === 'longstay' ? '€3,000,000' : '€2,000,000';\n    const baseBaggage = '€1,000';\n    const baseCancellation = '€2,000';\n    \n    // Enhance coverage based on destination category\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n    \n    // Enhance based on price level\n    if (price > 200) {\n      medicalMultiplier *= 2;\n      baggageMultiplier *= 2;\n      cancellationMultiplier *= 2;\n    } else if (price > 100) {\n      medicalMultiplier *= 1.5;\n      baggageMultiplier *= 1.5;\n      cancellationMultiplier *= 1.5;\n    }\n    \n    return {\n      medical: `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to determine quote type based on price and index\n  const determineQuoteType = (price: number, index: number): 'basic' | 'standard' | 'premium' => {\n    if (price < 50) return 'basic';\n    if (price < 150) return 'standard';\n    return 'premium';\n  };\n\n  // Helper function to generate features based on destination and trip type\n  const generateFeaturesForDestination = (destination: string, tripType: string): string[] => {\n    const baseFeatures = [\n      '24/7 Emergency Assistance',\n      'Medical Coverage',\n      'Trip Cancellation',\n      'Baggage Protection'\n    ];\n    \n    const destinationFeatures: string[] = [];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    \n    if (tripType === 'annual') {\n      destinationFeatures.push('Multiple Trip Coverage', 'Annual Policy Benefits', 'Unlimited Trips');\n    } else if (tripType === 'longstay') {\n      destinationFeatures.push('Extended Stay Coverage', 'Long Term Medical', 'Extended Baggage Protection', 'Long Stay Benefits');\n    } else if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    \n    return [...baseFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to generate activities based on destination\n  const generateActivitiesForDestination = (destination: string): string[] => {\n    const baseActivities = ['Standard activities'];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      return ['Standard activities', 'Adventure sports', 'Extreme sports', 'Water sports', 'Winter sports'];\n    } else if (destination.toLowerCase().includes('europe')) {\n      return ['Standard activities', 'Adventure sports', 'Winter sports'];\n    }\n    \n    return baseActivities;\n  };\n\n  // Enhanced mock quote generation that simulates Terracotta-style data\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const generateEnhancedMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    // Generate multiple mock quotes based on available schemas\n    const mockQuotes: QuoteOption[] = [];\n    \n    // Create quotes for each available schema if we have them, otherwise use defaults\n    const schemasToUse = availableProducts.length > 0 ? availableProducts : [\n      { SchemaID: 683, SchemaName: 'TravelSafe Basic' },\n      { SchemaID: 717, SchemaName: 'TravelSafe Premium' }\n    ];\n\n    schemasToUse.forEach((schema, index) => {\n      const price = Math.round((basePrice + (days * dailyRate) + (index * 30)) * formData.numberOfTravelers * tripMultiplier);\n      const coverage = calculateCoverageLevels(formData.destination, formData.tripType, price);\n      const features = generateFeaturesForDestination(formData.destination, formData.tripType);\n      const quoteType = determineQuoteType(price, index);\n\n      mockQuotes.push({\n        id: `mock-${schema.SchemaID}-${index}`,\n        name: `${schema.SchemaName} - ${formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip'}`,\n        type: quoteType,\n        price: price,\n        coverage: coverage,\n        features: features,\n        // Terracotta specific fields (mock)\n        terracottaQuoteId: `mock-${schema.SchemaID}-${Date.now()}`,\n        schemaName: schema.SchemaName,\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/mock.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/mock.pdf',\n        currency: 'EUR',\n        ipt: Math.round(price * 0.21), // 21% IPT\n        // Additional metadata\n        schemaID: schema.SchemaID,\n        destinationCategory: formData.destination,\n        tripType: formData.tripType\n      });\n    });\n\n    return mockQuotes;\n  };\n\n  // Legacy mock quotes (kept for backward compatibility)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const generateLegacyMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    const options: QuoteOption[] = [\n      {\n        id: 'terracotta-basic',\n        name: 'Terracotta TravelSafe Basic',\n        type: 'basic',\n        price: Math.round((basePrice + (days * dailyRate)) * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€5,000,000' : '€2,000,000',\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities']\n        },\n        features: [\n          'Emergency Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          '24/7 Assistance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-001`,\n        schemaName: 'TravelSafe Basic',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/basic.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/basic.pdf',\n        currency: 'EUR',\n        ipt: 15.50\n      },\n      {\n        id: 'terracotta-standard',\n        name: 'Terracotta TravelSafe Standard',\n        type: 'standard',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.3 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€5,000,000',\n          baggage: '€2,500',\n          cancellation: '€5,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          'Enhanced Medical Coverage',\n          'Trip Cancellation & Curtailment',\n          'Enhanced Baggage Protection',\n          'Adventure Sports Coverage',\n          '24/7 Assistance',\n          'Travel Delay Compensation'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-002`,\n        schemaName: 'TravelSafe Standard',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/standard.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/standard.pdf',\n        currency: 'EUR',\n        ipt: 22.75\n      },\n      {\n        id: 'terracotta-premium',\n        name: 'Terracotta TravelSafe Premium',\n        type: 'premium',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.8 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€10,000,000',\n          baggage: '€5,000',\n          cancellation: '€10,000',\n          activities: ['All activities', 'Extreme sports', 'Winter sports']\n        },\n        features: [\n          'Maximum Medical Coverage',\n          'Comprehensive Trip Protection',\n          'Premium Baggage Coverage',\n          'All Sports & Activities',\n          '24/7 VIP Assistance',\n          'Travel Delay & Missed Connections',\n          'Personal Liability Coverage',\n          'Emergency Cash Advance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-003`,\n        schemaName: 'TravelSafe Premium',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/premium.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/premium.pdf',\n        currency: 'EUR',\n        ipt: 35.00\n      }\n    ];\n\n    return options;\n  };\n\n  // Custom Date Picker Component\n  const CustomDatePicker: React.FC<{\n    id: string;\n    value: string;\n    onChange: (value: string) => void;\n    placeholder: string;\n    required?: boolean;\n    minDate?: string; // ISO date string for minimum selectable date\n  }> = ({ id, value, onChange, placeholder, required, minDate }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentDate, setCurrentDate] = useState(() => {\n      // Initialize with selected date if available, otherwise current date\n      return value ? new Date(value) : new Date();\n    });\n    const pickerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (pickerRef.current && !pickerRef.current.contains(event.target as Node)) {\n          setIsOpen(false);\n        }\n      };\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n      }\n\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [isOpen]);\n\n    // Update current date when value changes to show the correct month\n    useEffect(() => {\n      if (value) {\n        setCurrentDate(new Date(value));\n      }\n    }, [value]);\n\n    // Helper function to check if a date is valid (not in past and not before minDate)\n    const isDateValid = (date: Date): boolean => {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n      \n      // Reset the input date to start of day for accurate comparison\n      const inputDate = new Date(date);\n      inputDate.setHours(0, 0, 0, 0);\n      \n      // Check if date is in the past\n      if (inputDate < today) {\n        return false;\n      }\n      \n      // Check if date is before minimum date\n      if (minDate) {\n        const minDateObj = new Date(minDate);\n        minDateObj.setHours(0, 0, 0, 0);\n        if (inputDate < minDateObj) {\n          return false;\n        }\n      }\n      \n      return true;\n    };\n\n    const generateCalendar = () => {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const days = [];\n      \n      // Add empty cells for days before the first day of the month\n      for (let i = 0; i < startingDayOfWeek; i++) {\n        days.push(<div key={`empty-${i}`} className=\"calendar-day empty\"></div>);\n      }\n\n      // Add days of the month\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = new Date(year, month, day);\n        // Create ISO string manually to avoid timezone issues\n        const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        const isSelected = value === dateString;\n        const isToday = new Date().toDateString() === date.toDateString();\n        const isValid = isDateValid(date);\n\n        days.push(\n          <div\n            key={day}\n            className={`calendar-day ${isSelected ? 'selected' : ''} ${isToday ? 'today' : ''} ${!isValid ? 'disabled' : ''}`}\n            onClick={() => {\n              if (isValid) {\n                onChange(dateString);\n                setIsOpen(false);\n              }\n            }}\n            style={{\n              cursor: isValid ? 'pointer' : 'not-allowed',\n              opacity: isValid ? 1 : 0.4\n            }}\n          >\n            {day}\n          </div>\n        );\n      }\n\n      return days;\n    };\n\n    const navigateMonth = (direction: number) => {\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n    };\n\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    return (\n      <div className=\"custom-date-picker\" ref={pickerRef}>\n        <div className=\"date-input-wrapper\">\n          <input\n            type=\"text\"\n            id={id}\n            value={value ? formatDateToEuropean(value) : ''}\n            onChange={(e) => {\n              const formattedValue = formatDateInput(e.target.value);\n              const isoDate = formattedValue.length === 10 ? convertToISO(formattedValue) : '';\n              \n              // Validate that the date is valid (not in past and not before minDate)\n              if (isoDate) {\n                const inputDate = new Date(isoDate);\n                if (!isDateValid(inputDate)) {\n                  // Don't update the value if it's an invalid date\n                  return;\n                }\n              }\n              \n              onChange(isoDate);\n            }}\n            placeholder={placeholder}\n            title={minDate ? \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\" : \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\"\n            }\n            pattern=\"\\d{2}/\\d{2}/\\d{4}\"\n            maxLength={10}\n            required={required}\n          />\n          <span \n            className=\"date-icon clickable\" \n            onClick={() => setIsOpen(!isOpen)}\n            title=\"Open calendar\"\n          >\n            📅\n          </span>\n        </div>\n        \n        {isOpen && (\n          <div className=\"calendar-popup\">\n            <div className=\"calendar-header\">\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(-1)}\n              >\n                ‹\n              </button>\n              <span className=\"calendar-month-year\">\n                {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\n              </span>\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(1)}\n              >\n                ›\n              </button>\n            </div>\n            <div className=\"calendar-weekdays\">\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                <div key={day} className=\"calendar-weekday\">{day}</div>\n              ))}\n            </div>\n            <div className=\"calendar-days\">\n              {generateCalendar()}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Helper function to find best matching country\n  const findBestCountryMatch = (input: string): { country: string; category: string } | null => {\n    if (!input || input.trim().length === 0 || allCountriesWithCategories.length === 0) {\n      return null;\n    }\n    \n    const normalizedInput = input.trim().toLowerCase();\n    \n    // Exact match (case-insensitive)\n    const exactMatch = allCountriesWithCategories.find(\n      item => item.country.toLowerCase() === normalizedInput\n    );\n    if (exactMatch) {\n      return {\n        country: exactMatch.country,\n        category: exactMatch.destination_category\n      };\n    }\n    \n    // Starts with match\n    const startsWithMatch = allCountriesWithCategories.find(\n      item => item.country.toLowerCase().startsWith(normalizedInput)\n    );\n    if (startsWithMatch) {\n      return {\n        country: startsWithMatch.country,\n        category: startsWithMatch.destination_category\n      };\n    }\n    \n    // Contains match (find the one that starts closest to the beginning)\n    const containsMatches = allCountriesWithCategories\n      .filter(item => item.country.toLowerCase().includes(normalizedInput))\n      .sort((a, b) => {\n        const aIndex = a.country.toLowerCase().indexOf(normalizedInput);\n        const bIndex = b.country.toLowerCase().indexOf(normalizedInput);\n        return aIndex - bIndex;\n      });\n    \n    if (containsMatches.length > 0) {\n      return {\n        country: containsMatches[0].country,\n        category: containsMatches[0].destination_category\n      };\n    }\n    \n    return null;\n  };\n\n  // Handle destination input with autocomplete\n  const handleDestinationChange = (value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      destination: value,\n      destinationCategory: '' // Reset category when input changes\n    }));\n    \n    // Update suggestions\n    if (value.trim().length > 0) {\n      const suggestions = allCountriesWithCategories\n        .filter(item => \n          item.country.toLowerCase().includes(value.toLowerCase())\n        )\n        .slice(0, 5)\n        .map(item => item.country);\n      \n      setDestinationSuggestions(suggestions);\n      setShowDestinationSuggestions(suggestions.length > 0);\n    } else {\n      setDestinationSuggestions([]);\n      setShowDestinationSuggestions(false);\n    }\n  };\n\n  // Handle destination selection from autocomplete\n  const handleDestinationSelect = (country: string) => {\n    const match = allCountriesWithCategories.find(\n      item => item.country === country\n    );\n    \n    if (match) {\n      setFormData(prev => ({\n        ...prev,\n        destination: match.country,\n        destinationCategory: match.destination_category\n      }));\n      setDestinationSuggestions([]);\n      setShowDestinationSuggestions(false);\n    }\n  };\n\n  // Auto-match when user blurs the input field\n  const handleDestinationBlur = () => {\n    setTimeout(() => {\n      setShowDestinationSuggestions(false);\n      \n      if (formData.destination.trim().length > 0) {\n        const match = findBestCountryMatch(formData.destination);\n        if (match) {\n          setFormData(prev => ({\n            ...prev,\n            destination: match.country,\n            destinationCategory: match.category\n          }));\n        }\n      }\n    }, 200); // Small delay to allow click on suggestion\n  };\n\n  // Handle expiry date validation\n  const handleExpiryDateChange = (value: string) => {\n    // Remove all non-digits\n    let digitsOnly = value.replace(/\\D/g, '');\n    \n    // Limit to 6 digits (MMYYYY)\n    if (digitsOnly.length > 6) {\n      digitsOnly = digitsOnly.substring(0, 6);\n    }\n    \n    // Format as MM / YYYY\n    let formattedValue = digitsOnly;\n    if (digitsOnly.length >= 2) {\n      const month = digitsOnly.substring(0, 2);\n      const year = digitsOnly.substring(2, 6);\n      formattedValue = month + (year ? ' / ' + year : '');\n    }\n    \n    // Validate if we have complete date\n    if (digitsOnly.length >= 4) {\n      const month = parseInt(digitsOnly.substring(0, 2));\n      const year = parseInt(digitsOnly.substring(2, 6));\n      const currentYear = new Date().getFullYear();\n      const currentMonth = new Date().getMonth() + 1; // getMonth() returns 0-11\n      \n      // Validate month (1-12)\n      if (month < 1 || month > 12) {\n        setExpiryDateError('Month must be between 01 and 12');\n      }\n      // Validate year (must be current year or future)\n      else if (year < currentYear) {\n        setExpiryDateError(`Year must be ${currentYear} or later`);\n      }\n      // If same year, check month is not in the past\n      else if (year === currentYear && month < currentMonth) {\n        setExpiryDateError(`This expiry date has already passed`);\n      }\n      // If incomplete year but valid so far, show no error yet\n      else if (digitsOnly.length < 6) {\n        setExpiryDateError('');\n      }\n      // Valid date\n      else {\n        setExpiryDateError('');\n      }\n    } else {\n      // Clear error if date is incomplete\n      setExpiryDateError('');\n    }\n    \n    handleInputChange('expiryDate', formattedValue);\n  };\n\n  const handleInputChange = (field: string, value: string | number) => {\n    setFormData(prev => {\n      const newData = {\n        ...prev,\n        [field]: value\n      };\n      \n      // CVV validation - only allow 3 digits\n      if (field === 'cvv') {\n        const cvvValue = value.toString();\n        // Only allow digits and limit to 3 characters\n        const digitsOnly = cvvValue.replace(/\\D/g, '');\n        if (digitsOnly.length <= 3) {\n          newData[field] = digitsOnly;\n        } else {\n          // If more than 3 digits, keep the first 3\n          newData[field] = digitsOnly.substring(0, 3);\n        }\n      }\n      \n      // If start date is changed, clear end date if it's now invalid\n      if (field === 'startDate' && value && prev.endDate) {\n        const startDate = new Date(value as string);\n        const endDate = new Date(prev.endDate);\n        startDate.setDate(startDate.getDate() + 1); // Add 1 day to start date\n        \n        // If end date is before or equal to start date, clear it\n        if (endDate <= startDate) {\n          newData.endDate = '';\n        }\n      }\n      \n      return newData;\n    });\n  };\n\n  const handleTravelerChange = (index: number, field: keyof TravelerInfo, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      travelers: prev.travelers.map((traveler, i) => \n        i === index ? { ...traveler, [field]: value } : traveler\n      )\n    }));\n  };\n\n  const handleNumberOfTravelersChange = (count: number) => {\n    setFormData(prev => {\n      const travelers = [...prev.travelers];\n      \n      if (count > travelers.length) {\n        // Add new travelers\n        for (let i = travelers.length; i < count; i++) {\n          travelers.push({\n            firstName: '',\n            lastName: '',\n            age: '',\n            email: '',\n            phone: '',\n            vaxId: '',\n            nationality: ''\n          });\n        }\n      } else if (count < travelers.length) {\n        // Remove travelers\n        travelers.splice(count);\n      }\n      \n      return {\n        ...prev,\n        numberOfTravelers: count,\n        travelers\n      };\n    });\n  };\n\n  const handleBillingAddressChange = (field: keyof QuoteFormData['billingAddress'], value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      billingAddress: {\n        ...prev.billingAddress,\n        [field]: value\n      }\n    }));\n  };\n\n  // Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\n  const convertToISO = (ddmmyyyy: string): string => {\n    if (!ddmmyyyy || ddmmyyyy.length !== 10) return '';\n    const [day, month, year] = ddmmyyyy.split('/');\n    // Create date in local timezone to avoid timezone issues\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n    return date.toISOString().split('T')[0];\n  };\n\n  // Helper function to format input as DD/MM/YYYY\n  const formatDateInput = (value: string): string => {\n    // Remove all non-digits\n    const digits = value.replace(/\\D/g, '');\n    \n    // Format as DD/MM/YYYY\n    if (digits.length >= 8) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4, 8)}`;\n    } else if (digits.length >= 4) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4)}`;\n    } else if (digits.length >= 2) {\n      return `${digits.slice(0, 2)}/${digits.slice(2)}`;\n    }\n    return digits;\n  };\n\n  const fetchGeneralConditions = async () => {\n    if (formData.selectedQuote?.terracottaQuoteId) {\n      try {\n        console.log('🔄 Fetching general conditions (screening questions) for QuoteID:', formData.selectedQuote.terracottaQuoteId);\n        const screeningResponse = await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);\n        console.log('📥 General Conditions Response:', screeningResponse);\n        \n        if (screeningResponse.screeningQuestions && screeningResponse.screeningQuestions.length > 0) {\n          setGeneralConditionsData(screeningResponse.screeningQuestions);\n          console.log('✅ General conditions loaded from API:', screeningResponse.screeningQuestions);\n          setShowGeneralConditions(true);\n        } else {\n          console.warn('⚠️ No general conditions in API response');\n          setGeneralConditionsData([]);\n          setShowGeneralConditions(true);\n        }\n      } catch (error) {\n        console.error('❌ Error fetching general conditions:', error);\n        // Show empty popup on error\n        setGeneralConditionsData([]);\n        setShowGeneralConditions(true);\n      }\n    }\n  };\n\n  const handleTermsAcceptance = (checked: boolean) => {\n    setTermsAccepted(checked);\n    \n    if (checked && screeningQuestions.length > 0) {\n      // When checkbox is checked, automatically answer \"yes\" to all screening questions (yesAction)\n      const allYesAnswers: {[key: number]: 'yes'} = {};\n      screeningQuestions.forEach((question) => {\n        allYesAnswers[question.questionNumber] = 'yes';\n      });\n      setScreeningAnswers(allYesAnswers);\n      console.log('✅ Terms accepted - All screening questions answered as \"Yes\" (yesAction triggered)');\n    } else if (!checked) {\n      // When unchecked, clear the screening answers\n      setScreeningAnswers({});\n      console.log('❌ Terms not accepted - Screening answers cleared');\n    }\n  };\n\n  const nextPhase = async () => {\n    if (currentPhase === 1) {\n      // Generate quotes when moving from phase 1 to 2\n      try {\n        console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');\n        console.log('📋 Current Form Data:', JSON.stringify(formData, null, 2));\n        \n        const options = await generateQuoteOptions();\n        \n        console.log('✅ Quote options received:', options);\n        console.log('📊 Number of quotes:', options.length);\n        \n        setQuoteOptions(options);\n        \n        // Automatically pre-select the Essential plan\n        const essentialPlan = options.find(option => \n          option.name?.toLowerCase().includes('essential') || \n          option.policytypeName?.toLowerCase().includes('essential')\n        );\n        if (essentialPlan) {\n          console.log('✅ Auto-selected Essential plan:', essentialPlan);\n          setFormData(prev => ({\n            ...prev,\n            selectedQuote: essentialPlan\n          }));\n        } else {\n          console.log('⚠️ No Essential plan found, selecting first available quote');\n          if (options.length > 0) {\n            setFormData(prev => ({\n              ...prev,\n              selectedQuote: options[0]\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('❌ CRITICAL ERROR generating quotes:', error);\n        console.error('Error details:', error instanceof Error ? error.message : String(error));\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n        setQuoteError('Failed to generate quotes. Please try again.');\n        return; // Don't proceed to next phase if quotes failed\n      }\n    }\n    \n    if (currentPhase < 6) {\n      setCurrentPhase((prev) => (prev + 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const prevPhase = () => {\n    if (currentPhase > 1) {\n      setCurrentPhase((prev) => (prev - 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const selectQuote = (quote: QuoteOption) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedQuote: quote\n    }));\n  };\n\n  const addAdditionalPolicy = async (policy: AdditionalPolicy) => {\n    // Prevent multiple simultaneous requests\n    if (processingAddonId) {\n      return;\n    }\n    \n    try {\n      setProcessingAddonId(policy.id);\n      \n      // Check if quoteID is available\n      if (!formData.selectedQuote?.terracottaQuoteId) {\n        alert('Error: No quote selected. Please select a quote first.');\n        return;\n      }\n\n      // Build comma-separated list of alteration IDs (existing + new one)\n      const existingAlterationIds = formData.additionalPolicies.map(p => p.alterationId);\n      const allAlterationIds = [...existingAlterationIds, policy.alterationId].join(',');\n      \n      // Convert travelers to Terracotta format\n      const travelers: TerracottaTraveler[] = formData.travelers.map((traveler, index) => {\n        const age = traveler.dateOfBirth ? \n          calculateAgeFromDOB(traveler.dateOfBirth) : \n          parseInt(traveler.age) || 25;\n        \n        const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n        \n        return {\n          TravellerNumber: index + 1,\n          Title: traveler.title || 'Mr',\n          FirstName: traveler.firstName || 'Customer',\n          LastName: traveler.lastName || 'Name',\n          DateOfBirth: formatDateForTerracotta(dateOfBirth),\n          Age: age,\n          TitleID: getTitleID(traveler.title || 'Mr'),\n          AlterationID: '' // Empty for individual traveler alterations\n        };\n      });\n      \n      // Build contact details\n      const contactDetails: TerracottaContactDetails = {\n        Address: formData.billingAddress?.street || '123 Main Street',\n        Postcode: formData.billingAddress?.postalCode || '12345',\n        Email: formData.travelers[0]?.email || 'customer@example.com',\n        Telephone: formData.travelers[0]?.phone || '+302101234567'\n      };\n      \n      // Build SOAP request\n      const alterationsRequest: TerracottaQuoteWithAlterationsRequest = {\n        userID: '4072',\n        userCode: '111427',\n        quoteID: formData.selectedQuote.terracottaQuoteId,\n        specificQuoteDetails: {\n          AlterationID: allAlterationIds,\n          Travellers: travelers,\n          ContactDetails: contactDetails\n        }\n      };\n      \n      // Call SOAP service\n      const response: TerracottaQuoteResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n      \n      // Extract the updated price from the response\n      if (response.quoteResults && response.quoteResults.length > 0) {\n        const updatedQuote = response.quoteResults[0];\n        const newGrossPrice = updatedQuote.GrossPrice;\n        \n        // Store the total GrossPrice (this is the complete price including base + all addons)\n        setTotalGrossPriceWithAddons(newGrossPrice);\n        \n        // Add the policy to state (price will be calculated from total)\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      } else {\n        // Still add the addon but with 0 price\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      }\n      \n    } catch (error) {\n      console.error('Error adding addon with alterations:', error);\n      alert(`Error adding addon: ${error instanceof Error ? error.message : 'Unknown error'}. Please try again.`);\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n  \n  // Helper functions for date/age calculations\n  const calculateAgeFromDOB = (dob: string): number => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return Math.max(0, age);\n  };\n  \n  const calculateDOBFromAge = (age: number): string => {\n    const currentYear = new Date().getFullYear();\n    const birthYear = currentYear - age;\n    return `${birthYear}/05/20`; // Use May 20 as default date\n  };\n  \n  const formatDateForTerracotta = (dateString: string): string => {\n    if (!dateString) return '';\n    // Handle different formats\n    if (dateString.includes('/')) {\n      const parts = dateString.split('/');\n      if (parts.length === 3 && parts[0].length === 4) {\n        return dateString; // Already in YYYY/MM/DD format\n      } else if (parts.length === 3) {\n        // Convert DD/MM/YYYY to YYYY/MM/DD\n        return `${parts[2]}/${parts[1]}/${parts[0]}`;\n      }\n    }\n    if (dateString.includes('-')) {\n      return dateString.replace(/-/g, '/');\n    }\n    return dateString;\n  };\n  \n  const getTitleID = (title: string): number => {\n    const titleMap: { [key: string]: number } = {\n      'Mr': 1, 'Mrs': 2, 'Miss': 3, 'Ms': 4, 'Dr': 5, 'Prof': 6\n    };\n    return titleMap[title] || 1;\n  };\n\n  const removeAdditionalPolicy = async (policyId: string) => {\n    try {\n      setProcessingAddonId(policyId);\n      \n      // Remove the addon from the list first\n      const remainingAddons = formData.additionalPolicies.filter(p => p.id !== policyId);\n      \n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: remainingAddons\n      }));\n      \n      // If no addons remaining, reset to base price\n      if (remainingAddons.length === 0) {\n        setTotalGrossPriceWithAddons(null);\n        setProcessingAddonId(null);\n        return;\n      }\n      \n      // If there are still addons, call SOAP to get updated price\n      if (formData.selectedQuote?.terracottaQuoteId) {\n        // Build comma-separated list of remaining alteration IDs\n        const remainingAlterationIds = remainingAddons.map(p => p.alterationId).join(',');\n        \n        // Convert travelers to Terracotta format\n        const travelers: TerracottaTraveler[] = formData.travelers.map((traveler, index) => {\n          const age = traveler.dateOfBirth ? \n            calculateAgeFromDOB(traveler.dateOfBirth) : \n            parseInt(traveler.age) || 25;\n          \n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          \n          return {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || 'Customer',\n            LastName: traveler.lastName || 'Name',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            AlterationID: ''\n          };\n        });\n        \n        // Build contact details\n        const contactDetails: TerracottaContactDetails = {\n          Address: formData.billingAddress?.street || '123 Main Street',\n          Postcode: formData.billingAddress?.postalCode || '12345',\n          Email: formData.travelers[0]?.email || 'customer@example.com',\n          Telephone: formData.travelers[0]?.phone || '+302101234567'\n        };\n        \n        // Build SOAP request\n        const alterationsRequest: TerracottaQuoteWithAlterationsRequest = {\n          userID: '4072',\n          userCode: '111427',\n          quoteID: formData.selectedQuote.terracottaQuoteId,\n          specificQuoteDetails: {\n            AlterationID: remainingAlterationIds,\n            Travellers: travelers,\n            ContactDetails: contactDetails\n          }\n        };\n        \n        // Call SOAP service\n        const response: TerracottaQuoteResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n        \n        // Update the GrossPrice\n        if (response.quoteResults && response.quoteResults.length > 0) {\n          const updatedQuote = response.quoteResults[0];\n          const newGrossPrice = updatedQuote.GrossPrice;\n          setTotalGrossPriceWithAddons(newGrossPrice);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating price after addon removal:', error);\n      // Keep the addon removed even if SOAP call fails\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n\n  const calculateTotalPrice = (): number => {\n    // If we have a GrossPrice from SOAP alterations, use that\n    if (totalGrossPriceWithAddons !== null && formData.additionalPolicies.length > 0) {\n      return totalGrossPriceWithAddons;\n    }\n    \n    // Otherwise, use the base price + individual addon prices (fallback)\n    const basePrice = typeof formData.selectedQuote?.price === 'number' \n      ? formData.selectedQuote.price \n      : parseFloat(formData.selectedQuote?.price || '0');\n    const additionalPrice = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n    return basePrice + additionalPrice;\n  };\n\n  const generatePolicyPDF = async () => {\n    if (!policyNumber) {\n      console.error('⚠️ Cannot generate PDF: No policy number available');\n      alert('Policy number not available. Please contact support.');\n      return;\n    }\n    console.log('📄 Generating PDF for Policy ID:', policyNumber);\n    await generatePDF(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  };\n\n  const downloadPolicyPDF = () => {\n    generatePolicyPDF();\n  };\n\n  const processPayment = async () => {\n    // Validate that terms are accepted before processing payment\n    if (!termsAccepted) {\n      alert('Please accept the Privacy Policy, Terms and Conditions and General conditions to proceed with payment.');\n      return;\n    }\n\n    // Validate email address for policy holder (Traveler 1)\n    const policyHolderEmail = formData.travelers[0]?.email;\n    \n    if (!policyHolderEmail || policyHolderEmail.trim() === '') {\n      alert('❌ Policy holder email is required.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) before proceeding with payment.');\n      return;\n    }\n\n    // Email validation regex pattern (RFC 5322 compliant)\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    \n    if (!emailRegex.test(policyHolderEmail.trim())) {\n      alert(`❌ Invalid Email Address\\n\\nThe email address \"${policyHolderEmail}\" is not valid.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) in the format: example@domain.com`);\n      return;\n    }\n\n    // Validate emails for all other travelers if provided\n    for (let i = 0; i < formData.travelers.length; i++) {\n      const traveler = formData.travelers[i];\n      if (traveler.email && traveler.email.trim() !== '') {\n        if (!emailRegex.test(traveler.email.trim())) {\n          alert(`❌ Invalid Email Address\\n\\nThe email address \"${traveler.email}\" for Traveler ${i + 1} (${traveler.firstName} ${traveler.lastName}) is not valid.\\n\\nPlease enter a valid email address in the format: example@domain.com`);\n          return;\n        }\n      }\n    }\n\n    console.log('✅ Email validation passed for all travelers');\n\n    // Validate VAT ID for Greece (Traveler 1/Policy Holder)\n    if (formData.countryOfResidence === 'Greece') {\n      const vatId = formData.travelers[0]?.vaxId;\n      \n      if (!vatId || vatId.trim() === '') {\n        alert('❌ VAT ID Required\\n\\nFor residents of Greece, VAT ID is mandatory for the policy holder.\\n\\nPlease enter the VAT ID for Traveler 1 (Policy Holder) before proceeding with payment.');\n        return;\n      }\n      \n      console.log('✅ VAT ID validation passed for Greece:', vatId);\n    } else {\n      console.log('✅ VAT ID validation skipped (not Greece)');\n    }\n    \n    setIsProcessing(true);\n    \n    try {\n      // First save the quote to database\n      // Add TravellerNumber to each traveler (index + 1)\n      const travelersWithNumber = formData.travelers.map((traveler, index) => ({\n        ...traveler,\n        travellerNumber: index + 1\n      }));\n\n      const quoteData = {\n        destination: formData.destinationCategory || formData.destination, // Use destinationCategory (e.g., \"Europe\", \"Worldwide\") instead of country name\n        countryOfResidence: formData.countryOfResidence,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        tripType: formData.tripType,\n        numberOfTravelers: formData.numberOfTravelers,\n        travelers: travelersWithNumber,\n        selectedQuote: formData.selectedQuote,\n        additionalPolicies: formData.additionalPolicies,\n        totalAmount: calculateTotalPrice()\n      };\n\n      // console.log('Saving quote to database...', quoteData);\n      // console.log('Quote data JSON string:', JSON.stringify(quoteData));\n      const quoteResponse = await createQuote(quoteData);\n      \n      if (quoteResponse.status === 'success' && quoteResponse.data) {\n        const quoteId = quoteResponse.data.quoteId;\n        \n        // Convert screening answers to Terracotta format\n        const terracottaScreeningAnswers = Object.entries(screeningAnswers).map(([questionNumber, answer]) => ({\n          questionNumber: parseInt(questionNumber),\n          answer: answer as 'yes' | 'no'\n        }));\n\n        // Build travelers array and contact details with REAL data from payment step\n        console.log('🔍 DEBUG: formData.travelers at payment time:', JSON.stringify(formData.travelers, null, 2));\n        console.log('🔍 DEBUG: formData.billingAddress at payment time:', JSON.stringify(formData.billingAddress, null, 2));\n        \n        // CRITICAL: Ensure Traveler 1 (policy holder) is always first in the array\n        // Terracotta assigns policy holder based on the order of travelers in the SOAP request\n        // The first traveler in the array becomes the policy holder\n        const sortedTravelers = [...formData.travelers];\n        console.log('🔍 DEBUG: Original travelers order:', sortedTravelers.map((t, i) => `${i + 1}. ${t.firstName} ${t.lastName}`));\n        \n        // Ensure the policy holder (first traveler) is always at index 0\n        if (sortedTravelers.length > 0) {\n          console.log('✅ Policy holder (Traveler 1) will be:', `${sortedTravelers[0].firstName} ${sortedTravelers[0].lastName}`);\n        }\n        \n        const travelers = sortedTravelers.map((traveler, index) => {\n          console.log(`🔍 DEBUG: Processing traveler ${index + 1}:`, {\n            firstName: traveler.firstName,\n            lastName: traveler.lastName,\n            age: traveler.age,\n            dateOfBirth: traveler.dateOfBirth,\n            title: traveler.title,\n            email: traveler.email,\n            phone: traveler.phone\n          });\n          \n          const age = traveler.dateOfBirth ? \n            calculateAgeFromDOB(traveler.dateOfBirth) : \n            parseInt(traveler.age) || 30;\n          \n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          \n          const travelerData = {\n            TravellerNumber: index + 1, // This ensures Traveler 1 gets TravellerNumber: 1\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || '',\n            LastName: traveler.lastName || '',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            AgebandID: getAgebandID(age),\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            minAge: age,\n            maxAge: age,\n            ScreeningInformation: null\n          };\n          \n          console.log(`✅ Built traveler ${index + 1} data:`, travelerData);\n          return travelerData;\n        });\n        \n        // Build contact details with REAL data from payment step\n        const contactDetails = {\n          Address: `${formData.billingAddress.street}, ${formData.billingAddress.city}, ${formData.billingAddress.country}`,\n          Postcode: formData.billingAddress.postalCode || '',\n          Email: formData.travelers[0]?.email || '',\n          Telephone: formData.travelers[0]?.phone || ''\n        };\n        \n        console.log('✅ Using REAL Travelers:', travelers);\n        console.log('✅ Using REAL Contact Details:', contactDetails);\n\n        // Re-fetch quote with REAL traveler data using ProvideQuotation\n        if (formData.selectedQuote?.terracottaQuoteId) {\n          try {\n            console.log('🔄 Re-fetching quote with REAL traveler data using ProvideQuotation...');\n            \n            // Build quote request with REAL traveler and contact data\n            const quoteRequestWithRealData = {\n              userID: '4072',\n              userCode: '111427',\n              quoteDetails: {\n                ResidenceID: getResidenceID(formData.countryOfResidence),\n                TypePolicyID: getTypePolicyID(formData.tripType, availablePolicyTypes),\n                TypePackageID: '1',\n                Destination: formData.destination || 'Europe',\n                StartDate: formatDateForTerracotta(formData.startDate),\n                EndDate: formatDateForTerracotta(formData.endDate),\n                Travellers: travelers, // REAL traveler data\n                ContactDetails: contactDetails, // REAL contact data\n                includeAnnualQuotes: 0, // Always 0 - TypePolicyID determines if it's annual\n                includeUpsell: 0,\n                currencyID: 1,\n                schemaIDFilter: '717'\n              }\n            };\n            \n            console.log('📤 ProvideQuotation with REAL data:', quoteRequestWithRealData);\n            const updatedQuoteResponse = await terracottaService.provideQuotation(quoteRequestWithRealData);\n            console.log('📥 Updated quote response:', updatedQuoteResponse);\n            \n            // ✅ UPDATE THE QUOTE ID WITH THE NEW ONE THAT HAS REAL DATA\n            if (updatedQuoteResponse.quoteResults && updatedQuoteResponse.quoteResults.length > 0) {\n              const selectedPlan = updatedQuoteResponse.quoteResults.find((q: any) => \n                q.policytypeName === formData.selectedQuote?.name || \n                q.GrossPrice === formData.selectedQuote?.price\n              ) || updatedQuoteResponse.quoteResults[0];\n              \n              if (selectedPlan && selectedPlan.QuoteID) {\n                console.log('🔄 Updating quoteID from', formData.selectedQuote.terracottaQuoteId, 'to', selectedPlan.QuoteID);\n                formData.selectedQuote.terracottaQuoteId = selectedPlan.QuoteID;\n                console.log('✅ Using NEW QuoteID with REAL traveler data:', selectedPlan.QuoteID);\n              }\n            }\n            \n            // If add-ons were selected, re-fetch with alterations using REAL data\n            if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n              console.log('🔄 Re-fetching quote with add-ons using ProvideQuotationWithAlterations...');\n              \n              const alterationIds = formData.additionalPolicies.map(p => p.alterationId).join(',');\n              \n              const alterationsRequestWithRealData = {\n                userID: '4072',\n                userCode: '111427',\n                quoteID: formData.selectedQuote.terracottaQuoteId || '',\n                specificQuoteDetails: {\n                  AlterationID: alterationIds,\n                  Travellers: travelers, // REAL traveler data\n                  ContactDetails: contactDetails // REAL contact data\n                }\n              };\n              \n              console.log('📤 ProvideQuotationWithAlterations with REAL data:', alterationsRequestWithRealData);\n              const updatedAlterationsResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequestWithRealData);\n              console.log('📥 Updated alterations response:', updatedAlterationsResponse);\n              \n              // ✅ UPDATE THE QUOTE ID WITH THE NEW ONE FROM ALTERATIONS\n              if (updatedAlterationsResponse.quoteResults && updatedAlterationsResponse.quoteResults.length > 0) {\n                const selectedPlan = updatedAlterationsResponse.quoteResults.find((q: any) => \n                  q.policytypeName === formData.selectedQuote?.name || \n                  q.GrossPrice === formData.selectedQuote?.price\n                ) || updatedAlterationsResponse.quoteResults[0];\n                \n                if (selectedPlan && selectedPlan.QuoteID) {\n                  console.log('🔄 Updating quoteID after alterations from', formData.selectedQuote.terracottaQuoteId, 'to', selectedPlan.QuoteID);\n                  formData.selectedQuote.terracottaQuoteId = selectedPlan.QuoteID;\n                  console.log('✅ Using NEW QuoteID with REAL data + alterations:', selectedPlan.QuoteID);\n                }\n              }\n            }\n          } catch (updateError) {\n            console.warn('⚠️ Could not update quote with real data, continuing with existing quote:', updateError);\n            console.error('⚠️ This may result in policy using dummy data from initial quote request');\n          }\n        }\n\n        // Save policy details with Terracotta\n        if (formData.selectedQuote?.terracottaQuoteId) {\n          try {\n            console.log('💾 ========================================');\n            console.log('💾 Saving policy details with Terracotta...');\n            console.log('💾 ========================================');\n            console.log('📋 QuoteID being used for SavePolicyDetails:', formData.selectedQuote.terracottaQuoteId);\n            console.log('📋 (This should be the NEW quoteID with REAL traveler data, not the original dummy data quoteID)');\n            console.log('📋 Screening Answers:', terracottaScreeningAnswers);\n            console.log('👥 Traveler Data (REAL from Payment Step):', formData.travelers);\n            console.log('🏠 Billing Address (REAL from Payment Step):', formData.billingAddress);\n            \n            // Log each traveler's details clearly\n            console.log('📝 SavePolicyDetails - Travelers being sent:');\n            travelers.forEach((t, idx) => {\n              console.log(`  Traveler ${idx + 1}: ${t.Title} ${t.FirstName} ${t.LastName}, Age: ${t.Age}, DOB: ${t.DateOfBirth}, AgebandID: ${t.AgebandID}, TitleID: ${t.TitleID}`);\n            });\n            console.log('📝 SavePolicyDetails - Contact Details being sent:', contactDetails);\n            \n            const savePolicyResponse = await terracottaService.savePolicyDetails({\n              userID: '4072',\n              userCode: '111427',\n              quoteID: formData.selectedQuote.terracottaQuoteId,\n              screeningQuestionAnswers: terracottaScreeningAnswers,\n              medicalScreeningReference: 'string',\n              useDefaultAnswers: 1,\n              travelers: travelers,\n              contactDetails: contactDetails\n            });\n\n            console.log('✅ SavePolicyDetails response:', savePolicyResponse);\n            console.log('📋 Policy Saved Status:', savePolicyResponse.policySaved);\n            console.log('📋 Policy ID:', savePolicyResponse.policyID);\n            console.log('📄 Certificate URL:', savePolicyResponse.certificate);\n            console.log('📄 Policy Wording URL:', savePolicyResponse.PW);\n            console.log('📄 Summary of Cover URL:', savePolicyResponse.SI);\n\n            // Handle both \"Yes\" and \"true\" formats for policySaved\n            if (savePolicyResponse.policySaved === 'Yes' || savePolicyResponse.policySaved === 'true') {\n              if (!savePolicyResponse.policyID) {\n                console.error('⚠️ Warning: Policy saved but no Policy ID received!');\n                throw new Error('Policy saved but no Policy ID received from Terracotta');\n              }\n              \n              console.log('✅ Policy saved successfully! Policy ID:', savePolicyResponse.policyID);\n              setPolicyNumber(savePolicyResponse.policyID);\n              \n              // Store policy document URLs from SavePolicyDetails response\n              const documents = {\n                certificate: savePolicyResponse.certificate || '',\n                policyWording: savePolicyResponse.PW || '',\n                summaryOfCover: savePolicyResponse.SI || '',\n                keyFacts: savePolicyResponse.KF || '',\n                ipid: savePolicyResponse.IPID || ''\n              };\n              \n              console.log('📄 Setting policy documents:', documents);\n              console.log('📄 SavePolicyDetails full response:', savePolicyResponse);\n              setPolicyDocuments(documents);\n\n              // Email Policy Documents to the policy holder\n              // VALIDATION: Only proceed if we have ALL required parameters\n              try {\n                console.log('📧 Validating parameters for EmailPolicyDocuments...');\n                \n                // Extract required parameters\n                const policyHolderEmail = formData.travelers[0]?.email;\n                const policyID = savePolicyResponse.policyID;\n                const userID = '4072';\n                const userCode = '111427';\n\n                // Validation checks\n                const validationErrors: string[] = [];\n\n                if (!policyID || policyID.trim() === '') {\n                  validationErrors.push('Policy ID is missing or empty');\n                  console.error('❌ VALIDATION FAILED: Policy ID not received from SavePolicyDetails');\n                }\n\n                if (!policyHolderEmail || policyHolderEmail.trim() === '') {\n                  validationErrors.push('Policy holder email address is missing');\n                  console.error('❌ VALIDATION FAILED: No email address for Traveler 1 (Policy Holder)');\n                }\n\n                if (!userID || userID.trim() === '') {\n                  validationErrors.push('User ID is missing');\n                  console.error('❌ VALIDATION FAILED: User ID not configured');\n                }\n\n                if (!userCode || userCode.trim() === '') {\n                  validationErrors.push('User Code is missing');\n                  console.error('❌ VALIDATION FAILED: User Code not configured');\n                }\n\n                // Log validation status\n                if (validationErrors.length > 0) {\n                  console.error('⚠️ EmailPolicyDocuments VALIDATION FAILED:');\n                  validationErrors.forEach((error, index) => {\n                    console.error(`   ${index + 1}. ${error}`);\n                  });\n                  console.error('⚠️ Skipping email sending. Policy is saved but documents will not be emailed automatically.');\n                  \n                  throw new Error(`Cannot send policy documents email: ${validationErrors.join(', ')}`);\n                }\n\n                // All validations passed - log parameters\n                console.log('✅ All parameters validated successfully:');\n                console.log('   📋 User ID:', userID);\n                console.log('   📋 User Code:', userCode);\n                console.log('   📋 Policy ID:', policyID);\n                console.log('   📧 Email Address:', policyHolderEmail);\n                console.log('📧 Proceeding to send EmailPolicyDocuments request...');\n\n                // Send EmailPolicyDocuments request\n                const emailResponse = await terracottaService.emailPolicyDocuments({\n                  userID: userID,\n                  userCode: userCode,\n                  policyID: policyID,\n                  emailAddress: policyHolderEmail\n                });\n\n                console.log('✅ EmailPolicyDocuments response:', emailResponse);\n\n                if (emailResponse.emailSent) {\n                  console.log('✅ Policy documents successfully emailed to:', policyHolderEmail);\n                  alert(`✅ Success! Policy documents have been sent to ${policyHolderEmail}`);\n                } else {\n                  // Log the response but don't show popup to user\n                  console.warn('⚠️ EmailPolicyDocuments response did not explicitly confirm success:', emailResponse.message);\n                  console.warn('⚠️ emailSent value:', emailResponse.emailSent);\n                  // No alert - assume success if no error was thrown\n                }\n              } catch (emailError) {\n                console.error('❌ Error sending policy documents email:', emailError);\n                console.error('⚠️ Continuing with payment process despite email error');\n                \n                // Detailed error logging\n                if (emailError instanceof Error) {\n                  console.error('   Error message:', emailError.message);\n                  console.error('   Error stack:', emailError.stack);\n                }\n                \n                // Don't throw - allow payment process to continue even if email fails\n                alert('Note: There was an issue sending the policy documents email, but your policy has been saved. Please contact support to receive your documents.');\n              }\n              \n              // Debug: Check if documents are empty and log\n              if (!documents.certificate) {\n                console.warn('⚠️ Certificate URL not found in SavePolicyDetails response!');\n                console.warn('💡 This might be normal - certificate may need to be generated separately');\n              }\n              if (!documents.policyWording) {\n                console.warn('⚠️ Policy Wording URL not found in SavePolicyDetails response!');\n              }\n              if (!documents.summaryOfCover) {\n                console.warn('⚠️ Summary of Cover URL not found in SavePolicyDetails response!');\n              }\n              \n              if (!documents.certificate && !documents.policyWording && !documents.summaryOfCover) {\n                console.warn('⚠️ No document URLs received from SavePolicyDetails response!');\n                console.warn('💡 Full SavePolicyDetails response:', JSON.stringify(savePolicyResponse, null, 2));\n              }\n              \n              // Update database with Terracotta Policy ID and status\n              console.log('💾 Updating database with Terracotta Policy ID...');\n              const paymentData = {\n                quoteId: quoteId,\n                paymentMethod: formData.paymentMethod || 'card',\n                cardNumber: formData.cardNumber || '',\n                expiryDate: formData.expiryDate || '',\n                cvv: formData.cvv || '',\n                billingAddress: formData.billingAddress,\n                amount: calculateTotalPrice(),\n                termsAccepted: termsAccepted, // Include terms acceptance status\n                policyNumber: savePolicyResponse.policyID // Include Terracotta Policy ID\n              };\n\n              console.log('💳 Updating quote in database with policy details...');\n              console.log('🔍 DEBUG: termsAccepted value being sent (Terracotta path):', termsAccepted);\n              console.log('🔍 DEBUG: termsAccepted type (Terracotta path):', typeof termsAccepted);\n              const paymentResponse = await apiProcessPayment(paymentData);\n              \n              if (paymentResponse.status === 'success') {\n                console.log('✅ Database updated successfully with Policy ID:', savePolicyResponse.policyID);\n              } else {\n                console.warn('⚠️ Database update failed, but policy was saved in Terracotta');\n              }\n              \n              setIsProcessing(false);\n              nextPhase(); // Move to documents phase\n              return;\n            } else {\n              console.error('❌ Policy save failed. Message:', savePolicyResponse.Message);\n              throw new Error(savePolicyResponse.Message || 'Failed to save policy with Terracotta');\n            }\n          } catch (terracottaError) {\n            console.error('❌ Terracotta policy save error:', terracottaError);\n            // Fall through to regular payment processing\n          }\n        }\n        \n        // Fallback to regular payment processing if Terracotta fails\n        const paymentData = {\n          quoteId: quoteId,\n          paymentMethod: formData.paymentMethod,\n          cardNumber: formData.cardNumber || '',\n          expiryDate: formData.expiryDate || '',\n          cvv: formData.cvv || '',\n          billingAddress: formData.billingAddress,\n          amount: calculateTotalPrice(),\n          termsAccepted: termsAccepted, // Include terms acceptance status\n          policyNumber: policyNumber || undefined // Include Terracotta Policy ID if available\n        };\n\n        console.log('💳 Processing payment with data:', { ...paymentData, cardNumber: '****', cvv: '***' });\n        console.log('🔍 DEBUG: termsAccepted value being sent:', termsAccepted);\n        console.log('🔍 DEBUG: termsAccepted type:', typeof termsAccepted);\n        const paymentResponse = await apiProcessPayment(paymentData);\n        \n        if (paymentResponse.status === 'success') {\n          if (paymentResponse.data?.policyNumber) {\n            setPolicyNumber(paymentResponse.data.policyNumber);\n          }\n          setIsProcessing(false);\n          nextPhase(); // Move to documents phase\n        } else {\n          throw new Error(paymentResponse.message || 'Payment failed');\n        }\n      } else {\n        throw new Error(quoteResponse.message || 'Failed to save quote');\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      setIsProcessing(false);\n      alert('Payment processing failed. Please try again. Error: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  };\n\n  const isPhaseValid = (phase: WizardPhase): boolean => {\n    switch (phase) {\n      case 1:\n        return !!(\n          formData.destination &&\n          formData.startDate &&\n          formData.endDate &&\n          formData.tripType &&\n          formData.countryOfResidence\n        );\n      case 2:\n        return !!formData.selectedQuote;\n      case 3:\n        return true; // Additional policies phase is always valid (optional)\n      case 4:\n        return true; // Review phase is always valid\n      case 5:\n        // Validate all travelers have basic info\n        const travelersBasicValid: boolean = formData.travelers.every(t => \n          !!(t.firstName && t.lastName && (t.age || t.dateOfBirth))\n        );\n        // Validate first traveler (policy holder) has contact details\n        const policyHolderContactValid: boolean = !!(\n          formData.travelers.length > 0 && \n          formData.travelers[0].email && \n          formData.travelers[0].phone\n        );\n        const paymentValid: boolean = !!(\n          formData.cardNumber && \n          formData.expiryDate && \n          formData.cvv && \n          formData.billingAddress.street && \n          formData.billingAddress.city && \n          formData.billingAddress.postalCode && \n          formData.billingAddress.country &&\n          !expiryDateError && // Ensure expiry date is valid\n          formData.expiryDate.length === 9 // Ensure complete date format (MM / YYYY)\n        );\n        return travelersBasicValid && policyHolderContactValid && paymentValid;\n      case 6:\n        return true; // Documents phase is always valid\n      default:\n        return false;\n    }\n  };\n\n  const renderPhase1 = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-3xl font-bold text-gray-900 mb-6 text-center\">Trip Details</h2>\n      \n      <div className=\"space-y-6\">\n        <div className=\"space-y-2\">\n          <label htmlFor=\"tripType\" className=\"block text-sm font-medium text-gray-700\">\n            Trip Type \n            <span className=\"text-xs text-gray-500 ml-1\">\n              {isLoadingPolicyTypeDestinations ? '(Loading...)' : `(${availablePolicyTypes.length} types available)`}\n            </span>\n          </label>\n          <select\n            id=\"tripType\"\n            value={formData.tripType}\n            onChange={(e) => handleInputChange('tripType', e.target.value)}\n            required\n            disabled={isLoadingPolicyTypeDestinations}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-gray-900\"\n          >\n            <option value=\"\">\n              {isLoadingPolicyTypeDestinations ? 'Loading trip types...' : 'Select trip type'}\n            </option>\n            {availablePolicyTypes.map((policyType) => {\n              // Map policy type names to trip type values\n              let tripTypeValue = 'single';\n              const name = policyType.TypePolicyName.toLowerCase();\n              if (name.includes('annual')) {\n                tripTypeValue = 'annual';\n              } else if (name.includes('comprehensive')) {\n                tripTypeValue = 'comprehensive';\n              } else if (name.includes('longstay') || name.includes('long stay')) {\n                tripTypeValue = 'longstay';\n              }\n              \n              return (\n                <option key={policyType.TypePolicyID} value={tripTypeValue}>\n                  {policyType.TypePolicyName}\n                </option>\n              );\n            })}\n            {/* Fallback options if no policy types loaded */}\n            {!isLoadingPolicyTypeDestinations && availablePolicyTypes.length === 0 && (\n              <>\n                <option value=\"single\">Regular Single Trip Insurance</option>\n                <option value=\"annual\">Annual Multi-Trip Travel Insurance</option>\n                <option value=\"comprehensive\">Comprehensive Single Trip Insurance</option>\n                <option value=\"longstay\">Long Stay Travel Insurance</option>\n              </>\n            )}\n          </select>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-2\">\n            <label htmlFor=\"countryOfResidence\" className=\"block text-sm font-medium text-gray-700\">Country of Residence</label>\n            <select\n              id=\"countryOfResidence\"\n              value={formData.countryOfResidence}\n              onChange={(e) => handleInputChange('countryOfResidence', e.target.value)}\n              required\n              disabled={isLoadingCountriesOfResidence}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-gray-900\"\n            >\n              <option value=\"\">\n                {isLoadingCountriesOfResidence ? 'Loading countries...' : 'Select your country of residence'}\n              </option>\n              {countriesOfResidence.map((country) => (\n                <option key={country.country_id} value={country.country_name}>\n                  {country.country_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"space-y-2 relative\">\n            <label htmlFor=\"destination\" className=\"block text-sm font-medium text-gray-700\">\n              Destination\n            </label>\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                id=\"destination\"\n                value={formData.destination}\n                onChange={(e) => handleDestinationChange(e.target.value)}\n                onBlur={handleDestinationBlur}\n                onFocus={() => {\n                  if (formData.destination.trim().length > 0 && destinationSuggestions.length > 0) {\n                    setShowDestinationSuggestions(true);\n                  }\n                }}\n                placeholder={isLoadingCategories ? 'Loading countries...' : 'Enter country name (e.g., Greece, France, Thailand)'}\n                required\n                disabled={isLoadingCategories}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed text-gray-900\"\n              />\n              {showDestinationSuggestions && destinationSuggestions.length > 0 && (\n                <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-auto\">\n                  {destinationSuggestions.map((suggestion, index) => (\n                    <div\n                      key={index}\n                      onClick={() => handleDestinationSelect(suggestion)}\n                      className=\"px-4 py-2 hover:bg-blue-50 cursor-pointer border-b border-gray-100 last:border-b-0\"\n                    >\n                      {suggestion}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            {formData.destinationCategory && (\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Category: <span className=\"font-semibold\">{formData.destinationCategory}</span>\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-2\">\n            <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700\">Departure Date <span className=\"text-xs text-gray-500\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"startDate\"\n              value={formData.startDate}\n              onChange={(value) => handleInputChange('startDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700\">Return Date <span className=\"text-xs text-gray-500\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"endDate\"\n              value={formData.endDate}\n              onChange={(value) => handleInputChange('endDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n              minDate={formData.startDate ? (() => {\n                // Set minimum date to start date + 1 day\n                const startDate = new Date(formData.startDate);\n                startDate.setDate(startDate.getDate() + 1);\n                return startDate.toISOString().split('T')[0];\n              })() : undefined}\n            />\n          </div>\n        </div>\n        \n        <div className=\"space-y-2\">\n          <label htmlFor=\"numberOfTravelers\" className=\"block text-sm font-medium text-gray-700\">Number of Travelers</label>\n          <select\n            id=\"numberOfTravelers\"\n            value={formData.numberOfTravelers}\n            onChange={(e) => handleNumberOfTravelersChange(parseInt(e.target.value))}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900\"\n          >\n            {[1,2,3,4,5,6,7,8].map(num => (\n              <option key={num} value={num}>{num} Traveler{num > 1 ? 's' : ''}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase2 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-10\">\n        <h2 className=\"text-4xl font-bold text-gray-900 mb-2\">\n          Choose Your Insurance Plan\n        </h2>\n        <p className=\"text-lg text-gray-600\">\n          Select the coverage that best fits your travel needs.\n        </p>\n      </div>\n      \n      \n      {isLoadingQuotes && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6 text-center\">\n          <p className=\"text-blue-700\">Loading insurance quotes from Terracotta...</p>\n        </div>\n      )}\n      \n      {quoteError && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center\">\n          <p className=\"text-yellow-800 font-semibold\">⚠️ {quoteError}</p>\n          <p className=\"text-yellow-700 text-sm mt-1\">Using fallback quotes for demonstration.</p>\n        </div>\n      )}\n      \n      <div className=\"flex flex-row justify-center gap-5 mt-5 overflow-x-auto py-5 max-w-full\">\n        {quoteOptions.length > 0 ? quoteOptions.map((option) => (\n          <div \n            key={option.id} \n            className={`bg-white rounded-lg p-6 cursor-pointer transition-all duration-300 relative min-w-[320px] max-w-[320px] flex-shrink-0 ${\n              formData.selectedQuote?.id === option.id\n                ? 'border-2 border-blue-600 shadow-lg shadow-blue-600/15'\n                : 'border border-gray-300 shadow-md hover:shadow-lg hover:border-blue-600'\n            }`}\n            onClick={() => selectQuote(option)}\n          >\n            {/* Plan Header */}\n            <div className=\"mb-5 text-center\">\n              <h3 className=\"text-xl font-bold text-blue-600 mb-2\">\n                {option.policytypeName || option.policyTypeName || option.name}\n              </h3>\n              <p className=\"text-sm text-gray-600 mb-3\">\n                {option.packageName || option.typePackageName}\n              </p>\n              <div className=\"mb-4\">\n                <div className=\"text-3xl font-bold text-gray-900 leading-tight\">\n                  {option.currency || '€'}{option.price}\n                </div>\n                <div className=\"text-sm text-gray-600 mt-1\">\n                  per trip\n                </div>\n              </div>\n            </div>\n            \n            {/* Best Buy Text */}\n            {option.isBestBuy === 1 && option.isBestBuyText && (\n              <div className=\"mb-5 bg-green-50 border border-green-500 rounded-md p-2 text-xs text-green-800 text-center font-bold\">\n                ✨ {option.isBestBuyText} ✨\n              </div>\n            )}\n            \n            {/* Summary Covers */}\n            {option.SummaryCovers && option.SummaryCovers.length > 0 && (\n              <div className=\"mb-5\">\n                <h4 className=\"text-base font-bold mb-3 text-gray-900 text-center\">Coverage Details</h4>\n                {option.SummaryCovers.map((cover, index) => (\n                  <div key={index} className=\"mb-2.5 p-2 bg-gray-50 rounded text-sm text-center\">\n                    <div className=\"font-bold text-blue-600 mb-1\">\n                      {cover.name}\n                    </div>\n                    <div className=\"text-xs\">\n                      <span><strong>Limit:</strong> {cover.Limit}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Action Button */}\n            <button\n              className={`w-full px-4 py-3 rounded font-bold uppercase transition-colors duration-300 text-white ${\n                formData.selectedQuote?.id === option.id\n                  ? 'bg-orange-600 hover:bg-orange-700'\n                  : 'bg-gray-900 hover:bg-gray-800'\n              }`}\n            >\n              {formData.selectedQuote?.id === option.id ? 'SELECTED' : 'SELECT PLAN'}\n            </button>\n          </div>\n        )) : (\n          <div style={{ \n            gridColumn: '1 / -1', \n            textAlign: 'center', \n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>Loading SOAP quotes...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase3 = () => (\n    <div className=\"wizard-phase\">\n      <h2 className=\"text-center\">Enhance Your Coverage</h2>\n      <p className=\"text-center\">Add optional coverage for extra protection during your trip.</p>\n      \n      <div className=\"selected-plan-summary\">\n        <div className=\"current-plan\">\n          <h3>Your Selected Plan</h3>\n          {formData.selectedQuote && (\n            <div className=\"plan-info\">\n              <div className=\"plan-name\">{formData.selectedQuote.name}</div>\n              <div className=\"plan-price\">€{formData.selectedQuote.price}</div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"additional-policies\">\n        <h3>Optional Coverage Add-ons</h3>\n        {isLoadingAddons ? (\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>Loading available add-ons...</p>\n          </div>\n        ) : availableAdditionalPolicies.length === 0 ? (\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>No additional coverage options available for this policy type.</p>\n          </div>\n        ) : (\n          <div className=\"policies-grid\">\n            {availableAdditionalPolicies.map(policy => {\n              const isSelected = formData.additionalPolicies.some(p => p.id === policy.id);\n              return (\n                <div key={policy.id} className={`policy-card ${isSelected ? 'selected' : ''}`}>\n                  <div className=\"policy-header\">\n                    <div className=\"policy-icon\">{policy.icon}</div>\n                    <div className=\"policy-info\">\n                      <h4 className=\"flex items-center gap-2 flex-wrap\">\n                        <span>{policy.name}</span>\n                        {policy.description && (\n                          <span className=\"text-sm font-normal text-gray-600\">- {policy.description}</span>\n                        )}\n                      </h4>\n                      {policy.price > 0 && (\n                        <div className=\"policy-price\">€{policy.price.toFixed(2)}</div>\n                      )}\n                    </div>\n                    <button \n                      className={`policy-btn ${isSelected ? 'remove' : 'add'}`}\n                      onClick={() => isSelected ? removeAdditionalPolicy(policy.id) : addAdditionalPolicy(policy)}\n                      disabled={processingAddonId !== null}\n                    >\n                      {processingAddonId === policy.id ? 'PROCESSING...' : (isSelected ? 'REMOVE' : 'ADD')}\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      <div className=\"total-summary-box\">\n        <div className=\"summary-content\">\n          <div className=\"base-plan\">\n            <span>Base Plan: {formData.selectedQuote?.name}</span>\n            <span>€{formData.selectedQuote?.price}</span>\n          </div>\n          {formData.additionalPolicies.map(policy => (\n            <div key={policy.id} className=\"additional-item\">\n              <span>{policy.name}</span>\n              <span>{policy.price > 0 ? `€${policy.price.toFixed(2)}` : 'Included in total'}</span>\n            </div>\n          ))}\n          <div className=\"total-line\">\n            <span className=\"total-label\">Total Premium:</span>\n            <span className=\"total-amount\">€{calculateTotalPrice().toFixed(2)}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase4 = () => {\n    const calculateTripDuration = () => {\n      if (formData.startDate && formData.endDate) {\n        const start = new Date(formData.startDate);\n        const end = new Date(formData.endDate);\n        const days = Math.ceil((end.getTime() - start.getTime()) / (1000 * 3600 * 24));\n        return days;\n      }\n      return 0;\n    };\n\n    return (\n      <div className=\"wizard-phase\">\n        <h2 className=\"text-center\">Review Your Details</h2>\n        <p className=\"text-center\">Please carefully review all information below. You can go back to make changes if needed.</p>\n        \n        <div className=\"professional-summary\">\n          {/* Trip Overview Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🌍 Trip Overview</h3>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"summary-grid\">\n                <div className=\"summary-row\">\n                  <span className=\"label\">Insurance Type:</span>\n                  <span className=\"value\">{\n                    formData.tripType === 'single' ? 'Single Trip Insurance' :\n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' :\n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance'\n                  }</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Country of Residence:</span>\n                  <span className=\"value\">{formData.countryOfResidence}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Destination:</span>\n                  <span className=\"value\">{formData.destination}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Departure Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.startDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Return Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.endDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Trip Duration:</span>\n                  <span className=\"value\">{calculateTripDuration()} days</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Number of Travelers:</span>\n                  <span className=\"value\">{formData.numberOfTravelers} {formData.numberOfTravelers === 1 ? 'person' : 'people'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insurance Plan Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🛡️ Selected Insurance Plan</h3>\n            </div>\n            <div className=\"card-content\">\n              {formData.selectedQuote && (\n                <div className=\"plan-summary\">\n                  <div className=\"plan-header\">\n                    <h4>{formData.selectedQuote.name}</h4>\n                    <div className=\"plan-price\">\n                      <span className=\"price-label\">Total Premium:</span>\n                      <span className=\"price-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"coverage-overview\">\n                    <h5 style={{\n                      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                      WebkitBackgroundClip: 'text',\n                      WebkitTextFillColor: 'transparent',\n                      fontSize: '1.5em',\n                      fontWeight: '700',\n                      marginBottom: '20px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '10px'\n                    }}>\n                      <span style={{ fontSize: '1.2em' }}>🛡️</span>\n                      Coverage Limits\n                    </h5>\n                    {formData.selectedQuote.SummaryCovers && formData.selectedQuote.SummaryCovers.length > 0 ? (\n                      <div style={{\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n                        gap: '15px',\n                        marginTop: '15px'\n                      }}>\n                        {formData.selectedQuote.SummaryCovers.map((cover, index) => {\n                          // Determine icon and color based on cover name\n                          const getIconAndColor = (name: string) => {\n                            const lowerName = name.toLowerCase();\n                            if (lowerName.includes('medical') || lowerName.includes('emergency')) \n                              return { icon: '🏥', color: '#e74c3c', bgColor: '#fdeaea' };\n                            if (lowerName.includes('baggage') || lowerName.includes('luggage')) \n                              return { icon: '🧳', color: '#3498db', bgColor: '#eaf2f8' };\n                            if (lowerName.includes('cancellation')) \n                              return { icon: '❌', color: '#e67e22', bgColor: '#fef5e7' };\n                            if (lowerName.includes('delay')) \n                              return { icon: '⏰', color: '#9b59b6', bgColor: '#f4ecf7' };\n                            if (lowerName.includes('personal') && lowerName.includes('liability')) \n                              return { icon: '⚖️', color: '#16a085', bgColor: '#e8f8f5' };\n                            if (lowerName.includes('accident')) \n                              return { icon: '🚑', color: '#c0392b', bgColor: '#fadbd8' };\n                            if (lowerName.includes('legal')) \n                              return { icon: '⚖️', color: '#2c3e50', bgColor: '#ecf0f1' };\n                            if (lowerName.includes('money') || lowerName.includes('cash')) \n                              return { icon: '💰', color: '#f39c12', bgColor: '#fef9e7' };\n                            if (lowerName.includes('passport') || lowerName.includes('document')) \n                              return { icon: '📄', color: '#7f8c8d', bgColor: '#f2f3f4' };\n                            if (lowerName.includes('rental') || lowerName.includes('vehicle')) \n                              return { icon: '🚗', color: '#34495e', bgColor: '#ebedef' };\n                            if (lowerName.includes('winter') || lowerName.includes('sport')) \n                              return { icon: '⛷️', color: '#3498db', bgColor: '#ebf5fb' };\n                            if (lowerName.includes('personal') && lowerName.includes('effect')) \n                              return { icon: '👜', color: '#8e44ad', bgColor: '#f5eef8' };\n                            return { icon: '📋', color: '#27ae60', bgColor: '#eafaf1' };\n                          };\n\n                          const { icon, color, bgColor } = getIconAndColor(cover.name);\n\n                          return (\n                            <div key={index} style={{\n                              background: `linear-gradient(135deg, ${bgColor} 0%, #ffffff 100%)`,\n                              border: `2px solid ${bgColor}`,\n                              borderRadius: '12px',\n                              padding: '18px',\n                              transition: 'all 0.3s ease',\n                              cursor: 'pointer',\n                              position: 'relative',\n                              overflow: 'hidden'\n                            }}\n                            onMouseEnter={(e) => {\n                              e.currentTarget.style.transform = 'translateY(-5px)';\n                              e.currentTarget.style.boxShadow = `0 8px 25px rgba(0,0,0,0.15)`;\n                              e.currentTarget.style.borderColor = color;\n                            }}\n                            onMouseLeave={(e) => {\n                              e.currentTarget.style.transform = 'translateY(0)';\n                              e.currentTarget.style.boxShadow = 'none';\n                              e.currentTarget.style.borderColor = bgColor;\n                            }}>\n                              {/* Decorative background element */}\n                              <div style={{\n                                position: 'absolute',\n                                top: '-20px',\n                                right: '-20px',\n                                width: '80px',\n                                height: '80px',\n                                background: color,\n                                opacity: '0.1',\n                                borderRadius: '50%'\n                              }}></div>\n                              \n                              <div style={{ display: 'flex', alignItems: 'flex-start', gap: '12px', position: 'relative', zIndex: 1 }}>\n                                <div style={{\n                                  fontSize: '2.5em',\n                                  background: color,\n                                  width: '60px',\n                                  height: '60px',\n                                  borderRadius: '12px',\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  flexShrink: 0,\n                                  boxShadow: `0 4px 15px ${color}40`\n                                }}>\n                                  {icon}\n                                </div>\n                                <div style={{ flex: 1, minWidth: 0 }}>\n                                  <div style={{\n                                    fontSize: '0.9em',\n                                    color: '#555',\n                                    fontWeight: '500',\n                                    marginBottom: '8px',\n                                    lineHeight: '1.3'\n                                  }}>\n                                    {cover.name}\n                                  </div>\n                                  <div style={{\n                                    fontSize: '1.3em',\n                                    fontWeight: '700',\n                                    color: color,\n                                    marginBottom: '4px'\n                                  }}>\n                                    {cover.Limit}\n                                  </div>\n                                  {cover.Excess && cover.Excess !== '€0' && cover.Excess !== 'Nil' && (\n                                    <div style={{\n                                      fontSize: '0.85em',\n                                      color: '#888',\n                                      background: '#f8f9fa',\n                                      padding: '4px 8px',\n                                      borderRadius: '6px',\n                                      display: 'inline-block',\n                                      marginTop: '4px'\n                                    }}>\n                                      <span style={{ fontWeight: '600' }}>Excess:</span> {cover.Excess}\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : (\n                      <div className=\"coverage-grid\">\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">🏥</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Medical Emergency</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.medical}</span>\n                          </div>\n                        </div>\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">🧳</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Baggage Protection</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.baggage}</span>\n                          </div>\n                        </div>\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">❌</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Trip Cancellation</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.cancellation}</span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Summary Totals */}\n          <div className=\"summary-card total-card\">\n            <div className=\"card-content\">\n              <div className=\"total-summary\">\n                <div className=\"total-row base-premium\">\n                  <span className=\"total-label\">Base Premium:</span>\n                  <span className=\"total-value\">€{formData.selectedQuote?.price}</span>\n                </div>\n                {formData.additionalPolicies.length > 0 && (\n                  <div className=\"total-row\">\n                    <span className=\"total-label\">Additional Policies:</span>\n                    <span className=\"total-value\">€{(() => {\n                      // Calculate addon amount as Total Amount - Base Premium\n                      const basePrice = typeof formData.selectedQuote?.price === 'number' \n                        ? formData.selectedQuote.price \n                        : parseFloat(formData.selectedQuote?.price || '0');\n                      const totalAmount = calculateTotalPrice();\n                      const addonAmount = totalAmount - basePrice;\n                      return addonAmount.toFixed(2);\n                    })()}</span>\n                  </div>\n                )}\n                <div className=\"total-row\">\n                  <span className=\"total-label\">Taxes & Fees:</span>\n                  <span className=\"total-value\">Included</span>\n                </div>\n                <div className=\"total-row final-total\">\n                  <span className=\"total-label\">Total Amount:</span>\n                  <span className=\"total-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const renderPhase5 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Confirmation</h2>\n      <p>Please confirm that all details are correct before proceeding to payment.</p>\n      \n      <div className=\"confirmation-box\">\n        <div className=\"confirmation-item\">\n          <strong>Trip:</strong> {formData.destination} ({formatDateToEuropean(formData.startDate)} to {formatDateToEuropean(formData.endDate)})\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Country of Residence:</strong> {formData.countryOfResidence}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Travelers:</strong> {formData.numberOfTravelers} person{formData.numberOfTravelers > 1 ? 's' : ''}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Plan:</strong> {formData.selectedQuote?.name}\n        </div>\n        <div className=\"confirmation-item total\">\n          <strong>Total Amount:</strong> €{calculateTotalPrice().toFixed(2)}\n        </div>\n      </div>\n    </div>\n  );\n\n  // Helper function to decode HTML entities and format question text\n  const decodeQuestionText = (text: string): string => {\n    if (!text) return '';\n    \n    // Create a temporary element to decode HTML entities\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = text;\n    let decoded = textarea.value;\n    \n    // Replace <BR> tags (after decoding &lt;BR&gt;) with actual line breaks\n    decoded = decoded.replace(/<BR>/gi, '\\n');\n    decoded = decoded.replace(/&lt;BR&gt;/gi, '\\n');\n    \n    return decoded;\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const renderPhase6 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Screening Questions</h2>\n      <p>Please answer the following questions to complete your insurance application.</p>\n      \n      <div className=\"screening-questions\">\n        {screeningQuestions.length === 0 ? (\n          <div className=\"no-questions\">\n            <p>No screening questions required for this policy.</p>\n            <p style={{ fontSize: '14px', color: '#666', marginTop: '10px' }}>\n              The API returned an empty response or no questions are configured for this quote.\n            </p>\n          </div>\n        ) : (\n          screeningQuestions.map((question, index) => {\n            const decodedQuestion = decodeQuestionText(question.question);\n            \n            return (\n              <div key={question.questionNumber} className=\"screening-question\">\n                <h3>Question {question.questionNumber}</h3>\n                <div className=\"question-text\" style={{ \n                  whiteSpace: 'pre-wrap',\n                  lineHeight: '1.6',\n                  padding: '15px',\n                  background: '#f9f9f9',\n                  borderRadius: '8px',\n                  border: '1px solid #e0e0e0'\n                }}>\n                  {decodedQuestion}\n                </div>\n                \n                <div className=\"question-options\" style={{ marginTop: '20px' }}>\n                  <label className=\"radio-option\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${question.questionNumber}`}\n                      value=\"yes\"\n                      checked={screeningAnswers[question.questionNumber] === 'yes'}\n                      onChange={(e) => setScreeningAnswers(prev => ({\n                        ...prev,\n                        [question.questionNumber]: 'yes'\n                      }))}\n                    />\n                    <span>Yes</span>\n                  </label>\n                  <label className=\"radio-option\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${question.questionNumber}`}\n                      value=\"no\"\n                      checked={screeningAnswers[question.questionNumber] === 'no'}\n                      onChange={(e) => setScreeningAnswers(prev => ({\n                        ...prev,\n                        [question.questionNumber]: 'no'\n                      }))}\n                    />\n                    <span>No</span>\n                  </label>\n                </div>\n                \n                {/* Show messages based on answer */}\n                {screeningAnswers[question.questionNumber] && (\n                  <div className={`answer-message ${screeningAnswers[question.questionNumber]}`}>\n                    <p style={{ whiteSpace: 'pre-wrap' }}>\n                      {screeningAnswers[question.questionNumber] === 'yes' \n                        ? decodeQuestionText(question.yesMessage)\n                        : decodeQuestionText(question.noMessage)}\n                    </p>\n                    {/* Show action text if available */}\n                    {question.yesAction && screeningAnswers[question.questionNumber] === 'yes' && question.yesActionText && (\n                      <p style={{ fontSize: '13px', marginTop: '5px', fontStyle: 'italic' }}>\n                        Action: {question.yesActionText}\n                      </p>\n                    )}\n                    {question.noAction && screeningAnswers[question.questionNumber] === 'no' && question.noActionText && (\n                      <p style={{ fontSize: '13px', marginTop: '5px', fontStyle: 'italic' }}>\n                        Action: {question.noActionText}\n                      </p>\n                    )}\n                  </div>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase7 = () => (\n    <div className=\"wizard-phase\">\n      <h2 className=\"text-center\">Payment Details</h2>\n      <p className=\"text-center\">Enter your payment information to complete your purchase.</p>\n      \n      {/* Traveler Information and Billing Address - Grouped Background */}\n      <div className=\"payment-traveler-billing-group\">\n        {/* Traveler Information Section */}\n        <div className=\"form-section\">\n          <h3 className=\"text-center\" style={{ fontWeight: 'bold' }}>Traveler Information</h3>\n          {formData.travelers.map((traveler, index) => (\n            <div key={index} className=\"traveler-info\">\n              <h4 className=\"text-center\" style={{ fontWeight: 'bold' }}>Traveler {index + 1}{index === 0 ? '/Policy holder' : ''}</h4>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`title-${index}`}>Title</label>\n                <select\n                  id={`title-${index}`}\n                  value={traveler.title || 'Mr'}\n                  onChange={(e) => handleTravelerChange(index, 'title', e.target.value)}\n                  title=\"Select the traveler's title\"\n                >\n                  <option value=\"Mr\">Mr</option>\n                  <option value=\"Mrs\">Mrs</option>\n                  <option value=\"Miss\">Miss</option>\n                  <option value=\"Ms\">Ms</option>\n                  <option value=\"Dr\">Dr</option>\n                  <option value=\"Prof\">Prof</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`firstName-${index}`}>First Name</label>\n                <input\n                  type=\"text\"\n                  id={`firstName-${index}`}\n                  value={traveler.firstName}\n                  onChange={(e) => handleTravelerChange(index, 'firstName', e.target.value)}\n                  placeholder=\"Enter first name\"\n                  title=\"Enter the traveler's first name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`lastName-${index}`}>Last Name</label>\n                <input\n                  type=\"text\"\n                  id={`lastName-${index}`}\n                  value={traveler.lastName}\n                  onChange={(e) => handleTravelerChange(index, 'lastName', e.target.value)}\n                  placeholder=\"Enter last name\"\n                  title=\"Enter the traveler's last name\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`dateOfBirth-${index}`}>Date of Birth</label>\n                <input\n                  type=\"date\"\n                  id={`dateOfBirth-${index}`}\n                  value={traveler.dateOfBirth || ''}\n                  onChange={(e) => {\n                    const dateOfBirth = e.target.value;\n                    \n                    // Validate year is not more than 4 digits\n                    if (dateOfBirth) {\n                      const year = new Date(dateOfBirth).getFullYear();\n                      if (year.toString().length > 4) {\n                        alert('❌ Invalid Year\\n\\nPlease enter a valid year with maximum 4 digits.');\n                        return;\n                      }\n                    }\n                    \n                    // Auto-calculate age from date of birth\n                    if (dateOfBirth) {\n                      const age = calculateAgeFromDateOfBirth(dateOfBirth);\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                      handleTravelerChange(index, 'age', age.toString());\n                    } else {\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                    }\n                  }}\n                  title=\"Enter the traveler's date of birth\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`vaxId-${index}`}>\n                  VAT ID\n                  {index === 0 && formData.countryOfResidence === 'Greece' && <span style={{color: 'red'}}>*</span>}\n                  {index === 0 && formData.countryOfResidence === 'Greece' && <span style={{fontSize: '12px', color: '#666'}}> (Required for Greece)</span>}\n                </label>\n                <input\n                  type=\"text\"\n                  id={`vaxId-${index}`}\n                  value={traveler.vaxId}\n                  onChange={(e) => handleTravelerChange(index, 'vaxId', e.target.value)}\n                  placeholder={index === 0 && formData.countryOfResidence === 'Greece' ? \"Enter VAT ID (Required)\" : \"Enter VAT ID (Optional)\"}\n                  title={index === 0 && formData.countryOfResidence === 'Greece' ? \"VAT ID is required for Greece\" : \"Enter the traveler's VAT ID (optional)\"}\n                  required={index === 0 && formData.countryOfResidence === 'Greece'}\n                />\n              </div>\n            </div>\n            \n            {/* Email and Phone - Only for first traveler/policy holder */}\n            {index === 0 && (\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor={`email-${index}`}>Email</label>\n                  <input\n                    type=\"email\"\n                    id={`email-${index}`}\n                    value={traveler.email}\n                    onChange={(e) => handleTravelerChange(index, 'email', e.target.value)}\n                    placeholder=\"Enter email address\"\n                    title=\"Enter the traveler's email address\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor={`phone-${index}`}>Phone</label>\n                  <input\n                    type=\"tel\"\n                    id={`phone-${index}`}\n                    value={traveler.phone}\n                    onChange={(e) => handleTravelerChange(index, 'phone', e.target.value)}\n                    placeholder=\"+xx 123 456 7890\"\n                    title=\"Enter the traveler's phone number\"\n                    required\n                  />\n                </div>\n              </div>\n            )}\n            \n            {/* Billing Address - Only for first traveler */}\n            {index === 0 && (\n              <>\n                <hr style={{ margin: '20px 0', border: 'none', borderTop: '1px solid #e0e0e0' }} />\n                <h4 className=\"text-center\" style={{ fontWeight: 'bold' }} >Billing Address</h4>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"street\">Street Address</label>\n                    <input\n                      type=\"text\"\n                      id=\"street\"\n                      value={formData.billingAddress.street}\n                      onChange={(e) => handleBillingAddressChange('street', e.target.value)}\n                      placeholder=\"Enter street address\"\n                      title=\"Enter your billing street address\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"postalCode\">Postal Code</label>\n                    <input\n                      type=\"text\"\n                      id=\"postalCode\"\n                      value={formData.billingAddress.postalCode}\n                      onChange={(e) => handleBillingAddressChange('postalCode', e.target.value)}\n                      placeholder=\"Enter postal code\"\n                      title=\"Enter your billing postal code\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"city\">City</label>\n                    <input\n                      type=\"text\"\n                      id=\"city\"\n                      value={formData.billingAddress.city}\n                      onChange={(e) => handleBillingAddressChange('city', e.target.value)}\n                      placeholder=\"Enter city\"\n                      title=\"Enter your billing city\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"country\">Country</label>\n                    <input\n                      type=\"text\"\n                      id=\"country\"\n                      value={formData.billingAddress.country}\n                      onChange={(e) => handleBillingAddressChange('country', e.target.value)}\n                      placeholder=\"Enter country\"\n                      title=\"Enter your billing country\"\n                      required\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        ))}\n        </div>\n      </div>\n      \n      {/* Payment Method - Separate Background */}\n      <div className=\"payment-method-group\">\n        <div className=\"payment-section\">\n        <div className=\"payment-methods\">\n          <h3 className=\"text-center\">Payment Method</h3>\n          <div className=\"payment-method-info\">\n            <p className=\"text-center\">We accept all major credit and debit cards for secure payment processing.</p>\n            <div className=\"flex justify-center items-center gap-6 mt-4\">\n              <img \n                src=\"/visa_master.png\" \n                alt=\"VISA and Mastercard payment methods\" \n                style={{ maxWidth: '200px', height: 'auto' }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-details\">\n          <h3 className=\"text-center\">Card Details</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"cardNumber\">Card Number</label>\n            <input\n              type=\"text\"\n              id=\"cardNumber\"\n              value={formData.cardNumber}\n              onChange={(e) => {\n                let value = e.target.value.replace(/\\D/g, ''); // Remove non-digits\n                if (value.length > 16) {\n                  value = value.substring(0, 16); // Limit to 16 digits\n                }\n                // Add spaces every 4 digits\n                if (value.length > 0) {\n                  value = value.match(/.{1,4}/g)?.join(' ') || value;\n                }\n                handleInputChange('cardNumber', value);\n              }}\n              placeholder=\"1234 5678 9012 3456\"\n              title=\"Enter your 16-digit card number\"\n              maxLength={19}\n              required\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"expiryDate\">Expiry Date</label>\n              <input\n                type=\"text\"\n                id=\"expiryDate\"\n                value={formData.expiryDate}\n                onChange={(e) => handleExpiryDateChange(e.target.value)}\n                placeholder=\"MM / YYYY\"\n                title=\"Enter card expiry date in MM / YYYY format (Month: 01-12, Year: current year or later)\"\n                maxLength={9}\n                required\n                className={expiryDateError ? 'border-red-500' : ''}\n              />\n              {expiryDateError && (\n                <p className=\"text-red-500 text-sm mt-1\">{expiryDateError}</p>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"cvv\">CVV</label>\n              <input\n                type=\"text\"\n                id=\"cvv\"\n                value={formData.cvv}\n                onChange={(e) => handleInputChange('cvv', e.target.value)}\n                placeholder=\"123\"\n                title=\"Enter the 3-digit CVV code from the back of your card\"\n                maxLength={3}\n                pattern=\"[0-9]{3}\"\n                required\n              />\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      \n      <div className=\"payment-summary\">\n        <div className=\"summary-item\">\n          <strong>Total Amount: €{calculateTotalPrice().toFixed(2)}</strong>\n        </div>\n      </div>\n      \n      <div className=\"terms-section\">\n        <label className=\"checkbox-option\">\n          <input \n            type=\"checkbox\" \n            required \n            checked={termsAccepted}\n            onChange={(e) => handleTermsAcceptance(e.target.checked)}\n          />\n          <span>I have read and accept the <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); setShowPrivacyPolicy(true); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            Privacy Policy\n          </button>, <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); setShowTermsAndConditions(true); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            Terms and Conditions\n          </button> and <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); fetchGeneralConditions(); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            General conditions\n          </button>.</span>\n        </label>\n        <label className=\"checkbox-option\">\n          <input \n            type=\"checkbox\" \n            required\n            checked={marketingEmailsAccepted}\n            onChange={(e) => setMarketingEmailsAccepted(e.target.checked)}\n          />\n          <span>I would like to receive marketing emails about travel insurance offers</span>\n        </label>\n      </div>\n    </div>\n  );\n\n  const renderPhase8 = () => (\n    <div className=\"wizard-phase\">\n      <h2 className=\"text-center\">🎉 Congratulations!</h2>\n      <p className=\"text-center\">Your travel insurance has been successfully purchased.</p>\n      \n      <div className=\"success-message bg-gray-900\">\n        <div className=\"policy-number\">\n          <strong>Policy Number:</strong> {policyNumber ? policyNumber : 'Processing...'}\n        </div>\n        <div className=\"confirmation-email\">\n          <strong>A confirmation email has been sent to {formData.travelers[0]?.email}</strong>\n        </div>\n      </div>\n      \n      <div className=\"documents-section\">\n        <h3 className=\"text-center\">Your Documents</h3>\n        <p className=\"text-center\" style={{ fontSize: '14px', color: '#666', marginBottom: '15px' }}>\n          Click on any document to open it in a new tab\n        </p>\n        <div className=\"document-links\">\n          {/* Summary of Cover from SavePolicyDetails */}\n          {policyDocuments.summaryOfCover ? (\n            <a \n              href={policyDocuments.summaryOfCover} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Summary of Cover in new tab\"\n              title=\"View Summary of Cover from Terracotta\"\n            >\n              📄 Summary of Cover\n            </a>\n          ) : formData.selectedQuote?.SI ? (\n            <a \n              href={formData.selectedQuote.SI} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Summary of Cover in new tab\"\n              title=\"View Summary of Cover (from quote)\"\n            >\n              📄 Summary of Cover (from quote)\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              📄 Summary of Cover (Not Available)\n            </div>\n          )}\n\n          {/* Policy Wording from SavePolicyDetails */}\n          {policyDocuments.policyWording ? (\n            <a \n              href={policyDocuments.policyWording} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Policy Wording in new tab\"\n              title=\"View Policy Wording from Terracotta\"\n            >\n              📋 Policy Wording\n            </a>\n          ) : formData.selectedQuote?.PW ? (\n            <a \n              href={formData.selectedQuote.PW} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Policy Wording in new tab\"\n              title=\"View Policy Wording (from quote)\"\n            >\n              📋 Policy Wording (from quote)\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              📋 Policy Wording (Not Available)\n            </div>\n          )}\n\n          {/* Certificate from SavePolicyDetails */}\n          {policyDocuments.certificate ? (\n            <a \n              href={policyDocuments.certificate} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Certificate in new tab\"\n              title=\"View Certificate from Terracotta\"\n            >\n              🆔 Certificate\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              🆔 Certificate (Pending - may be emailed separately)\n            </div>\n          )}\n\n          {/* Key Facts from SavePolicyDetails */}\n          {policyDocuments.keyFacts && (\n            <a \n              href={policyDocuments.keyFacts} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Key Facts in new tab\"\n              title=\"View Key Facts from Terracotta\"\n            >\n              📋 Key Facts\n            </a>\n          )}\n\n          {/* IPID from SavePolicyDetails */}\n          {policyDocuments.ipid && (\n            <a \n              href={policyDocuments.ipid} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open IPID in new tab\"\n              title=\"View Insurance Product Information Document\"\n            >\n              📄 IPID\n            </a>\n          )}\n\n          {/* Generated Policy PDF */}\n          <button \n            onClick={downloadPolicyPDF} \n            className=\"document-link download-btn\"\n            aria-label=\"Download your policy summary as a PDF document\"\n            title=\"Download a PDF copy of your travel insurance policy summary\"\n            type=\"button\"\n          >\n            📄 Download Your Policy Summary (PDF)\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"next-steps\">\n        <h3 className=\"text-center\">What's Next?</h3>\n        <ul>\n          <li>Save your policy documents in a safe place</li>\n          <li>Keep the emergency contact numbers with you while traveling</li>\n          <li>Download our mobile app for easy access to your policy</li>\n          <li>Contact us anytime at +30 6974907500 for assistance</li>\n        </ul>\n      </div>\n    </div>\n  );\n\n  const renderPhaseContent = () => {\n    switch (currentPhase) {\n      case 1:\n        return renderPhase1(); // Trip Details\n      case 2:\n        return renderPhase2(); // Quotes\n      case 3:\n        return renderPhase3(); // Add-ons\n      case 4:\n        return renderPhase4(); // Review\n      case 5:\n        return renderPhase7(); // Payment\n      case 6:\n        return renderPhase8(); // Documents\n      default:\n        return renderPhase1();\n    }\n  };\n\n  return (\n    <div className=\"py-8 bg-gray-50 min-h-screen\">\n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-8\">Travel Insurance Quote Wizard</h1>\n            <div className=\"flex justify-center items-center gap-4 mb-8 relative px-8\">\n              {[1, 2, 3, 4, 5, 6].map((phase, index) => (\n                <React.Fragment key={phase}>\n                  <div className={`flex flex-col items-center relative flex-1 max-w-[120px] ${index < 5 ? 'w-full' : ''}`}>\n                    <div className={`w-10 h-10 rounded-full flex items-center justify-center font-semibold mb-2 transition-all duration-300 relative z-10 ${\n                      currentPhase >= phase \n                        ? currentPhase === phase \n                          ? 'bg-blue-600 text-white shadow-lg shadow-blue-600/20' \n                          : 'bg-blue-600 text-white'\n                        : 'bg-gray-200 text-gray-600'\n                    }`}>\n                      {phase}\n                    </div>\n                    <div className={`text-sm font-medium ${\n                      currentPhase >= phase ? 'text-blue-600' : 'text-gray-600'\n                    }`}>\n                      {phase === 1 && 'Details'}\n                      {phase === 2 && 'Quotes'}\n                      {phase === 3 && 'Add-ons'}\n                      {phase === 4 && 'Review'}\n                      {phase === 5 && 'Payment'}\n                      {phase === 6 && 'Documents'}\n                    </div>\n                  </div>\n                  {index < 5 && (\n                    <div className={`flex-1 h-0.5 rounded transition-all duration-300 ${\n                      currentPhase > phase ? 'bg-blue-600' : 'bg-gray-300'\n                    }`} style={{ maxWidth: 'calc(100% - 120px)' }} />\n                  )}\n                </React.Fragment>\n              ))}\n            </div>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-lg p-8 md:p-12 mb-8 min-h-[500px]\">\n          {renderPhaseContent()}\n        </div>\n\n        <div className=\"flex justify-between items-center px-4 gap-4\">\n          {currentPhase > 1 && currentPhase < 6 && (\n            <button \n              className=\"bg-transparent text-gray-900 border-2 border-gray-900 hover:bg-gray-900 hover:text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed\" \n              onClick={prevPhase}\n              aria-label=\"Go to previous step\"\n              title=\"Go back to the previous step\"\n              type=\"button\"\n            >\n              Previous\n            </button>\n          )}\n          \n          {currentPhase === 1 && (\n            <>\n              <div></div>\n              <button \n                className=\"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-900\" \n                onClick={nextPhase}\n                disabled={!isPhaseValid(currentPhase)}\n                aria-label=\"Go to next step\"\n                title=\"Continue to next step\"\n                type=\"button\"\n              >\n                Next\n              </button>\n            </>\n          )}\n          {currentPhase > 1 && currentPhase < 5 && (\n            <button \n              className=\"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-900\" \n              onClick={nextPhase}\n              disabled={!isPhaseValid(currentPhase)}\n              aria-label={currentPhase === 4 ? 'Proceed to payment step' : 'Go to next step'}\n              title={currentPhase === 4 ? 'Continue to payment details' : 'Continue to next step'}\n              type=\"button\"\n            >\n              {currentPhase === 4 ? 'Proceed to Payment' : 'Next'}\n            </button>\n          )}\n          \n          {currentPhase === 5 && (\n            <>\n              <div></div>\n              <button \n                className=\"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-gray-900\" \n                onClick={processPayment}\n                disabled={!isPhaseValid(currentPhase) || isProcessing}\n                aria-label={isProcessing ? 'Processing payment, please wait' : `Pay €${calculateTotalPrice().toFixed(2)} for your travel insurance`}\n                title={isProcessing ? 'Payment is being processed, please wait' : `Complete payment of €${calculateTotalPrice().toFixed(2)}`}\n                type=\"button\"\n              >\n                {isProcessing ? 'Processing Payment...' : `Pay €${calculateTotalPrice().toFixed(2)}`}\n              </button>\n              \n            </>\n          )}\n          \n          {currentPhase === 6 && (\n            <>\n              <div></div>\n              <button \n                className=\"bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300\" \n                onClick={() => window.location.href = '/'}\n                aria-label=\"Return to homepage\"\n                title=\"Go back to the main homepage\"\n                type=\"button\"\n              >\n                Return to Homepage\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n      \n      {/* Help Popup for Destination Categories */}\n      {showHelpPopup && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowHelpPopup(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Destination Categories & Countries</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowHelpPopup(false)}\n                aria-label=\"Close help popup\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              {isLoadingCountries ? (\n                <div className=\"loading-message\">Loading countries...</div>\n              ) : (\n                <div className=\"categories-container\">\n                  {Object.entries(countriesByCategory).map(([category, countries]) => (\n                    <div key={category} className=\"category-section\">\n                      <h4 className=\"category-title\">{category}</h4>\n                      <div className=\"countries-grid\">\n                        {countries.map((country) => (\n                          <span key={country} className=\"country-item\">\n                            {country}\n                          </span>\n                        ))}\n                      </div>\n                      <div className=\"category-count\">\n                        {countries.length} countries\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Privacy Policy Popup */}\n      {showPrivacyPolicy && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowPrivacyPolicy(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Privacy Policy</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowPrivacyPolicy(false)}\n                aria-label=\"Close privacy policy\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Sample Privacy Policy</h4>\n                <p>This is a sample Privacy Policy. The actual content will be added later.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>1. Information We Collect</h5>\n                <p>We collect information that you provide directly to us, including personal information such as your name, email address, date of birth, and travel details.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>2. How We Use Your Information</h5>\n                <p>We use the information we collect to provide, maintain, and improve our services, including processing your insurance quotes and policies.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>3. Data Security</h5>\n                <p>We implement appropriate technical and organizational measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>4. Your Rights</h5>\n                <p>You have the right to access, correct, or delete your personal information. You may also object to or restrict certain processing of your data.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>5. Contact Us</h5>\n                <p>If you have any questions about this Privacy Policy, please contact us at privacy@example.com</p>\n                \n                <p style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\n                  Last updated: {new Date().toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Terms and Conditions Popup */}\n      {showTermsAndConditions && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowTermsAndConditions(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Terms and Conditions</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowTermsAndConditions(false)}\n                aria-label=\"Close terms and conditions\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Sample Terms and Conditions</h4>\n                <p>This is a sample Terms and Conditions document. The actual content will be added later.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>1. Acceptance of Terms</h5>\n                <p>By purchasing travel insurance from us, you agree to be bound by these Terms and Conditions. Please read them carefully before proceeding with your purchase.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>2. Insurance Coverage</h5>\n                <p>The insurance coverage is subject to the terms, conditions, and exclusions set forth in the policy documents. Coverage begins on the start date specified in your policy.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>3. Premium Payment</h5>\n                <p>The insurance premium must be paid in full before coverage begins. All payments are processed securely through our payment gateway.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>4. Claims Process</h5>\n                <p>In the event of a claim, you must notify us as soon as reasonably possible and provide all required documentation to support your claim.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>5. Cancellation Policy</h5>\n                <p>You may cancel your policy within the cooling-off period specified in your policy documents for a full refund, provided no claims have been made.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>6. Governing Law</h5>\n                <p>These Terms and Conditions are governed by and construed in accordance with applicable insurance regulations.</p>\n                \n                <p style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\n                  Last updated: {new Date().toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* General Conditions Popup - Shows Screening Questions Response */}\n      {showGeneralConditions && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowGeneralConditions(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>General Conditions</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowGeneralConditions(false)}\n                aria-label=\"Close general conditions\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Screening Questions & General Conditions</h4>\n                <p style={{ marginBottom: '20px', color: '#666' }}>\n                  These are the general conditions and screening questions for your selected policy.\n                </p>\n                \n                {generalConditionsData.length === 0 ? (\n                  <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                    <p>No general conditions available for this policy.</p>\n                  </div>\n                ) : (\n                  <div className=\"screening-questions\">\n                    {generalConditionsData.map((question, index) => {\n                      const decodedQuestion = decodeQuestionText(question.question);\n                      const decodedNoMessage = question.noMessage ? decodeQuestionText(question.noMessage) : '';\n                      \n                      // Filter out specific unwanted text from the No message\n                      const filteredNoMessage = decodedNoMessage.replace(\n                        /Yes\\/No \\(If No cannot proceed with purchase\\)\\.\\s*If No:\\s*You must confirm that you have read and accepted the following to purchase this insurance by selecting Yes\\.\\s*If you are unable to agree with any of the following statements, then you are unable to continue with the purchase of this insurance\\.\\s*/gi,\n                        ''\n                      ).trim();\n                      \n                      return (\n                        <div key={question.questionNumber} style={{ \n                          marginBottom: '25px',\n                          padding: '15px',\n                          background: '#f9f9f9',\n                          borderRadius: '8px',\n                          border: '1px solid #e0e0e0'\n                        }}>\n                          <div style={{ \n                            whiteSpace: 'pre-wrap',\n                            lineHeight: '1.6',\n                            marginBottom: '10px'\n                          }}>\n                            {decodedQuestion}\n                          </div>\n                          \n                          {question.yesMessage && (\n                            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n                              <strong style={{ color: '#d9534f' }}>If Yes:</strong>\n                              <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px', color: '#555' }}>\n                                {decodeQuestionText(question.yesMessage)}\n                              </p>\n                            </div>\n                          )}\n                          \n                          {filteredNoMessage && (\n                            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n                              <strong style={{ color: '#5cb85c' }}>If No:</strong>\n                              <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px', color: '#555' }}>\n                                {filteredNoMessage}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quote;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}