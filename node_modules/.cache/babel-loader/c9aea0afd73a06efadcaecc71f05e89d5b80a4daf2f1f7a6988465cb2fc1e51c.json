{"ast":null,"code":"import _objectSpread from\"C:/Users/laptop-123/TravelInsurance_Demo_2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import'./Quote2.css';// Import API service for database integration\nimport{createQuote,processPayment as apiProcessPayment,getAddonsByPolicyType}from'../services/apiService';// Import Terracotta service for insurance quotes\nimport TerracottaService,{getResidenceID,getTypePolicyID,getAgebandID}from'../services/terracottaService';// Import jsPDF dynamically to avoid build issues\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const generatePDF=async(formData,calculateTotalPrice,formatDateToEuropean,policyNumber)=>{try{var _formData$selectedQuo;// Dynamic import of jsPDF\nconst jsPDF=(await import('jspdf')).default;const doc=new jsPDF();const currentDate=new Date().toLocaleDateString('en-GB');// Set up fonts and styles\ndoc.setFontSize(20);doc.text('TRAVEL INSURANCE POLICY',20,20);doc.setFontSize(14);doc.text(\"Policy Number: \".concat(policyNumber),20,35);doc.text(\"Issue Date: \".concat(currentDate),20,45);let yPos=65;// Trip Information Section\ndoc.setFontSize(16);doc.text('TRIP INFORMATION',20,yPos);yPos+=15;doc.setFontSize(12);const tripType=formData.tripType==='single'?'Single Trip Insurance':formData.tripType==='annual'?'Annual Multi-Trip Insurance':formData.tripType==='longstay'?'Long Stay Travel Insurance':'Comprehensive Single Trip Insurance';doc.text(\"Trip Type: \".concat(tripType),20,yPos);yPos+=10;doc.text(\"Country of Residence: \".concat(formData.countryOfResidence),20,yPos);yPos+=10;doc.text(\"Destination: \".concat(formData.destination),20,yPos);yPos+=10;doc.text(\"Departure: \".concat(formatDateToEuropean(formData.startDate)),20,yPos);yPos+=10;doc.text(\"Return: \".concat(formatDateToEuropean(formData.endDate)),20,yPos);yPos+=10;doc.text(\"Travelers: \".concat(formData.numberOfTravelers),20,yPos);yPos+=20;// Traveler Information\ndoc.setFontSize(16);doc.text('TRAVELER INFORMATION',20,yPos);yPos+=15;doc.setFontSize(12);formData.travelers.forEach((traveler,index)=>{if(yPos>250){// New page if needed\ndoc.addPage();yPos=20;}doc.text(\"\".concat(index===0?'Primary Policyholder':\"Traveler \".concat(index+1),\":\"),20,yPos);yPos+=10;doc.text(\"Name: \".concat(traveler.firstName,\" \").concat(traveler.lastName),20,yPos);yPos+=8;doc.text(\"Age: \".concat(traveler.age,\" years old\"),20,yPos);yPos+=8;doc.text(\"Email: \".concat(traveler.email),20,yPos);yPos+=8;if(traveler.phone){doc.text(\"Phone: \".concat(traveler.phone),20,yPos);yPos+=8;}yPos+=10;});// Selected Plan\nif(formData.selectedQuote){if(yPos>180){doc.addPage();yPos=20;}doc.setFontSize(16);doc.text('SELECTED INSURANCE PLAN',20,yPos);yPos+=15;doc.setFontSize(12);doc.text(\"Plan: \".concat(formData.selectedQuote.name),20,yPos);yPos+=10;doc.text(\"Medical: \".concat(formData.selectedQuote.coverage.medical),20,yPos);yPos+=10;doc.text(\"Baggage: \".concat(formData.selectedQuote.coverage.baggage),20,yPos);yPos+=10;doc.text(\"Cancellation: \".concat(formData.selectedQuote.coverage.cancellation),20,yPos);yPos+=15;// Add Included Features\nif(formData.selectedQuote.features&&formData.selectedQuote.features.length>0){doc.text('Included Features:',20,yPos);yPos+=10;formData.selectedQuote.features.forEach(feature=>{if(yPos>270){// Check for page break\ndoc.addPage();yPos=20;}doc.text(\"\\u2022 \".concat(feature),25,yPos);yPos+=8;});yPos+=10;}}// Additional Coverage\nif(formData.additionalPolicies&&formData.additionalPolicies.length>0){if(yPos>220){doc.addPage();yPos=20;}doc.setFontSize(16);doc.text('ADDITIONAL COVERAGE',20,yPos);yPos+=15;doc.setFontSize(12);formData.additionalPolicies.forEach(policy=>{if(yPos>270){// Check for page break\ndoc.addPage();yPos=20;}doc.text(\"\\u2022 \".concat(policy.name,\" - \\u20AC\").concat(policy.price.toFixed(2)),25,yPos);yPos+=8;});yPos+=15;}// Premium Summary\nif(yPos>200){doc.addPage();yPos=20;}doc.setFontSize(16);doc.text('PREMIUM SUMMARY',20,yPos);yPos+=15;doc.setFontSize(12);doc.text(\"Base Premium: \\u20AC\".concat((_formData$selectedQuo=formData.selectedQuote)===null||_formData$selectedQuo===void 0?void 0:_formData$selectedQuo.price),20,yPos);yPos+=10;if(formData.additionalPolicies&&formData.additionalPolicies.length>0){const additional=formData.additionalPolicies.reduce((sum,policy)=>sum+policy.price,0);doc.text(\"Additional Policies: \\u20AC\".concat(additional.toFixed(2)),20,yPos);yPos+=10;}doc.text('Taxes & Fees: Included',20,yPos);yPos+=10;doc.text(\"Total Premium: \\u20AC\".concat(calculateTotalPrice().toFixed(2)),20,yPos);yPos+=20;doc.text('Emergency Contact: +30 6974907500',20,yPos);// Save the PDF\ndoc.save(\"Travel_Insurance_Policy_\".concat(policyNumber,\".pdf\"));}catch(error){console.error('PDF generation failed, falling back to HTML:',error);// Fallback to HTML generation if PDF fails\ngenerateHTMLPolicy(formData,calculateTotalPrice,formatDateToEuropean,policyNumber);}};const generateHTMLPolicy=(formData,calculateTotalPrice,formatDateToEuropean,policyNumber)=>{var _formData$selectedQuo2;const currentDate=new Date().toLocaleDateString('en-GB');const htmlContent=\"\\n<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Travel Insurance Policy - \".concat(policyNumber,\"</title>\\n    <style>\\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\\n        .section { margin-bottom: 25px; }\\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\\n        .info-row { margin: 8px 0; }\\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\\n        @media print { body { margin: 0; } }\\n    </style>\\n</head>\\n<body>\\n    <div class=\\\"header\\\">\\n        <h1>TRAVEL INSURANCE POLICY</h1>\\n        <h2>Policy Number: \").concat(policyNumber,\"</h2>\\n        <p>Issue Date: \").concat(currentDate,\"</p>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">TRIP INFORMATION</div>\\n        <div class=\\\"info-row\\\"><strong>Trip Type:</strong> \").concat(formData.tripType==='single'?'Single Trip Insurance':formData.tripType==='annual'?'Annual Multi-Trip Insurance':formData.tripType==='longstay'?'Long Stay Travel Insurance':'Comprehensive Single Trip Insurance',\"</div>\\n        <div class=\\\"info-row\\\"><strong>Country of Residence:</strong> \").concat(formData.countryOfResidence,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Destination:</strong> \").concat(formData.destination,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Departure:</strong> \").concat(formatDateToEuropean(formData.startDate),\"</div>\\n        <div class=\\\"info-row\\\"><strong>Return:</strong> \").concat(formatDateToEuropean(formData.endDate),\"</div>\\n        <div class=\\\"info-row\\\"><strong>Travelers:</strong> \").concat(formData.numberOfTravelers,\"</div>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">TRAVELER INFORMATION</div>\\n        \").concat(formData.travelers.map((traveler,index)=>\"\\n            <div class=\\\"traveler-block\\\">\\n                <strong>\".concat(index===0?'Primary Policyholder':\"Traveler \".concat(index+1),\"</strong>\\n                <div class=\\\"info-row\\\"><strong>Name:</strong> \").concat(traveler.firstName,\" \").concat(traveler.lastName,\"</div>\\n                <div class=\\\"info-row\\\"><strong>Age:</strong> \").concat(traveler.age,\" years old</div>\\n                <div class=\\\"info-row\\\"><strong>Email:</strong> \").concat(traveler.email,\"</div>\\n                \").concat(traveler.phone?\"<div class=\\\"info-row\\\"><strong>Phone:</strong> \".concat(traveler.phone,\"</div>\"):'',\"\\n            </div>\\n        \")).join(''),\"\\n    </div>\\n    \\n    \").concat(formData.selectedQuote?\"\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">SELECTED INSURANCE PLAN</div>\\n        <div class=\\\"info-row\\\"><strong>Plan:</strong> \".concat(formData.selectedQuote.name,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Medical Coverage:</strong> \").concat(formData.selectedQuote.coverage.medical,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Baggage Coverage:</strong> \").concat(formData.selectedQuote.coverage.baggage,\"</div>\\n        <div class=\\\"info-row\\\"><strong>Trip Cancellation:</strong> \").concat(formData.selectedQuote.coverage.cancellation,\"</div>\\n        \\n        \").concat(formData.selectedQuote.features&&formData.selectedQuote.features.length>0?\"\\n        <div style=\\\"margin-top: 15px;\\\">\\n            <strong>Included Features:</strong>\\n            <ul>\\n                \".concat(formData.selectedQuote.features.map(feature=>\"<li>\".concat(feature,\"</li>\")).join(''),\"\\n            </ul>\\n        </div>\\n        \"):'',\"\\n    </div>\\n    \"):'',\"\\n    \\n    \").concat(formData.additionalPolicies&&formData.additionalPolicies.length>0?\"\\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">ADDITIONAL COVERAGE</div>\\n        <ul>\\n            \".concat(formData.additionalPolicies.map(policy=>\"<li>\".concat(policy.name,\" - \\u20AC\").concat(policy.price.toFixed(2),\"</li>\")).join(''),\"\\n        </ul>\\n    </div>\\n    \"):'',\"\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"section-title\\\">PREMIUM SUMMARY</div>\\n        <div class=\\\"info-row\\\"><strong>Base Premium:</strong> \\u20AC\").concat((_formData$selectedQuo2=formData.selectedQuote)===null||_formData$selectedQuo2===void 0?void 0:_formData$selectedQuo2.price,\"</div>\\n        \").concat(formData.additionalPolicies&&formData.additionalPolicies.length>0?\"\\n        <div class=\\\"info-row\\\"><strong>Additional Policies:</strong> \\u20AC\".concat(formData.additionalPolicies.reduce((sum,policy)=>sum+policy.price,0).toFixed(2),\"</div>\\n        \"):'',\"\\n        <div class=\\\"info-row\\\"><strong>Taxes & Fees:</strong> Included</div>\\n        <div class=\\\"info-row\\\"><strong>Total Premium:</strong> \\u20AC\").concat(calculateTotalPrice().toFixed(2),\"</div>\\n    </div>\\n    \\n    <div class=\\\"section\\\">\\n        <div class=\\\"info-row\\\"><strong>Emergency Contact:</strong> +30 6974907500</div>\\n        <div class=\\\"info-row\\\" style=\\\"margin-top: 20px; font-style: italic;\\\">\\n            This document serves as proof of travel insurance coverage.\\n        </div>\\n    </div>\\n    \\n    <script>\\n        window.onload = function() { window.print(); };\\n        window.onafterprint = function() { window.close(); };\\n    </script>\\n</body>\\n</html>\");const printWindow=window.open('','_blank','width=800,height=600');if(printWindow){printWindow.document.write(htmlContent);printWindow.document.close();}};// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean=dateString=>{if(!dateString)return'';// Parse the ISO date string directly to avoid timezone issues\nconst[year,month,day]=dateString.split('-');return\"\".concat(day,\"/\").concat(month,\"/\").concat(year);};const calculateAgeFromDateOfBirth=dateOfBirth=>{const birthDate=new Date(dateOfBirth);const today=new Date();let age=today.getFullYear()-birthDate.getFullYear();const monthDiff=today.getMonth()-birthDate.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birthDate.getDate()){age--;}return Math.max(0,age);};const Quote2=_ref=>{var _formData$selectedQuo10;let{onNavigate}=_ref;const[currentPhase,setCurrentPhase]=useState(1);const[formData,setFormData]=useState({destination:'',startDate:'',endDate:'',tripType:'single',countryOfResidence:'',numberOfTravelers:1,travelers:[{firstName:'',lastName:'',age:'',email:'',phone:'',vaxId:'',nationality:''}],selectedQuote:null,additionalPolicies:[],paymentMethod:'card',cardNumber:'',expiryDate:'',cvv:'',billingAddress:{street:'',city:'',postalCode:'',country:''}});const[quoteOptions,setQuoteOptions]=useState([]);const[isProcessing,setIsProcessing]=useState(false);const[policyNumber,setPolicyNumber]=useState('');const[policyDocuments,setPolicyDocuments]=useState({});const[terracottaService]=useState(()=>{console.log('Creating TerracottaService instance...');return TerracottaService.getInstance('4072','111427');});const[screeningQuestions,setScreeningQuestions]=useState([]);const[screeningAnswers,setScreeningAnswers]=useState({});const[isLoadingQuotes,setIsLoadingQuotes]=useState(false);const[quoteError,setQuoteError]=useState('');const[availableProducts,setAvailableProducts]=useState([]);const[isLoadingProducts,setIsLoadingProducts]=useState(true);// Policy types state\nconst[availablePolicyTypes,setAvailablePolicyTypes]=useState([]);const[isLoadingPolicyTypes,setIsLoadingPolicyTypes]=useState(false);// Policy type destinations state (Trip Types)\nconst[availablePolicyTypeDestinations,setAvailablePolicyTypeDestinations]=useState([]);const[isLoadingPolicyTypeDestinations,setIsLoadingPolicyTypeDestinations]=useState(false);// Destination categories state\nconst[destinationCategories,setDestinationCategories]=useState([]);const[isLoadingCategories,setIsLoadingCategories]=useState(false);// Help popup state\nconst[showHelpPopup,setShowHelpPopup]=useState(false);const[countriesByCategory,setCountriesByCategory]=useState({});const[isLoadingCountries,setIsLoadingCountries]=useState(false);// Privacy Policy and Terms modal states\nconst[showPrivacyPolicy,setShowPrivacyPolicy]=useState(false);const[showTermsAndConditions,setShowTermsAndConditions]=useState(false);const[showGeneralConditions,setShowGeneralConditions]=useState(false);const[generalConditionsData,setGeneralConditionsData]=useState([]);const[termsAccepted,setTermsAccepted]=useState(false);const[marketingEmailsAccepted,setMarketingEmailsAccepted]=useState(false);// Countries of residence state\nconst[countriesOfResidence,setCountriesOfResidence]=useState([]);const[isLoadingCountriesOfResidence,setIsLoadingCountriesOfResidence]=useState(false);// Addons state - fetched from database based on selected policy type\nconst[availableAdditionalPolicies,setAvailableAdditionalPolicies]=useState([]);const[isLoadingAddons,setIsLoadingAddons]=useState(false);// Store the total GrossPrice from SOAP alterations response\nconst[totalGrossPriceWithAddons,setTotalGrossPriceWithAddons]=useState(null);// Loading state for addon operations - track which specific addon is being processed\nconst[processingAddonId,setProcessingAddonId]=useState(null);useEffect(()=>{window.scrollTo({top:0,behavior:'smooth'});},[]);// Load available Terracotta products on component mount\nuseEffect(()=>{const loadTerracottaProducts=async()=>{try{var _productResponse$Sche;setIsLoadingProducts(true);console.log('Loading Terracotta products...');const productResponse=await terracottaService.getUserProductList();console.log('Terracotta products loaded:',productResponse);console.log(\"\\u2705 Successfully loaded \".concat(((_productResponse$Sche=productResponse.Schemas)===null||_productResponse$Sche===void 0?void 0:_productResponse$Sche.length)||0,\" products for your account\"));setAvailableProducts(productResponse.Schemas||[]);setIsLoadingProducts(false);}catch(error){console.error('Error loading Terracotta products:',error);setIsLoadingProducts(false);// Don't show error to user, just log it - we'll use fallback\n}};loadTerracottaProducts();},[terracottaService]);// Load policy types when products are available\nuseEffect(()=>{const loadPolicyTypes=async()=>{if(availableProducts.length===0)return;try{setIsLoadingPolicyTypes(true);console.log('Loading policy types for available products...');// Load policy types for each product (schema)\nconst allPolicyTypes=[];for(const product of availableProducts){try{console.log(\"Loading policy types for schema \".concat(product.SchemaID,\": \").concat(product.SchemaName));const policyResponse=await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());console.log(\"Policy types for schema \".concat(product.SchemaID,\":\"),policyResponse);// Add schema context to each policy type\nconst policyTypesWithSchema=policyResponse.PolicyTypes.map(policyType=>_objectSpread(_objectSpread({},policyType),{},{SchemaID:product.SchemaID,SchemaName:product.SchemaName}));allPolicyTypes.push(...policyTypesWithSchema);}catch(error){console.error(\"Error loading policy types for schema \".concat(product.SchemaID,\":\"),error);}}// Remove duplicates based on TypePolicyID\nconst uniquePolicyTypes=allPolicyTypes.filter((policyType,index,self)=>index===self.findIndex(p=>p.TypePolicyID===policyType.TypePolicyID));setAvailablePolicyTypes(uniquePolicyTypes);console.log(\"\\u2705 Successfully loaded \".concat(uniquePolicyTypes.length,\" unique policy types\"));setIsLoadingPolicyTypes(false);}catch(error){console.error('Error loading policy types:',error);setIsLoadingPolicyTypes(false);}};loadPolicyTypes();},[availableProducts,terracottaService]);// Load policy types (Trip Types) when products are available\nuseEffect(()=>{const loadPolicyTypes=async()=>{if(availableProducts.length===0)return;try{setIsLoadingPolicyTypeDestinations(true);console.log('Loading policy types for available products...');// Load policy types for each product (schema) - Using schema 717 as specified\nconst allPolicyTypes=[];// Use schema 717 as specified in the requirement\nconst schemaToUse=availableProducts.find(p=>p.SchemaID===717)||availableProducts[0];try{console.log(\"Loading policy types for schema \".concat(schemaToUse.SchemaID,\": \").concat(schemaToUse.SchemaName));const policyTypeResponse=await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());console.log(\"Policy types for schema \".concat(schemaToUse.SchemaID,\":\"),policyTypeResponse);allPolicyTypes.push(...policyTypeResponse.PolicyTypes);}catch(error){console.error(\"Error loading policy types for schema \".concat(schemaToUse.SchemaID,\":\"),error);}setAvailablePolicyTypes(allPolicyTypes);console.log(\"\\u2705 Successfully loaded \".concat(allPolicyTypes.length,\" policy types\"));setIsLoadingPolicyTypeDestinations(false);}catch(error){console.error('Error loading policy types:',error);setIsLoadingPolicyTypeDestinations(false);}};loadPolicyTypes();},[availableProducts,terracottaService]);// Show a brief message when end date is cleared due to start date change\nuseEffect(()=>{if(formData.startDate&&!formData.endDate){// This effect will run when start date exists but end date is empty\n// We could add a toast notification here if needed\n}},[formData.startDate,formData.endDate]);// Load countries of residence on component mount\nuseEffect(()=>{const loadCountriesOfResidence=async()=>{try{setIsLoadingCountriesOfResidence(true);console.log('Loading countries of residence...');const response=await fetch('http://localhost:5002/api/countries');const data=await response.json();if(data.status==='success'){setCountriesOfResidence(data.countries);console.log('✅ Countries of residence loaded:',data.countries.length,'countries');}else{console.error('❌ Failed to load countries of residence:',data.message);}}catch(error){console.error('❌ Error loading countries of residence:',error);}finally{setIsLoadingCountriesOfResidence(false);}};loadCountriesOfResidence();},[]);// Load destination categories on component mount\nuseEffect(()=>{const loadDestinationCategories=async()=>{try{setIsLoadingCategories(true);console.log('Loading destination categories...');const response=await fetch('http://localhost:5002/api/destination-categories');const data=await response.json();if(data.status==='success'){setDestinationCategories(data.categories);console.log('✅ Destination categories loaded:',data.categories);}else{console.error('❌ Failed to load destination categories:',data.message);}}catch(error){console.error('❌ Error loading destination categories:',error);// Set fallback categories if API fails\nsetDestinationCategories(['Europe','Worldwide']);}finally{setIsLoadingCategories(false);}};loadDestinationCategories();},[]);// Load countries for each category when categories are loaded\nuseEffect(()=>{const loadCountriesForCategories=async()=>{if(destinationCategories.length===0)return;try{setIsLoadingCountries(true);const countriesData={};// Load countries for each category\nfor(const category of destinationCategories){try{const response=await fetch(\"http://localhost:5002/api/destination-categories/\".concat(encodeURIComponent(category),\"/countries\"));const data=await response.json();if(data.status==='success'){countriesData[category]=data.countries;}}catch(error){console.error(\"Error loading countries for \".concat(category,\":\"),error);countriesData[category]=[];}}setCountriesByCategory(countriesData);}catch(error){console.error('Error loading countries:',error);}finally{setIsLoadingCountries(false);}};loadCountriesForCategories();},[destinationCategories]);// Generate quotes when component mounts or when form data is complete\nuseEffect(()=>{const generateQuotesIfNeeded=async()=>{// Only generate quotes if we have basic form data and we're in phase 2\nif(currentPhase===2&&quoteOptions.length===0){console.log('🔄 Generating quotes on component load...');try{const options=await generateQuoteOptions();setQuoteOptions(options);}catch(error){console.error('Error generating quotes:',error);}}};generateQuotesIfNeeded();},[currentPhase]);// Helper function to normalize SOAP policy type names to match database\nconst normalizePolicyTypeName=soapPolicyType=>{if(!soapPolicyType)return'';// Trim and normalize whitespace\nlet normalized=soapPolicyType.trim();// Map common SOAP response values to database policy type names\nconst mappings={// Annual Multi-Trip variants (handle various capitalizations)\n'Silver Annual Multi-Trip':'Silver Annual Multi-Trip','Gold Annual Multi-Trip':'Gold Annual Multi-Trip','Essential Annual Multi-Trip':'Essential Annual Multi-Trip','Silver Annual Multi Trip':'Silver Annual Multi-Trip','Gold Annual Multi Trip':'Gold Annual Multi-Trip','Essential Annual Multi Trip':'Essential Annual Multi-Trip','Silver Annual Multi-trip':'Silver Annual Multi-Trip',// lowercase 't'\n'Gold Annual Multi-trip':'Gold Annual Multi-Trip',// lowercase 't'\n'Essential Annual Multi-trip':'Essential Annual Multi-Trip',// lowercase 't'\n// Single Trip variants\n'Silver Single Trip':'Silver Single Trip','Gold Single Trip':'Gold Single Trip','Essential Single Trip':'Essential Single Trip','Value Single Trip':'Value Single Trip',// Long Stay variants\n'Long Stay Standard':'Long Stay Standard','Long Stay Study Abroad':'Long Stay Study Abroad','Longstay Standard':'Long Stay Standard','Longstay Study Abroad':'Long Stay Study Abroad'};// Try exact match first (case-insensitive)\nfor(const[key,value]of Object.entries(mappings)){if(normalized.toLowerCase()===key.toLowerCase()){console.log(\"\\u2705 Exact match found! Normalized policy type: \\\"\".concat(normalized,\"\\\" -> \\\"\").concat(value,\"\\\"\"));return value;}}console.log(\"\\u26A0\\uFE0F No exact mapping found for: \\\"\".concat(normalized,\"\\\", trying pattern matching...\"));// Try pattern matching if exact match fails\nconst lowerNormalized=normalized.toLowerCase();// Silver Annual Multi-Trip patterns\nif(lowerNormalized.includes('silver')&&lowerNormalized.includes('annual')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Silver Annual Multi-Trip\\\"\"));return'Silver Annual Multi-Trip';}// Gold Annual Multi-Trip patterns\nif(lowerNormalized.includes('gold')&&lowerNormalized.includes('annual')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Gold Annual Multi-Trip\\\"\"));return'Gold Annual Multi-Trip';}// Essential Annual Multi-Trip patterns\nif(lowerNormalized.includes('essential')&&lowerNormalized.includes('annual')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Essential Annual Multi-Trip\\\"\"));return'Essential Annual Multi-Trip';}// Silver Single Trip patterns\nif(lowerNormalized.includes('silver')&&lowerNormalized.includes('single')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Silver Single Trip\\\"\"));return'Silver Single Trip';}// Gold Single Trip patterns\nif(lowerNormalized.includes('gold')&&lowerNormalized.includes('single')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Gold Single Trip\\\"\"));return'Gold Single Trip';}// Essential Single Trip patterns\nif(lowerNormalized.includes('essential')&&lowerNormalized.includes('single')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Essential Single Trip\\\"\"));return'Essential Single Trip';}// Value Single Trip patterns\nif(lowerNormalized.includes('value')&&lowerNormalized.includes('single')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Value Single Trip\\\"\"));return'Value Single Trip';}// Long Stay patterns\nif(lowerNormalized.includes('long')&&lowerNormalized.includes('stay')){if(lowerNormalized.includes('study')||lowerNormalized.includes('abroad')){console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Long Stay Study Abroad\\\"\"));return'Long Stay Study Abroad';}console.log(\"\\u2705 Pattern matched: \\\"\".concat(normalized,\"\\\" -> \\\"Long Stay Standard\\\"\"));return'Long Stay Standard';}// If no match found, return original and log warning\nconsole.warn(\"\\u26A0\\uFE0F No mapping found for policy type: \\\"\".concat(normalized,\"\\\"\"));return normalized;};// Fetch addons when entering Step 3 (Add-ons phase)\nuseEffect(()=>{const fetchAddons=async()=>{var _formData$selectedQuo3,_formData$selectedQuo4,_formData$selectedQuo5,_formData$selectedQuo6,_formData$selectedQuo7,_formData$selectedQuo8,_formData$selectedQuo9,_formData$selectedQuo0;// Only fetch addons when we're in Step 3 (Add-ons phase)\nif(currentPhase!==3){console.log('ℹ️ Not in Step 3, skipping addon fetch (current phase:',currentPhase,')');return;}// Debug: Log the entire selected quote to see all available fields\nconsole.log('🔍 DEBUG - Selected Quote:',formData.selectedQuote);console.log('📍 Current Phase:',currentPhase,'- Fetching add-ons for Step 3');// Only fetch if we have a selected quote with a policy type name\n// IMPORTANT: prioritize policytypeName first as it contains the full name (e.g., \"Silver Annual Multi-Trip\")\n// policyTypeName often just contains \"Annual Multi-Trip\" without the tier (Silver/Gold/Essential)\nconst rawPolicyTypeName=((_formData$selectedQuo3=formData.selectedQuote)===null||_formData$selectedQuo3===void 0?void 0:_formData$selectedQuo3.policytypeName)||((_formData$selectedQuo4=formData.selectedQuote)===null||_formData$selectedQuo4===void 0?void 0:_formData$selectedQuo4.policyTypeName)||((_formData$selectedQuo5=formData.selectedQuote)===null||_formData$selectedQuo5===void 0?void 0:_formData$selectedQuo5.typePolicyName);console.log('🔍 DEBUG - Policy type field values:',{policyTypeName:(_formData$selectedQuo6=formData.selectedQuote)===null||_formData$selectedQuo6===void 0?void 0:_formData$selectedQuo6.policyTypeName,policytypeName:(_formData$selectedQuo7=formData.selectedQuote)===null||_formData$selectedQuo7===void 0?void 0:_formData$selectedQuo7.policytypeName,typePolicyName:(_formData$selectedQuo8=formData.selectedQuote)===null||_formData$selectedQuo8===void 0?void 0:_formData$selectedQuo8.typePolicyName,rawPolicyTypeName:rawPolicyTypeName,selectedField:(_formData$selectedQuo9=formData.selectedQuote)!==null&&_formData$selectedQuo9!==void 0&&_formData$selectedQuo9.policytypeName?'policytypeName':(_formData$selectedQuo0=formData.selectedQuote)!==null&&_formData$selectedQuo0!==void 0&&_formData$selectedQuo0.policyTypeName?'policyTypeName':'typePolicyName'});if(rawPolicyTypeName){// Normalize the policy type name to match database\nconst policyTypeName=normalizePolicyTypeName(rawPolicyTypeName);console.log('📋 Fetching addons for policy type:',policyTypeName,'(raw:',rawPolicyTypeName,')');setIsLoadingAddons(true);try{const response=await getAddonsByPolicyType(policyTypeName);if(response.status==='success'){const addonsData=response.addons||[];console.log(\"\\u2705 Loaded \".concat(addonsData.length,\" addons for \").concat(policyTypeName));// Transform database addons to AdditionalPolicy format\nconst transformedAddons=addonsData.map(addon=>{// Create a descriptive name combining cover name and details\nconst displayName=addon.additional_cover_detail?\"\".concat(addon.additional_cover_name,\" - \").concat(addon.additional_cover_detail):addon.additional_cover_name;// Determine icon based on addon type\nconst getIcon=name=>{const lowerName=name.toLowerCase();if(lowerName.includes('winter')||lowerName.includes('sports'))return'🏂';if(lowerName.includes('business'))return'💼';if(lowerName.includes('golf'))return'⛳';if(lowerName.includes('hazardous')||lowerName.includes('activities'))return'🪂';if(lowerName.includes('wedding'))return'💍';if(lowerName.includes('event'))return'🎫';if(lowerName.includes('cancellation'))return'❌';if(lowerName.includes('waiver')||lowerName.includes('excess'))return'🛡️';if(lowerName.includes('financial')||lowerName.includes('protection'))return'💰';if(lowerName.includes('accident'))return'🚑';if(lowerName.includes('missed')||lowerName.includes('connection'))return'✈️';if(lowerName.includes('emigration'))return'🌍';if(lowerName.includes('study')||lowerName.includes('abroad'))return'📚';if(lowerName.includes('medical')||lowerName.includes('repatriation'))return'🏥';return'📋';// Default icon\n};// Determine category based on addon type\nconst getCategory=name=>{const lowerName=name.toLowerCase();if(lowerName.includes('sport')||lowerName.includes('golf')||lowerName.includes('hazardous'))return'Activities';if(lowerName.includes('business'))return'Business';if(lowerName.includes('cancellation'))return'Cancellation';if(lowerName.includes('wedding')||lowerName.includes('event'))return'Events';if(lowerName.includes('protection')||lowerName.includes('waiver')||lowerName.includes('excess'))return'Protection';if(lowerName.includes('medical')||lowerName.includes('accident'))return'Medical';return'Other';};return{id:\"addon-\".concat(addon.alteration_id),name:displayName,description:addon.additional_cover_detail||addon.additional_cover_name,price:0,// Price will be updated from SOAP response\nicon:getIcon(addon.additional_cover_name),category:getCategory(addon.additional_cover_name),alterationId:addon.alteration_id.toString()// Store alteration_id for SOAP calls\n};});setAvailableAdditionalPolicies(transformedAddons);}else{console.warn('No addons found for policy type:',policyTypeName);setAvailableAdditionalPolicies([]);}}catch(error){console.error('Error fetching addons:',error);// Keep empty array on error\nsetAvailableAdditionalPolicies([]);}finally{setIsLoadingAddons(false);}}else{var _formData$selectedQuo1;// No policy type selected, try to extract from quote name as fallback\nif((_formData$selectedQuo1=formData.selectedQuote)!==null&&_formData$selectedQuo1!==void 0&&_formData$selectedQuo1.name){console.warn('⚠️ No policy type field found, attempting to extract from quote name:',formData.selectedQuote.name);// Try to extract policy type from the name field\n// Format is usually: \"SchemaName - PolicyTypeName\"\nconst nameParts=formData.selectedQuote.name.split(' - ');if(nameParts.length>1){const extractedPolicyType=nameParts[1].trim();console.log('🔍 Extracted policy type from name:',extractedPolicyType);const normalizedType=normalizePolicyTypeName(extractedPolicyType);if(normalizedType){setIsLoadingAddons(true);try{const response=await getAddonsByPolicyType(normalizedType);if(response.status==='success'){const addonsData=response.addons||[];console.log(\"\\u2705 Loaded \".concat(addonsData.length,\" addons using extracted type: \").concat(normalizedType));const transformedAddons=addonsData.map(addon=>{const displayName=addon.additional_cover_detail?\"\".concat(addon.additional_cover_name,\" - \").concat(addon.additional_cover_detail):addon.additional_cover_name;const getIcon=name=>{const lowerName=name.toLowerCase();if(lowerName.includes('winter')||lowerName.includes('sports'))return'🏂';if(lowerName.includes('business'))return'💼';if(lowerName.includes('golf'))return'⛳';if(lowerName.includes('hazardous')||lowerName.includes('activities'))return'🪂';if(lowerName.includes('wedding'))return'💍';if(lowerName.includes('event'))return'🎫';if(lowerName.includes('cancellation'))return'❌';if(lowerName.includes('waiver')||lowerName.includes('excess'))return'🛡️';if(lowerName.includes('financial')||lowerName.includes('protection'))return'💰';if(lowerName.includes('accident'))return'🚑';if(lowerName.includes('missed')||lowerName.includes('connection'))return'✈️';if(lowerName.includes('emigration'))return'🌍';if(lowerName.includes('study')||lowerName.includes('abroad'))return'📚';if(lowerName.includes('medical')||lowerName.includes('repatriation'))return'🏥';return'📋';};const getCategory=name=>{const lowerName=name.toLowerCase();if(lowerName.includes('sport')||lowerName.includes('golf')||lowerName.includes('hazardous'))return'Activities';if(lowerName.includes('business'))return'Business';if(lowerName.includes('cancellation'))return'Cancellation';if(lowerName.includes('wedding')||lowerName.includes('event'))return'Events';if(lowerName.includes('protection')||lowerName.includes('waiver')||lowerName.includes('excess'))return'Protection';if(lowerName.includes('medical')||lowerName.includes('accident'))return'Medical';return'Other';};return{id:\"addon-\".concat(addon.alteration_id),name:displayName,description:addon.additional_cover_detail||addon.additional_cover_name,price:0,// Price will be updated from SOAP response\nicon:getIcon(addon.additional_cover_name),category:getCategory(addon.additional_cover_name),alterationId:addon.alteration_id.toString()// Store alteration_id for SOAP calls\n};});setAvailableAdditionalPolicies(transformedAddons);}}catch(error){console.error('Error fetching addons with extracted type:',error);setAvailableAdditionalPolicies([]);}finally{setIsLoadingAddons(false);}return;}}}console.warn('⚠️ No policy type found in selected quote, clearing addons');setAvailableAdditionalPolicies([]);}};fetchAddons();},[currentPhase,formData.selectedQuote]);// Trigger when entering Step 3 OR when quote changes\n// Reset addons and pricing when the selected quote changes\nuseEffect(()=>{if(formData.selectedQuote){console.log('Quote changed, resetting addons and pricing...');// Clear existing addons\nsetFormData(prev=>_objectSpread(_objectSpread({},prev),{},{additionalPolicies:[]}));// Reset SOAP pricing\nsetTotalGrossPriceWithAddons(null);// Clear available addons to force refresh\nsetAvailableAdditionalPolicies([]);console.log('✅ Addons and pricing reset for new quote');}},[(_formData$selectedQuo10=formData.selectedQuote)===null||_formData$selectedQuo10===void 0?void 0:_formData$selectedQuo10.id]);// Only trigger when the quote ID actually changes\n// REMOVED: Auto-loading sample quotes - now using real SOAP response\n// useEffect(() => {\n//   if (currentPhase === 2) {\n//     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n//     const sampleQuotes = generateSampleSOAPQuotes();\n//     setQuoteOptions(sampleQuotes);\n//     setIsLoadingQuotes(false);\n//   }\n// }, [currentPhase]);\nconst generateQuoteOptions=async()=>{setIsLoadingQuotes(true);setQuoteError('');try{var _response$quoteResult;console.log('🚀 Getting real quotes from Terracotta SOAP API...');console.log('Form data:',formData);// Make a single SOAP request to get all available quotes\nconst terracottaRequest=TerracottaService.convertToTerracottaFormat(formData,availablePolicyTypes);console.log('SOAP Request:',terracottaRequest);// Get quotes from Terracotta SOAP API\nconst response=await terracottaService.provideQuotation(terracottaRequest);console.log('SOAP Response:',response);console.log('📊 SOAP Response Message:',response.Message);console.log('📊 Quote Results Count:',((_response$quoteResult=response.quoteResults)===null||_response$quoteResult===void 0?void 0:_response$quoteResult.length)||0);if(response.quoteResults&&response.quoteResults.length>0){console.log('📊 Processing SOAP results:',response.quoteResults);// Convert SOAP response directly to QuoteOption format\nconst realQuotes=response.quoteResults.map((result,index)=>{console.log(\"Processing quote \".concat(index+1,\":\"),result);return{id:\"soap-\".concat(result.QuoteID),name:\"\".concat(result.schemaName,\" - \").concat(result.policytypeName||result.typePolicyName),type:result.isBestBuy===1?'premium':result.GrossPrice>100?'standard':'basic',price:result.GrossPrice||0,coverage:{medical:result.coverLevel>0?\"\\u20AC\".concat((result.coverLevel*1000000).toLocaleString()):'€2,000,000',baggage:'€1,000',// This would ideally come from SOAP response\ncancellation:'€2,000',// This would ideally come from SOAP response\nactivities:['Standard activities','Adventure sports']},features:['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection',...(result.isAnnual===1?['Annual Multi-Trip Coverage']:[]),...(result.isBestBuy===1?['Best Buy Option']:[]),...(result.maxDaysPerTrip>0?[\"Up to \".concat(result.maxDaysPerTrip,\" days per trip\")]:[])],// Real SOAP response data\nterracottaQuoteId:result.QuoteID,schemaName:result.schemaName,policytypeName:result.policytypeName,policyTypeName:result.typePolicyName||result.policytypeName,typePolicyName:result.typePolicyName||result.policytypeName,summaryOfCoverUrl:result.SI,policyWordingUrl:result.PW,currency:result.currency,ipt:result.IPT,// Complete SOAP response fields\nschemaID:result.SchemaID,destinationCategory:result.destinationName,tripType:formData.tripType,residenceName:result.residenceName,destinationName:result.destinationName,packageName:result.packageName,typePackageName:result.typePackageName,isAnnual:result.isAnnual,isBestBuy:result.isBestBuy,isBestBuyText:result.isBestBuyText,maxDaysPerTrip:result.maxDaysPerTrip,coverLevel:result.coverLevel,discount:result.Discount,iconURL:result.IconURL,helpFile:result.HelpFile,policytypeShortName:result.policytypeShortName,// Additional SOAP fields\nkeyFactsUrl:result.KF,policyTypeID:result.PolicyTypeID,destinationID:result.DestinationID,packageID:result.PackageID,screeningPremium:result.screeningPremium,ipRate:result.IPTRate,netUW:result.netUW,wbComm:result.wbComm,agentComm:result.agentComm,SummaryCovers:result.SummaryCovers||[],// Document URLs\nSI:result.SI,PW:result.PW};});console.log(\"\\u2705 Received \".concat(realQuotes.length,\" real quotes from Terracotta SOAP API\"));// Sort by IPT (highest first) and take top 3\nconst sortedByIPT=realQuotes.sort((a,b)=>{const iptA=a.ipt||0;const iptB=b.ipt||0;return iptB-iptA;// Descending order (highest IPT first)\n});const top3Quotes=sortedByIPT.slice(0,3);// Sort the top 3 by price (ascending - least expensive to most expensive)\nconst sortedByPrice=top3Quotes.sort((a,b)=>a.price-b.price);console.log(\"\\uD83D\\uDCCA Filtered to top 3 quotes with highest IPT, sorted by price:\",sortedByPrice.map(q=>({name:q.name,price:q.price,ipt:q.ipt})));setIsLoadingQuotes(false);return sortedByPrice;}else{console.log('⚠️ No quotes in SOAP response, using sample data');console.log('⚠️ Response message:',response.Message);console.log('⚠️ This might be due to:');console.log('   - Incorrect API credentials');console.log('   - Invalid parameter values');console.log('   - API restrictions or downtime');console.log('   - Date range issues (past dates)');setIsLoadingQuotes(false);return generateSampleSOAPQuotes();}}catch(error){console.error('❌ Error getting real SOAP quotes:',error);setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');setIsLoadingQuotes(false);// Fallback to sample SOAP response data\nconsole.log('🔄 Using sample SOAP response data');return generateSampleSOAPQuotes();}};// Generate sample quotes using your SOAP response data\nconst generateSampleSOAPQuotes=()=>{const allSampleQuotes=[{id:'soap-12345',name:'TravelSafe Basic 2024 - Single Trip Travel Insurance',type:'premium',// Best buy\nprice:72.60,coverage:{medical:'€5,000,000',// Cover level 5\nbaggage:'€1,000',cancellation:'€2,000',activities:['Standard activities','Adventure sports']},features:['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection','Best Buy Option','Up to 90 days per trip'],// Real SOAP response data from QuoteID 12345\nterracottaQuoteId:'12345',schemaName:'TravelSafe Basic 2024',policyTypeName:'Single Trip Travel Insurance',typePolicyName:'Single Trip Travel Insurance',summaryOfCoverUrl:'https://terracotta.example.com/summary/12345.pdf',policyWordingUrl:'https://terracotta.example.com/wording/12345.pdf',currency:'EUR',ipt:12.60,// Complete SOAP response fields\nschemaID:683,destinationCategory:'Europe',tripType:formData.tripType,residenceName:'Greece',destinationName:'Europe',packageName:'TravelSafe Standard',typePackageName:'Standard Package',isAnnual:0,isBestBuy:1,isBestBuyText:'Best Value Option',maxDaysPerTrip:90,coverLevel:5,discount:0.00,iconURL:'https://terracotta.example.com/icons/basic.png',helpFile:'https://terracotta.example.com/help/12345.html',policytypeShortName:'Single Trip',// Additional SOAP fields\nkeyFactsUrl:'https://terracotta.example.com/keyfacts/12345.pdf',policyTypeID:1,destinationID:2,packageID:1,screeningPremium:0.00,ipRate:21.00,netUW:60.00,wbComm:5.40,agentComm:7.20},{id:'soap-12346',name:'TravelSafe Premium 2024 - Single Trip Travel Insurance',type:'standard',price:108.90,coverage:{medical:'€10,000,000',// Cover level 10\nbaggage:'€1,000',cancellation:'€2,000',activities:['Standard activities','Adventure sports']},features:['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection','Up to 120 days per trip'],// Real SOAP response data from QuoteID 12346\nterracottaQuoteId:'12346',schemaName:'TravelSafe Premium 2024',policyTypeName:'Single Trip Travel Insurance',typePolicyName:'Single Trip Travel Insurance',summaryOfCoverUrl:'https://terracotta.example.com/summary/12346.pdf',policyWordingUrl:'https://terracotta.example.com/wording/12346.pdf',currency:'EUR',ipt:18.90,// Complete SOAP response fields\nschemaID:717,destinationCategory:'Europe',tripType:formData.tripType,residenceName:'Greece',destinationName:'Europe',packageName:'TravelSafe Premium',typePackageName:'Premium Package',isAnnual:0,isBestBuy:0,isBestBuyText:'',maxDaysPerTrip:120,coverLevel:10,discount:0.00,iconURL:'https://terracotta.example.com/icons/premium.png',helpFile:'https://terracotta.example.com/help/12346.html',policytypeShortName:'Single Trip',// Additional SOAP fields\nkeyFactsUrl:'https://terracotta.example.com/keyfacts/12346.pdf',policyTypeID:1,destinationID:2,packageID:2,screeningPremium:0.00,ipRate:21.00,netUW:90.00,wbComm:8.10,agentComm:10.80}];// Sort by IPT (highest first) and take top 3\nconst sortedByIPT=allSampleQuotes.sort((a,b)=>{const iptA=a.ipt||0;const iptB=b.ipt||0;return iptB-iptA;// Descending order (highest IPT first)\n});const top3=sortedByIPT.slice(0,3);// Sort the top 3 by price (ascending - least expensive to most expensive)\nreturn top3.sort((a,b)=>a.price-b.price);};// Helper function to calculate coverage levels using real SOAP data\nconst calculateRealCoverageLevels=(result,destination,tripType)=>{// Use real data from SOAP response when available, fallback to calculated values\nconst baseMedical=result.coverLevel>0?\"\\u20AC\".concat((result.coverLevel*1000000).toLocaleString()):tripType==='annual'?'€5,000,000':'€2,000,000';const baseBaggage='€1,000';// This would ideally come from SOAP response\nconst baseCancellation='€2,000';// This would ideally come from SOAP response\n// Enhance coverage based on destination category and SOAP data\nlet medicalMultiplier=1;let baggageMultiplier=1;let cancellationMultiplier=1;if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){medicalMultiplier=2;baggageMultiplier=1.5;cancellationMultiplier=2;}else if(destination.toLowerCase().includes('europe')){medicalMultiplier=1.5;baggageMultiplier=1.2;cancellationMultiplier=1.5;}// Use SOAP cover level if available\nif(result.coverLevel>0){medicalMultiplier=1;// Use the real cover level from SOAP\n}return{medical:result.coverLevel>0?baseMedical:\"\\u20AC\".concat((parseInt(baseMedical.replace(/[€,]/g,''))*medicalMultiplier).toLocaleString()),baggage:\"\\u20AC\".concat((parseInt(baseBaggage.replace(/[€,]/g,''))*baggageMultiplier).toLocaleString()),cancellation:\"\\u20AC\".concat((parseInt(baseCancellation.replace(/[€,]/g,''))*cancellationMultiplier).toLocaleString()),activities:generateActivitiesForDestination(destination)};};// Helper function to generate features using real SOAP data\nconst generateFeaturesFromSOAPData=(result,destination,tripType)=>{const baseFeatures=['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection'];const soapFeatures=[];const destinationFeatures=[];// Add features based on SOAP response data\nif(result.isAnnual===1){soapFeatures.push('Annual Multi-Trip Coverage','Unlimited Trips','Annual Policy Benefits');}if(result.isBestBuy===1){soapFeatures.push('Best Buy Policy',result.isBestBuyText||'Recommended Option');}if(result.maxDaysPerTrip>0){soapFeatures.push(\"Up to \".concat(result.maxDaysPerTrip,\" days per trip\"));}if(result.discount>0){soapFeatures.push(\"\".concat(result.discount,\"% Discount Applied\"));}// Add destination-specific features\nif(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){destinationFeatures.push('Worldwide Medical Coverage','Emergency Repatriation','High-Risk Activity Coverage');}else if(destination.toLowerCase().includes('europe')){destinationFeatures.push('EU Medical Card Coverage','Schengen Zone Protection');}if(tripType==='comprehensive'){destinationFeatures.push('Enhanced Coverage','Adventure Sports','Winter Sports','Business Travel');}return[...baseFeatures,...soapFeatures,...destinationFeatures];};// Helper function to calculate coverage levels based on destination and trip type (fallback)\nconst calculateCoverageLevels=(destination,tripType,price)=>{const baseMedical=tripType==='annual'?'€5,000,000':tripType==='longstay'?'€3,000,000':'€2,000,000';const baseBaggage='€1,000';const baseCancellation='€2,000';// Enhance coverage based on destination category\nlet medicalMultiplier=1;let baggageMultiplier=1;let cancellationMultiplier=1;if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){medicalMultiplier=2;baggageMultiplier=1.5;cancellationMultiplier=2;}else if(destination.toLowerCase().includes('europe')){medicalMultiplier=1.5;baggageMultiplier=1.2;cancellationMultiplier=1.5;}// Enhance based on price level\nif(price>200){medicalMultiplier*=2;baggageMultiplier*=2;cancellationMultiplier*=2;}else if(price>100){medicalMultiplier*=1.5;baggageMultiplier*=1.5;cancellationMultiplier*=1.5;}return{medical:\"\\u20AC\".concat((parseInt(baseMedical.replace(/[€,]/g,''))*medicalMultiplier).toLocaleString()),baggage:\"\\u20AC\".concat((parseInt(baseBaggage.replace(/[€,]/g,''))*baggageMultiplier).toLocaleString()),cancellation:\"\\u20AC\".concat((parseInt(baseCancellation.replace(/[€,]/g,''))*cancellationMultiplier).toLocaleString()),activities:generateActivitiesForDestination(destination)};};// Helper function to determine quote type based on price and index\nconst determineQuoteType=(price,index)=>{if(price<50)return'basic';if(price<150)return'standard';return'premium';};// Helper function to generate features based on destination and trip type\nconst generateFeaturesForDestination=(destination,tripType)=>{const baseFeatures=['24/7 Emergency Assistance','Medical Coverage','Trip Cancellation','Baggage Protection'];const destinationFeatures=[];if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){destinationFeatures.push('Worldwide Medical Coverage','Emergency Repatriation','High-Risk Activity Coverage');}else if(destination.toLowerCase().includes('europe')){destinationFeatures.push('EU Medical Card Coverage','Schengen Zone Protection');}if(tripType==='annual'){destinationFeatures.push('Multiple Trip Coverage','Annual Policy Benefits','Unlimited Trips');}else if(tripType==='longstay'){destinationFeatures.push('Extended Stay Coverage','Long Term Medical','Extended Baggage Protection','Long Stay Benefits');}else if(tripType==='comprehensive'){destinationFeatures.push('Enhanced Coverage','Adventure Sports','Winter Sports','Business Travel');}return[...baseFeatures,...destinationFeatures];};// Helper function to generate activities based on destination\nconst generateActivitiesForDestination=destination=>{const baseActivities=['Standard activities'];if(destination.toLowerCase().includes('worldwide')||destination.toLowerCase().includes('america')){return['Standard activities','Adventure sports','Extreme sports','Water sports','Winter sports'];}else if(destination.toLowerCase().includes('europe')){return['Standard activities','Adventure sports','Winter sports'];}return baseActivities;};// Enhanced mock quote generation that simulates Terracotta-style data\nconst generateEnhancedMockQuoteOptions=()=>{const days=formData.startDate&&formData.endDate?Math.ceil((new Date(formData.endDate).getTime()-new Date(formData.startDate).getTime())/(1000*3600*24)):7;let basePrice=formData.tripType==='annual'?99:formData.tripType==='longstay'?60:40;const dailyRate=formData.tripType==='annual'?0:formData.tripType==='longstay'?3:5;const tripMultiplier=formData.tripType==='comprehensive'?1.5:formData.tripType==='longstay'?1.2:1;// Generate multiple mock quotes based on available schemas\nconst mockQuotes=[];// Create quotes for each available schema if we have them, otherwise use defaults\nconst schemasToUse=availableProducts.length>0?availableProducts:[{SchemaID:683,SchemaName:'TravelSafe Basic'},{SchemaID:717,SchemaName:'TravelSafe Premium'}];schemasToUse.forEach((schema,index)=>{const price=Math.round((basePrice+days*dailyRate+index*30)*formData.numberOfTravelers*tripMultiplier);const coverage=calculateCoverageLevels(formData.destination,formData.tripType,price);const features=generateFeaturesForDestination(formData.destination,formData.tripType);const quoteType=determineQuoteType(price,index);mockQuotes.push({id:\"mock-\".concat(schema.SchemaID,\"-\").concat(index),name:\"\".concat(schema.SchemaName,\" - \").concat(formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip'),type:quoteType,price:price,coverage:coverage,features:features,// Terracotta specific fields (mock)\nterracottaQuoteId:\"mock-\".concat(schema.SchemaID,\"-\").concat(Date.now()),schemaName:schema.SchemaName,policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/mock.pdf',policyWordingUrl:'https://terracotta.example.com/wording/mock.pdf',currency:'EUR',ipt:Math.round(price*0.21),// 21% IPT\n// Additional metadata\nschemaID:schema.SchemaID,destinationCategory:formData.destination,tripType:formData.tripType});});return mockQuotes;};// Legacy mock quotes (kept for backward compatibility)\nconst generateLegacyMockQuoteOptions=()=>{const days=formData.startDate&&formData.endDate?Math.ceil((new Date(formData.endDate).getTime()-new Date(formData.startDate).getTime())/(1000*3600*24)):7;let basePrice=formData.tripType==='annual'?99:formData.tripType==='longstay'?60:40;const dailyRate=formData.tripType==='annual'?0:formData.tripType==='longstay'?3:5;const tripMultiplier=formData.tripType==='comprehensive'?1.5:formData.tripType==='longstay'?1.2:1;const options=[{id:'terracotta-basic',name:'Terracotta TravelSafe Basic',type:'basic',price:Math.round((basePrice+days*dailyRate)*formData.numberOfTravelers*tripMultiplier),coverage:{medical:formData.tripType==='annual'?'€5,000,000':'€2,000,000',baggage:'€1,000',cancellation:'€2,000',activities:['Standard activities']},features:['Emergency Medical Coverage','Trip Cancellation','Baggage Protection','24/7 Assistance'],// Terracotta-specific fields (simulated)\nterracottaQuoteId:\"TC-\".concat(Date.now(),\"-001\"),schemaName:'TravelSafe Basic',policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/basic.pdf',policyWordingUrl:'https://terracotta.example.com/wording/basic.pdf',currency:'EUR',ipt:15.50},{id:'terracotta-standard',name:'Terracotta TravelSafe Standard',type:'standard',price:Math.round((basePrice+days*dailyRate)*1.3*formData.numberOfTravelers*tripMultiplier),coverage:{medical:formData.tripType==='annual'?'€10,000,000':'€5,000,000',baggage:'€2,500',cancellation:'€5,000',activities:['Standard activities','Adventure sports']},features:['Enhanced Medical Coverage','Trip Cancellation & Curtailment','Enhanced Baggage Protection','Adventure Sports Coverage','24/7 Assistance','Travel Delay Compensation'],// Terracotta-specific fields (simulated)\nterracottaQuoteId:\"TC-\".concat(Date.now(),\"-002\"),schemaName:'TravelSafe Standard',policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/standard.pdf',policyWordingUrl:'https://terracotta.example.com/wording/standard.pdf',currency:'EUR',ipt:22.75},{id:'terracotta-premium',name:'Terracotta TravelSafe Premium',type:'premium',price:Math.round((basePrice+days*dailyRate)*1.8*formData.numberOfTravelers*tripMultiplier),coverage:{medical:formData.tripType==='annual'?'€10,000,000':'€10,000,000',baggage:'€5,000',cancellation:'€10,000',activities:['All activities','Extreme sports','Winter sports']},features:['Maximum Medical Coverage','Comprehensive Trip Protection','Premium Baggage Coverage','All Sports & Activities','24/7 VIP Assistance','Travel Delay & Missed Connections','Personal Liability Coverage','Emergency Cash Advance'],// Terracotta-specific fields (simulated)\nterracottaQuoteId:\"TC-\".concat(Date.now(),\"-003\"),schemaName:'TravelSafe Premium',policyTypeName:formData.tripType==='annual'?'Annual Multi-Trip':'Single Trip',summaryOfCoverUrl:'https://terracotta.example.com/summary/premium.pdf',policyWordingUrl:'https://terracotta.example.com/wording/premium.pdf',currency:'EUR',ipt:35.00}];return options;};// Custom Date Picker Component\nconst CustomDatePicker=_ref2=>{let{id,value,onChange,placeholder,required,minDate}=_ref2;const[isOpen,setIsOpen]=useState(false);const[currentDate,setCurrentDate]=useState(()=>{// Initialize with selected date if available, otherwise current date\nreturn value?new Date(value):new Date();});const pickerRef=useRef(null);useEffect(()=>{const handleClickOutside=event=>{if(pickerRef.current&&!pickerRef.current.contains(event.target)){setIsOpen(false);}};if(isOpen){document.addEventListener('mousedown',handleClickOutside);}return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[isOpen]);// Update current date when value changes to show the correct month\nuseEffect(()=>{if(value){setCurrentDate(new Date(value));}},[value]);// Helper function to check if a date is valid (not in past and not before minDate)\nconst isDateValid=date=>{const today=new Date();today.setHours(0,0,0,0);// Reset time to start of day for accurate comparison\n// Reset the input date to start of day for accurate comparison\nconst inputDate=new Date(date);inputDate.setHours(0,0,0,0);// Check if date is in the past\nif(inputDate<today){return false;}// Check if date is before minimum date\nif(minDate){const minDateObj=new Date(minDate);minDateObj.setHours(0,0,0,0);if(inputDate<minDateObj){return false;}}return true;};const generateCalendar=()=>{const year=currentDate.getFullYear();const month=currentDate.getMonth();const firstDay=new Date(year,month,1);const lastDay=new Date(year,month+1,0);const daysInMonth=lastDay.getDate();const startingDayOfWeek=firstDay.getDay();const days=[];// Add empty cells for days before the first day of the month\nfor(let i=0;i<startingDayOfWeek;i++){days.push(/*#__PURE__*/_jsx(\"div\",{className:\"calendar-day empty\"},\"empty-\".concat(i)));}// Add days of the month\nfor(let day=1;day<=daysInMonth;day++){const date=new Date(year,month,day);// Create ISO string manually to avoid timezone issues\nconst dateString=\"\".concat(year,\"-\").concat((month+1).toString().padStart(2,'0'),\"-\").concat(day.toString().padStart(2,'0'));const isSelected=value===dateString;const isToday=new Date().toDateString()===date.toDateString();const isValid=isDateValid(date);days.push(/*#__PURE__*/_jsx(\"div\",{className:\"calendar-day \".concat(isSelected?'selected':'',\" \").concat(isToday?'today':'',\" \").concat(!isValid?'disabled':''),onClick:()=>{if(isValid){onChange(dateString);setIsOpen(false);}},style:{cursor:isValid?'pointer':'not-allowed',opacity:isValid?1:0.4},children:day},day));}return days;};const navigateMonth=direction=>{setCurrentDate(new Date(currentDate.getFullYear(),currentDate.getMonth()+direction,1));};const monthNames=['January','February','March','April','May','June','July','August','September','October','November','December'];return/*#__PURE__*/_jsxs(\"div\",{className:\"custom-date-picker\",ref:pickerRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-input-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:id,value:value?formatDateToEuropean(value):'',onChange:e=>{const formattedValue=formatDateInput(e.target.value);const isoDate=formattedValue.length===10?convertToISO(formattedValue):'';// Validate that the date is valid (not in past and not before minDate)\nif(isoDate){const inputDate=new Date(isoDate);if(!isDateValid(inputDate)){// Don't update the value if it's an invalid date\nreturn;}}onChange(isoDate);},placeholder:placeholder,title:minDate?\"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\":\"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\",pattern:\"\\\\d{2}/\\\\d{2}/\\\\d{4}\",maxLength:10,required:required}),/*#__PURE__*/_jsx(\"span\",{className:\"date-icon clickable\",onClick:()=>setIsOpen(!isOpen),title:\"Open calendar\",children:\"\\uD83D\\uDCC5\"})]}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-popup\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"calendar-header\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"calendar-nav-btn\",onClick:()=>navigateMonth(-1),children:\"\\u2039\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"calendar-month-year\",children:[monthNames[currentDate.getMonth()],\" \",currentDate.getFullYear()]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"calendar-nav-btn\",onClick:()=>navigateMonth(1),children:\"\\u203A\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"calendar-weekdays\",children:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].map(day=>/*#__PURE__*/_jsx(\"div\",{className:\"calendar-weekday\",children:day},day))}),/*#__PURE__*/_jsx(\"div\",{className:\"calendar-days\",children:generateCalendar()})]})]});};const handleInputChange=(field,value)=>{setFormData(prev=>{const newData=_objectSpread(_objectSpread({},prev),{},{[field]:value});// If start date is changed, clear end date if it's now invalid\nif(field==='startDate'&&value&&prev.endDate){const startDate=new Date(value);const endDate=new Date(prev.endDate);startDate.setDate(startDate.getDate()+1);// Add 1 day to start date\n// If end date is before or equal to start date, clear it\nif(endDate<=startDate){newData.endDate='';}}return newData;});};const handleTravelerChange=(index,field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{travelers:prev.travelers.map((traveler,i)=>i===index?_objectSpread(_objectSpread({},traveler),{},{[field]:value}):traveler)}));};const handleNumberOfTravelersChange=count=>{setFormData(prev=>{const travelers=[...prev.travelers];if(count>travelers.length){// Add new travelers\nfor(let i=travelers.length;i<count;i++){travelers.push({firstName:'',lastName:'',age:'',email:'',phone:'',vaxId:'',nationality:''});}}else if(count<travelers.length){// Remove travelers\ntravelers.splice(count);}return _objectSpread(_objectSpread({},prev),{},{numberOfTravelers:count,travelers});});};const handleBillingAddressChange=(field,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{billingAddress:_objectSpread(_objectSpread({},prev.billingAddress),{},{[field]:value})}));};// Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\nconst convertToISO=ddmmyyyy=>{if(!ddmmyyyy||ddmmyyyy.length!==10)return'';const[day,month,year]=ddmmyyyy.split('/');// Create date in local timezone to avoid timezone issues\nconst date=new Date(parseInt(year),parseInt(month)-1,parseInt(day));return date.toISOString().split('T')[0];};// Helper function to format input as DD/MM/YYYY\nconst formatDateInput=value=>{// Remove all non-digits\nconst digits=value.replace(/\\D/g,'');// Format as DD/MM/YYYY\nif(digits.length>=8){return\"\".concat(digits.slice(0,2),\"/\").concat(digits.slice(2,4),\"/\").concat(digits.slice(4,8));}else if(digits.length>=4){return\"\".concat(digits.slice(0,2),\"/\").concat(digits.slice(2,4),\"/\").concat(digits.slice(4));}else if(digits.length>=2){return\"\".concat(digits.slice(0,2),\"/\").concat(digits.slice(2));}return digits;};const fetchGeneralConditions=async()=>{var _formData$selectedQuo11;if((_formData$selectedQuo11=formData.selectedQuote)!==null&&_formData$selectedQuo11!==void 0&&_formData$selectedQuo11.terracottaQuoteId){try{console.log('🔄 Fetching general conditions (screening questions) for QuoteID:',formData.selectedQuote.terracottaQuoteId);const screeningResponse=await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);console.log('📥 General Conditions Response:',screeningResponse);if(screeningResponse.screeningQuestions&&screeningResponse.screeningQuestions.length>0){setGeneralConditionsData(screeningResponse.screeningQuestions);console.log('✅ General conditions loaded from API:',screeningResponse.screeningQuestions);setShowGeneralConditions(true);}else{console.warn('⚠️ No general conditions in API response');setGeneralConditionsData([]);setShowGeneralConditions(true);}}catch(error){console.error('❌ Error fetching general conditions:',error);// Show empty popup on error\nsetGeneralConditionsData([]);setShowGeneralConditions(true);}}};const handleTermsAcceptance=checked=>{setTermsAccepted(checked);if(checked&&screeningQuestions.length>0){// When checkbox is checked, automatically answer \"yes\" to all screening questions (yesAction)\nconst allYesAnswers={};screeningQuestions.forEach(question=>{allYesAnswers[question.questionNumber]='yes';});setScreeningAnswers(allYesAnswers);console.log('✅ Terms accepted - All screening questions answered as \"Yes\" (yesAction triggered)');}else if(!checked){// When unchecked, clear the screening answers\nsetScreeningAnswers({});console.log('❌ Terms not accepted - Screening answers cleared');}};const nextPhase=async()=>{if(currentPhase===1){// Generate quotes when moving from phase 1 to 2\ntry{console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');console.log('📋 Current Form Data:',JSON.stringify(formData,null,2));const options=await generateQuoteOptions();console.log('✅ Quote options received:',options);console.log('📊 Number of quotes:',options.length);setQuoteOptions(options);// Automatically pre-select the Essential plan\nconst essentialPlan=options.find(option=>{var _option$name,_option$policytypeNam;return((_option$name=option.name)===null||_option$name===void 0?void 0:_option$name.toLowerCase().includes('essential'))||((_option$policytypeNam=option.policytypeName)===null||_option$policytypeNam===void 0?void 0:_option$policytypeNam.toLowerCase().includes('essential'));});if(essentialPlan){console.log('✅ Auto-selected Essential plan:',essentialPlan);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedQuote:essentialPlan}));}else{console.log('⚠️ No Essential plan found, selecting first available quote');if(options.length>0){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedQuote:options[0]}));}}}catch(error){console.error('❌ CRITICAL ERROR generating quotes:',error);console.error('Error details:',error instanceof Error?error.message:String(error));console.error('Error stack:',error instanceof Error?error.stack:'No stack trace');setQuoteError('Failed to generate quotes. Please try again.');return;// Don't proceed to next phase if quotes failed\n}}if(currentPhase<6){setCurrentPhase(prev=>prev+1);window.scrollTo(0,0);}};const prevPhase=()=>{if(currentPhase>1){setCurrentPhase(prev=>prev-1);window.scrollTo(0,0);}};const selectQuote=quote=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{selectedQuote:quote}));};const addAdditionalPolicy=async policy=>{// Prevent multiple simultaneous requests\nif(processingAddonId){return;}try{var _formData$selectedQuo12,_formData$billingAddr,_formData$billingAddr2,_formData$travelers$,_formData$travelers$2;setProcessingAddonId(policy.id);// Check if quoteID is available\nif(!((_formData$selectedQuo12=formData.selectedQuote)!==null&&_formData$selectedQuo12!==void 0&&_formData$selectedQuo12.terracottaQuoteId)){alert('Error: No quote selected. Please select a quote first.');return;}// Build comma-separated list of alteration IDs (existing + new one)\nconst existingAlterationIds=formData.additionalPolicies.map(p=>p.alterationId);const allAlterationIds=[...existingAlterationIds,policy.alterationId].join(',');// Convert travelers to Terracotta format\nconst travelers=formData.travelers.map((traveler,index)=>{const age=traveler.dateOfBirth?calculateAgeFromDOB(traveler.dateOfBirth):parseInt(traveler.age)||25;const dateOfBirth=traveler.dateOfBirth||calculateDOBFromAge(age);return{TravellerNumber:index+1,Title:traveler.title||'Mr',FirstName:traveler.firstName||'Customer',LastName:traveler.lastName||'Name',DateOfBirth:formatDateForTerracotta(dateOfBirth),Age:age,TitleID:getTitleID(traveler.title||'Mr'),AlterationID:''// Empty for individual traveler alterations\n};});// Build contact details\nconst contactDetails={Address:((_formData$billingAddr=formData.billingAddress)===null||_formData$billingAddr===void 0?void 0:_formData$billingAddr.street)||'123 Main Street',Postcode:((_formData$billingAddr2=formData.billingAddress)===null||_formData$billingAddr2===void 0?void 0:_formData$billingAddr2.postalCode)||'12345',Email:((_formData$travelers$=formData.travelers[0])===null||_formData$travelers$===void 0?void 0:_formData$travelers$.email)||'customer@example.com',Telephone:((_formData$travelers$2=formData.travelers[0])===null||_formData$travelers$2===void 0?void 0:_formData$travelers$2.phone)||'+302101234567'};// Build SOAP request\nconst alterationsRequest={userID:'4072',userCode:'111427',quoteID:formData.selectedQuote.terracottaQuoteId,specificQuoteDetails:{AlterationID:allAlterationIds,Travellers:travelers,ContactDetails:contactDetails}};// Call SOAP service\nconst response=await terracottaService.provideQuotationWithAlterations(alterationsRequest);// Extract the updated price from the response\nif(response.quoteResults&&response.quoteResults.length>0){const updatedQuote=response.quoteResults[0];const newGrossPrice=updatedQuote.GrossPrice;// Store the total GrossPrice (this is the complete price including base + all addons)\nsetTotalGrossPriceWithAddons(newGrossPrice);// Add the policy to state (price will be calculated from total)\nsetFormData(prev=>_objectSpread(_objectSpread({},prev),{},{additionalPolicies:[...prev.additionalPolicies,policy]}));}else{// Still add the addon but with 0 price\nsetFormData(prev=>_objectSpread(_objectSpread({},prev),{},{additionalPolicies:[...prev.additionalPolicies,policy]}));}}catch(error){console.error('Error adding addon with alterations:',error);alert(\"Error adding addon: \".concat(error instanceof Error?error.message:'Unknown error',\". Please try again.\"));}finally{setProcessingAddonId(null);}};// Helper functions for date/age calculations\nconst calculateAgeFromDOB=dob=>{const birthDate=new Date(dob);const today=new Date();let age=today.getFullYear()-birthDate.getFullYear();const monthDiff=today.getMonth()-birthDate.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birthDate.getDate()){age--;}return Math.max(0,age);};const calculateDOBFromAge=age=>{const currentYear=new Date().getFullYear();const birthYear=currentYear-age;return\"\".concat(birthYear,\"/05/20\");// Use May 20 as default date\n};const formatDateForTerracotta=dateString=>{if(!dateString)return'';// Handle different formats\nif(dateString.includes('/')){const parts=dateString.split('/');if(parts.length===3&&parts[0].length===4){return dateString;// Already in YYYY/MM/DD format\n}else if(parts.length===3){// Convert DD/MM/YYYY to YYYY/MM/DD\nreturn\"\".concat(parts[2],\"/\").concat(parts[1],\"/\").concat(parts[0]);}}if(dateString.includes('-')){return dateString.replace(/-/g,'/');}return dateString;};const getTitleID=title=>{const titleMap={'Mr':1,'Mrs':2,'Miss':3,'Ms':4,'Dr':5,'Prof':6};return titleMap[title]||1;};const removeAdditionalPolicy=async policyId=>{try{var _formData$selectedQuo13;setProcessingAddonId(policyId);// Remove the addon from the list first\nconst remainingAddons=formData.additionalPolicies.filter(p=>p.id!==policyId);setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{additionalPolicies:remainingAddons}));// If no addons remaining, reset to base price\nif(remainingAddons.length===0){setTotalGrossPriceWithAddons(null);setProcessingAddonId(null);return;}// If there are still addons, call SOAP to get updated price\nif((_formData$selectedQuo13=formData.selectedQuote)!==null&&_formData$selectedQuo13!==void 0&&_formData$selectedQuo13.terracottaQuoteId){var _formData$billingAddr3,_formData$billingAddr4,_formData$travelers$3,_formData$travelers$4;// Build comma-separated list of remaining alteration IDs\nconst remainingAlterationIds=remainingAddons.map(p=>p.alterationId).join(',');// Convert travelers to Terracotta format\nconst travelers=formData.travelers.map((traveler,index)=>{const age=traveler.dateOfBirth?calculateAgeFromDOB(traveler.dateOfBirth):parseInt(traveler.age)||25;const dateOfBirth=traveler.dateOfBirth||calculateDOBFromAge(age);return{TravellerNumber:index+1,Title:traveler.title||'Mr',FirstName:traveler.firstName||'Customer',LastName:traveler.lastName||'Name',DateOfBirth:formatDateForTerracotta(dateOfBirth),Age:age,TitleID:getTitleID(traveler.title||'Mr'),AlterationID:''};});// Build contact details\nconst contactDetails={Address:((_formData$billingAddr3=formData.billingAddress)===null||_formData$billingAddr3===void 0?void 0:_formData$billingAddr3.street)||'123 Main Street',Postcode:((_formData$billingAddr4=formData.billingAddress)===null||_formData$billingAddr4===void 0?void 0:_formData$billingAddr4.postalCode)||'12345',Email:((_formData$travelers$3=formData.travelers[0])===null||_formData$travelers$3===void 0?void 0:_formData$travelers$3.email)||'customer@example.com',Telephone:((_formData$travelers$4=formData.travelers[0])===null||_formData$travelers$4===void 0?void 0:_formData$travelers$4.phone)||'+302101234567'};// Build SOAP request\nconst alterationsRequest={userID:'4072',userCode:'111427',quoteID:formData.selectedQuote.terracottaQuoteId,specificQuoteDetails:{AlterationID:remainingAlterationIds,Travellers:travelers,ContactDetails:contactDetails}};// Call SOAP service\nconst response=await terracottaService.provideQuotationWithAlterations(alterationsRequest);// Update the GrossPrice\nif(response.quoteResults&&response.quoteResults.length>0){const updatedQuote=response.quoteResults[0];const newGrossPrice=updatedQuote.GrossPrice;setTotalGrossPriceWithAddons(newGrossPrice);}}}catch(error){console.error('Error updating price after addon removal:',error);// Keep the addon removed even if SOAP call fails\n}finally{setProcessingAddonId(null);}};const calculateTotalPrice=()=>{var _formData$selectedQuo14,_formData$selectedQuo15;// If we have a GrossPrice from SOAP alterations, use that\nif(totalGrossPriceWithAddons!==null&&formData.additionalPolicies.length>0){return totalGrossPriceWithAddons;}// Otherwise, use the base price + individual addon prices (fallback)\nconst basePrice=typeof((_formData$selectedQuo14=formData.selectedQuote)===null||_formData$selectedQuo14===void 0?void 0:_formData$selectedQuo14.price)==='number'?formData.selectedQuote.price:parseFloat(((_formData$selectedQuo15=formData.selectedQuote)===null||_formData$selectedQuo15===void 0?void 0:_formData$selectedQuo15.price)||'0');const additionalPrice=formData.additionalPolicies.reduce((sum,policy)=>sum+policy.price,0);return basePrice+additionalPrice;};const generatePolicyPDF=async()=>{if(!policyNumber){console.error('⚠️ Cannot generate PDF: No policy number available');alert('Policy number not available. Please contact support.');return;}console.log('📄 Generating PDF for Policy ID:',policyNumber);await generatePDF(formData,calculateTotalPrice,formatDateToEuropean,policyNumber);};const downloadPolicyPDF=()=>{generatePolicyPDF();};const processPayment=async()=>{var _formData$travelers$5;// Validate that terms are accepted before processing payment\nif(!termsAccepted){alert('Please accept the Privacy Policy, Terms and Conditions and General conditions to proceed with payment.');return;}// Validate email address for policy holder (Traveler 1)\nconst policyHolderEmail=(_formData$travelers$5=formData.travelers[0])===null||_formData$travelers$5===void 0?void 0:_formData$travelers$5.email;if(!policyHolderEmail||policyHolderEmail.trim()===''){alert('❌ Policy holder email is required.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) before proceeding with payment.');return;}// Email validation regex pattern (RFC 5322 compliant)\nconst emailRegex=/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;if(!emailRegex.test(policyHolderEmail.trim())){alert(\"\\u274C Invalid Email Address\\n\\nThe email address \\\"\".concat(policyHolderEmail,\"\\\" is not valid.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) in the format: example@domain.com\"));return;}// Validate emails for all other travelers if provided\nfor(let i=0;i<formData.travelers.length;i++){const traveler=formData.travelers[i];if(traveler.email&&traveler.email.trim()!==''){if(!emailRegex.test(traveler.email.trim())){alert(\"\\u274C Invalid Email Address\\n\\nThe email address \\\"\".concat(traveler.email,\"\\\" for Traveler \").concat(i+1,\" (\").concat(traveler.firstName,\" \").concat(traveler.lastName,\") is not valid.\\n\\nPlease enter a valid email address in the format: example@domain.com\"));return;}}}console.log('✅ Email validation passed for all travelers');// Validate VAT ID for Greece (Traveler 1/Policy Holder)\nif(formData.countryOfResidence==='Greece'){var _formData$travelers$6;const vatId=(_formData$travelers$6=formData.travelers[0])===null||_formData$travelers$6===void 0?void 0:_formData$travelers$6.vaxId;if(!vatId||vatId.trim()===''){alert('❌ VAT ID Required\\n\\nFor residents of Greece, VAT ID is mandatory for the policy holder.\\n\\nPlease enter the VAT ID for Traveler 1 (Policy Holder) before proceeding with payment.');return;}console.log('✅ VAT ID validation passed for Greece:',vatId);}else{console.log('✅ VAT ID validation skipped (not Greece)');}setIsProcessing(true);try{// First save the quote to database\n// Add TravellerNumber to each traveler (index + 1)\nconst travelersWithNumber=formData.travelers.map((traveler,index)=>_objectSpread(_objectSpread({},traveler),{},{travellerNumber:index+1}));const quoteData={destination:formData.destination,countryOfResidence:formData.countryOfResidence,startDate:formData.startDate,endDate:formData.endDate,tripType:formData.tripType,numberOfTravelers:formData.numberOfTravelers,travelers:travelersWithNumber,selectedQuote:formData.selectedQuote,additionalPolicies:formData.additionalPolicies,totalAmount:calculateTotalPrice()};// console.log('Saving quote to database...', quoteData);\n// console.log('Quote data JSON string:', JSON.stringify(quoteData));\nconst quoteResponse=await createQuote(quoteData);if(quoteResponse.status==='success'&&quoteResponse.data){var _formData$travelers$7,_formData$travelers$8,_formData$selectedQuo16,_formData$selectedQuo21;const quoteId=quoteResponse.data.quoteId;// Convert screening answers to Terracotta format\nconst terracottaScreeningAnswers=Object.entries(screeningAnswers).map(_ref3=>{let[questionNumber,answer]=_ref3;return{questionNumber:parseInt(questionNumber),answer:answer};});// Build travelers array and contact details with REAL data from payment step\nconsole.log('🔍 DEBUG: formData.travelers at payment time:',JSON.stringify(formData.travelers,null,2));console.log('🔍 DEBUG: formData.billingAddress at payment time:',JSON.stringify(formData.billingAddress,null,2));const travelers=formData.travelers.map((traveler,index)=>{console.log(\"\\uD83D\\uDD0D DEBUG: Processing traveler \".concat(index+1,\":\"),{firstName:traveler.firstName,lastName:traveler.lastName,age:traveler.age,dateOfBirth:traveler.dateOfBirth,title:traveler.title,email:traveler.email,phone:traveler.phone});const age=traveler.dateOfBirth?calculateAgeFromDOB(traveler.dateOfBirth):parseInt(traveler.age)||30;const dateOfBirth=traveler.dateOfBirth||calculateDOBFromAge(age);const travelerData={TravellerNumber:index+1,Title:traveler.title||'Mr',FirstName:traveler.firstName||'',LastName:traveler.lastName||'',DateOfBirth:formatDateForTerracotta(dateOfBirth),Age:age,AgebandID:getAgebandID(age),TitleID:getTitleID(traveler.title||'Mr'),minAge:age,maxAge:age,ScreeningInformation:null};console.log(\"\\u2705 Built traveler \".concat(index+1,\" data:\"),travelerData);return travelerData;});// Build contact details with REAL data from payment step\nconst contactDetails={Address:\"\".concat(formData.billingAddress.street,\", \").concat(formData.billingAddress.city,\", \").concat(formData.billingAddress.country),Postcode:formData.billingAddress.postalCode||'',Email:((_formData$travelers$7=formData.travelers[0])===null||_formData$travelers$7===void 0?void 0:_formData$travelers$7.email)||'',Telephone:((_formData$travelers$8=formData.travelers[0])===null||_formData$travelers$8===void 0?void 0:_formData$travelers$8.phone)||''};console.log('✅ Using REAL Travelers:',travelers);console.log('✅ Using REAL Contact Details:',contactDetails);// Re-fetch quote with REAL traveler data using ProvideQuotation\nif((_formData$selectedQuo16=formData.selectedQuote)!==null&&_formData$selectedQuo16!==void 0&&_formData$selectedQuo16.terracottaQuoteId){try{console.log('🔄 Re-fetching quote with REAL traveler data using ProvideQuotation...');// Build quote request with REAL traveler and contact data\nconst quoteRequestWithRealData={userID:'4072',userCode:'111427',quoteDetails:{ResidenceID:getResidenceID(formData.countryOfResidence),TypePolicyID:getTypePolicyID(formData.tripType,availablePolicyTypes),TypePackageID:'1',Destination:formData.destination||'Europe',StartDate:formatDateForTerracotta(formData.startDate),EndDate:formatDateForTerracotta(formData.endDate),Travellers:travelers,// REAL traveler data\nContactDetails:contactDetails,// REAL contact data\nincludeAnnualQuotes:0,// Always 0 - TypePolicyID determines if it's annual\nincludeUpsell:0,currencyID:1,schemaIDFilter:'717'}};console.log('📤 ProvideQuotation with REAL data:',quoteRequestWithRealData);const updatedQuoteResponse=await terracottaService.provideQuotation(quoteRequestWithRealData);console.log('📥 Updated quote response:',updatedQuoteResponse);// ✅ UPDATE THE QUOTE ID WITH THE NEW ONE THAT HAS REAL DATA\nif(updatedQuoteResponse.quoteResults&&updatedQuoteResponse.quoteResults.length>0){const selectedPlan=updatedQuoteResponse.quoteResults.find(q=>{var _formData$selectedQuo17,_formData$selectedQuo18;return q.policytypeName===((_formData$selectedQuo17=formData.selectedQuote)===null||_formData$selectedQuo17===void 0?void 0:_formData$selectedQuo17.name)||q.GrossPrice===((_formData$selectedQuo18=formData.selectedQuote)===null||_formData$selectedQuo18===void 0?void 0:_formData$selectedQuo18.price);})||updatedQuoteResponse.quoteResults[0];if(selectedPlan&&selectedPlan.QuoteID){console.log('🔄 Updating quoteID from',formData.selectedQuote.terracottaQuoteId,'to',selectedPlan.QuoteID);formData.selectedQuote.terracottaQuoteId=selectedPlan.QuoteID;console.log('✅ Using NEW QuoteID with REAL traveler data:',selectedPlan.QuoteID);}}// If add-ons were selected, re-fetch with alterations using REAL data\nif(formData.additionalPolicies&&formData.additionalPolicies.length>0){console.log('🔄 Re-fetching quote with add-ons using ProvideQuotationWithAlterations...');const alterationIds=formData.additionalPolicies.map(p=>p.alterationId).join(',');const alterationsRequestWithRealData={userID:'4072',userCode:'111427',quoteID:formData.selectedQuote.terracottaQuoteId||'',specificQuoteDetails:{AlterationID:alterationIds,Travellers:travelers,// REAL traveler data\nContactDetails:contactDetails// REAL contact data\n}};console.log('📤 ProvideQuotationWithAlterations with REAL data:',alterationsRequestWithRealData);const updatedAlterationsResponse=await terracottaService.provideQuotationWithAlterations(alterationsRequestWithRealData);console.log('📥 Updated alterations response:',updatedAlterationsResponse);// ✅ UPDATE THE QUOTE ID WITH THE NEW ONE FROM ALTERATIONS\nif(updatedAlterationsResponse.quoteResults&&updatedAlterationsResponse.quoteResults.length>0){const selectedPlan=updatedAlterationsResponse.quoteResults.find(q=>{var _formData$selectedQuo19,_formData$selectedQuo20;return q.policytypeName===((_formData$selectedQuo19=formData.selectedQuote)===null||_formData$selectedQuo19===void 0?void 0:_formData$selectedQuo19.name)||q.GrossPrice===((_formData$selectedQuo20=formData.selectedQuote)===null||_formData$selectedQuo20===void 0?void 0:_formData$selectedQuo20.price);})||updatedAlterationsResponse.quoteResults[0];if(selectedPlan&&selectedPlan.QuoteID){console.log('🔄 Updating quoteID after alterations from',formData.selectedQuote.terracottaQuoteId,'to',selectedPlan.QuoteID);formData.selectedQuote.terracottaQuoteId=selectedPlan.QuoteID;console.log('✅ Using NEW QuoteID with REAL data + alterations:',selectedPlan.QuoteID);}}}}catch(updateError){console.warn('⚠️ Could not update quote with real data, continuing with existing quote:',updateError);console.error('⚠️ This may result in policy using dummy data from initial quote request');}}// Save policy details with Terracotta\nif((_formData$selectedQuo21=formData.selectedQuote)!==null&&_formData$selectedQuo21!==void 0&&_formData$selectedQuo21.terracottaQuoteId){try{console.log('💾 ========================================');console.log('💾 Saving policy details with Terracotta...');console.log('💾 ========================================');console.log('📋 QuoteID being used for SavePolicyDetails:',formData.selectedQuote.terracottaQuoteId);console.log('📋 (This should be the NEW quoteID with REAL traveler data, not the original dummy data quoteID)');console.log('📋 Screening Answers:',terracottaScreeningAnswers);console.log('👥 Traveler Data (REAL from Payment Step):',formData.travelers);console.log('🏠 Billing Address (REAL from Payment Step):',formData.billingAddress);// Log each traveler's details clearly\nconsole.log('📝 SavePolicyDetails - Travelers being sent:');travelers.forEach((t,idx)=>{console.log(\"  Traveler \".concat(idx+1,\": \").concat(t.Title,\" \").concat(t.FirstName,\" \").concat(t.LastName,\", Age: \").concat(t.Age,\", DOB: \").concat(t.DateOfBirth,\", AgebandID: \").concat(t.AgebandID,\", TitleID: \").concat(t.TitleID));});console.log('📝 SavePolicyDetails - Contact Details being sent:',contactDetails);const savePolicyResponse=await terracottaService.savePolicyDetails({userID:'4072',userCode:'111427',quoteID:formData.selectedQuote.terracottaQuoteId,screeningQuestionAnswers:terracottaScreeningAnswers,medicalScreeningReference:'string',useDefaultAnswers:1,travelers:travelers,contactDetails:contactDetails});console.log('✅ SavePolicyDetails response:',savePolicyResponse);console.log('📋 Policy Saved Status:',savePolicyResponse.policySaved);console.log('📋 Policy ID:',savePolicyResponse.policyID);console.log('📄 Certificate URL:',savePolicyResponse.certificate);console.log('📄 Policy Wording URL:',savePolicyResponse.PW);console.log('📄 Summary of Cover URL:',savePolicyResponse.SI);// Handle both \"Yes\" and \"true\" formats for policySaved\nif(savePolicyResponse.policySaved==='Yes'||savePolicyResponse.policySaved==='true'){if(!savePolicyResponse.policyID){console.error('⚠️ Warning: Policy saved but no Policy ID received!');throw new Error('Policy saved but no Policy ID received from Terracotta');}console.log('✅ Policy saved successfully! Policy ID:',savePolicyResponse.policyID);setPolicyNumber(savePolicyResponse.policyID);// Store policy document URLs from SavePolicyDetails response\nconst documents={certificate:savePolicyResponse.certificate||'',policyWording:savePolicyResponse.PW||'',summaryOfCover:savePolicyResponse.SI||'',keyFacts:savePolicyResponse.KF||'',ipid:savePolicyResponse.IPID||''};console.log('📄 Setting policy documents:',documents);console.log('📄 SavePolicyDetails full response:',savePolicyResponse);setPolicyDocuments(documents);// Email Policy Documents to the policy holder\n// VALIDATION: Only proceed if we have ALL required parameters\ntry{var _formData$travelers$9;console.log('📧 Validating parameters for EmailPolicyDocuments...');// Extract required parameters\nconst policyHolderEmail=(_formData$travelers$9=formData.travelers[0])===null||_formData$travelers$9===void 0?void 0:_formData$travelers$9.email;const policyID=savePolicyResponse.policyID;const userID='4072';const userCode='111427';// Validation checks\nconst validationErrors=[];if(!policyID||policyID.trim()===''){validationErrors.push('Policy ID is missing or empty');console.error('❌ VALIDATION FAILED: Policy ID not received from SavePolicyDetails');}if(!policyHolderEmail||policyHolderEmail.trim()===''){validationErrors.push('Policy holder email address is missing');console.error('❌ VALIDATION FAILED: No email address for Traveler 1 (Policy Holder)');}if(!userID||userID.trim()===''){validationErrors.push('User ID is missing');console.error('❌ VALIDATION FAILED: User ID not configured');}if(!userCode||userCode.trim()===''){validationErrors.push('User Code is missing');console.error('❌ VALIDATION FAILED: User Code not configured');}// Log validation status\nif(validationErrors.length>0){console.error('⚠️ EmailPolicyDocuments VALIDATION FAILED:');validationErrors.forEach((error,index)=>{console.error(\"   \".concat(index+1,\". \").concat(error));});console.error('⚠️ Skipping email sending. Policy is saved but documents will not be emailed automatically.');throw new Error(\"Cannot send policy documents email: \".concat(validationErrors.join(', ')));}// All validations passed - log parameters\nconsole.log('✅ All parameters validated successfully:');console.log('   📋 User ID:',userID);console.log('   📋 User Code:',userCode);console.log('   📋 Policy ID:',policyID);console.log('   📧 Email Address:',policyHolderEmail);console.log('📧 Proceeding to send EmailPolicyDocuments request...');// Send EmailPolicyDocuments request\nconst emailResponse=await terracottaService.emailPolicyDocuments({userID:userID,userCode:userCode,policyID:policyID,emailAddress:policyHolderEmail});console.log('✅ EmailPolicyDocuments response:',emailResponse);if(emailResponse.emailSent){console.log('✅ Policy documents successfully emailed to:',policyHolderEmail);alert(\"\\u2705 Success! Policy documents have been sent to \".concat(policyHolderEmail));}else{// Log the response but don't show popup to user\nconsole.warn('⚠️ EmailPolicyDocuments response did not explicitly confirm success:',emailResponse.message);console.warn('⚠️ emailSent value:',emailResponse.emailSent);// No alert - assume success if no error was thrown\n}}catch(emailError){console.error('❌ Error sending policy documents email:',emailError);console.error('⚠️ Continuing with payment process despite email error');// Detailed error logging\nif(emailError instanceof Error){console.error('   Error message:',emailError.message);console.error('   Error stack:',emailError.stack);}// Don't throw - allow payment process to continue even if email fails\nalert('Note: There was an issue sending the policy documents email, but your policy has been saved. Please contact support to receive your documents.');}// Debug: Check if documents are empty and log\nif(!documents.certificate){console.warn('⚠️ Certificate URL not found in SavePolicyDetails response!');console.warn('💡 This might be normal - certificate may need to be generated separately');}if(!documents.policyWording){console.warn('⚠️ Policy Wording URL not found in SavePolicyDetails response!');}if(!documents.summaryOfCover){console.warn('⚠️ Summary of Cover URL not found in SavePolicyDetails response!');}if(!documents.certificate&&!documents.policyWording&&!documents.summaryOfCover){console.warn('⚠️ No document URLs received from SavePolicyDetails response!');console.warn('💡 Full SavePolicyDetails response:',JSON.stringify(savePolicyResponse,null,2));}// Update database with Terracotta Policy ID and status\nconsole.log('💾 Updating database with Terracotta Policy ID...');const paymentData={quoteId:quoteId,paymentMethod:formData.paymentMethod||'card',cardNumber:formData.cardNumber||'',expiryDate:formData.expiryDate||'',cvv:formData.cvv||'',billingAddress:formData.billingAddress,amount:calculateTotalPrice(),policyNumber:savePolicyResponse.policyID// Include Terracotta Policy ID\n};console.log('💳 Updating quote in database with policy details...');const paymentResponse=await apiProcessPayment(paymentData);if(paymentResponse.status==='success'){console.log('✅ Database updated successfully with Policy ID:',savePolicyResponse.policyID);}else{console.warn('⚠️ Database update failed, but policy was saved in Terracotta');}setIsProcessing(false);nextPhase();// Move to documents phase\nreturn;}else{console.error('❌ Policy save failed. Message:',savePolicyResponse.Message);throw new Error(savePolicyResponse.Message||'Failed to save policy with Terracotta');}}catch(terracottaError){console.error('❌ Terracotta policy save error:',terracottaError);// Fall through to regular payment processing\n}}// Fallback to regular payment processing if Terracotta fails\nconst paymentData={quoteId:quoteId,paymentMethod:formData.paymentMethod,cardNumber:formData.cardNumber,// Note: In production, this should be tokenized\nexpiryDate:formData.expiryDate,cvv:formData.cvv,billingAddress:formData.billingAddress,amount:calculateTotalPrice(),policyNumber:policyNumber||undefined// Include Terracotta Policy ID if available\n};console.log('💳 Processing payment with data:',_objectSpread(_objectSpread({},paymentData),{},{cardNumber:'****',cvv:'***'}));const paymentResponse=await apiProcessPayment(paymentData);if(paymentResponse.status==='success'){var _paymentResponse$data;if((_paymentResponse$data=paymentResponse.data)!==null&&_paymentResponse$data!==void 0&&_paymentResponse$data.policyNumber){setPolicyNumber(paymentResponse.data.policyNumber);}setIsProcessing(false);nextPhase();// Move to documents phase\n}else{throw new Error(paymentResponse.message||'Payment failed');}}else{throw new Error(quoteResponse.message||'Failed to save quote');}}catch(error){console.error('Payment processing error:',error);setIsProcessing(false);alert('Payment processing failed. Please try again. Error: '+(error instanceof Error?error.message:'Unknown error'));}};const isPhaseValid=phase=>{switch(phase){case 1:return!!(formData.destination&&formData.startDate&&formData.endDate&&formData.tripType&&formData.countryOfResidence);case 2:return!!formData.selectedQuote;case 3:return true;// Additional policies phase is always valid (optional)\ncase 4:return true;// Review phase is always valid\ncase 5:// Validate all travelers have basic info\nconst travelersBasicValid=formData.travelers.every(t=>!!(t.firstName&&t.lastName&&(t.age||t.dateOfBirth)));// Validate first traveler (policy holder) has contact details\nconst policyHolderContactValid=!!(formData.travelers.length>0&&formData.travelers[0].email&&formData.travelers[0].phone);const paymentValid=!!(formData.cardNumber&&formData.expiryDate&&formData.cvv&&formData.billingAddress.street&&formData.billingAddress.city&&formData.billingAddress.postalCode&&formData.billingAddress.country);return travelersBasicValid&&policyHolderContactValid&&paymentValid;case 6:return true;// Documents phase is always valid\ndefault:return false;}};const renderPhase1=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Trip Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Trip Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"tripType\",children:[\"Trip Type\",/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.8em',color:'#666',marginLeft:'5px'},children:isLoadingPolicyTypeDestinations?'(Loading...)':\"(\".concat(availablePolicyTypes.length,\" types available)\")})]}),/*#__PURE__*/_jsxs(\"select\",{id:\"tripType\",value:formData.tripType,onChange:e=>handleInputChange('tripType',e.target.value),required:true,disabled:isLoadingPolicyTypeDestinations,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:isLoadingPolicyTypeDestinations?'Loading trip types...':'Select trip type'}),availablePolicyTypes.map(policyType=>{// Map policy type names to trip type values\nlet tripTypeValue='single';const name=policyType.TypePolicyName.toLowerCase();if(name.includes('annual')){tripTypeValue='annual';}else if(name.includes('comprehensive')){tripTypeValue='comprehensive';}else if(name.includes('longstay')||name.includes('long stay')){tripTypeValue='longstay';}return/*#__PURE__*/_jsx(\"option\",{value:tripTypeValue,children:policyType.TypePolicyName},policyType.TypePolicyID);}),!isLoadingPolicyTypeDestinations&&availablePolicyTypes.length===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"single\",children:\"Regular Single Trip Insurance\"}),/*#__PURE__*/_jsx(\"option\",{value:\"annual\",children:\"Annual Multi-Trip Travel Insurance\"}),/*#__PURE__*/_jsx(\"option\",{value:\"comprehensive\",children:\"Comprehensive Single Trip Insurance\"}),/*#__PURE__*/_jsx(\"option\",{value:\"longstay\",children:\"Long Stay Travel Insurance\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"countryOfResidence\",children:\"Country of Residence\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"countryOfResidence\",value:formData.countryOfResidence,onChange:e=>handleInputChange('countryOfResidence',e.target.value),required:true,disabled:isLoadingCountriesOfResidence,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:isLoadingCountriesOfResidence?'Loading countries...':'Select your country of residence'}),countriesOfResidence.map(country=>/*#__PURE__*/_jsx(\"option\",{value:country.country_name,children:country.country_name},country.country_id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"destination\",children:[\"Destination Category\",/*#__PURE__*/_jsx(\"span\",{className:\"help-icon\",onClick:()=>setShowHelpPopup(true),title:\"Click to see all countries by category\",children:\"(?)\"})]}),/*#__PURE__*/_jsxs(\"select\",{id:\"destination\",value:formData.destination,onChange:e=>handleInputChange('destination',e.target.value),required:true,disabled:isLoadingCategories,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:isLoadingCategories?'Loading categories...':'Select destination category'}),destinationCategories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"startDate\",children:[\"Departure Date \",/*#__PURE__*/_jsx(\"span\",{className:\"date-format-hint\",children:\"(DD/MM/YYYY)\"})]}),/*#__PURE__*/_jsx(CustomDatePicker,{id:\"startDate\",value:formData.startDate,onChange:value=>handleInputChange('startDate',value),placeholder:\"DD/MM/YYYY\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"endDate\",children:[\"Return Date \",/*#__PURE__*/_jsx(\"span\",{className:\"date-format-hint\",children:\"(DD/MM/YYYY)\"})]}),/*#__PURE__*/_jsx(CustomDatePicker,{id:\"endDate\",value:formData.endDate,onChange:value=>handleInputChange('endDate',value),placeholder:\"DD/MM/YYYY\",required:true,minDate:formData.startDate?(()=>{// Set minimum date to start date + 1 day\nconst startDate=new Date(formData.startDate);startDate.setDate(startDate.getDate()+1);return startDate.toISOString().split('T')[0];})():undefined})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"numberOfTravelers\",children:\"Number of Travelers\"}),/*#__PURE__*/_jsx(\"select\",{id:\"numberOfTravelers\",value:formData.numberOfTravelers,onChange:e=>handleNumberOfTravelersChange(parseInt(e.target.value)),children:[1,2,3,4,5,6,7,8].map(num=>/*#__PURE__*/_jsxs(\"option\",{value:num,children:[num,\" Traveler\",num>1?'s':'']},num))})]})]})]});const renderPhase2=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'40px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'2.2em',color:'#333',margin:'0 0 10px 0',fontWeight:'bold',fontFamily:'sans-serif'},children:\"Choose Your Insurance Plan\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'1.1em',color:'#666',margin:'0',fontWeight:'400'},children:\"Select the coverage that best fits your travel needs.\"})]}),isLoadingQuotes&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading insurance quotes from Terracotta...\"})}),quoteError&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u26A0\\uFE0F \",quoteError]}),/*#__PURE__*/_jsx(\"p\",{children:\"Using fallback quotes for demonstration.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"quote-options\",style:{display:'flex',flexDirection:'row',justifyContent:'center',gap:'20px',marginTop:'20px',overflowX:'auto',padding:'20px 0',maxWidth:'100%'},children:quoteOptions.length>0?quoteOptions.map(option=>{var _formData$selectedQuo22,_formData$selectedQuo23,_formData$selectedQuo24,_formData$selectedQuo27,_formData$selectedQuo30;return/*#__PURE__*/_jsxs(\"div\",{className:\"quote-option \".concat(((_formData$selectedQuo22=formData.selectedQuote)===null||_formData$selectedQuo22===void 0?void 0:_formData$selectedQuo22.id)===option.id?'selected':''),onClick:()=>selectQuote(option),style:{background:'white',border:((_formData$selectedQuo23=formData.selectedQuote)===null||_formData$selectedQuo23===void 0?void 0:_formData$selectedQuo23.id)===option.id?'2px solid #1976d2':'1px solid #e0e0e0',borderRadius:'8px',padding:'24px',cursor:'pointer',transition:'all 0.3s ease',boxShadow:((_formData$selectedQuo24=formData.selectedQuote)===null||_formData$selectedQuo24===void 0?void 0:_formData$selectedQuo24.id)===option.id?'0 4px 12px rgba(25, 118, 210, 0.15)':'0 2px 8px rgba(0,0,0,0.1)',position:'relative',minWidth:'320px',maxWidth:'320px',flexShrink:0},onMouseEnter:e=>{var _formData$selectedQuo25;if(((_formData$selectedQuo25=formData.selectedQuote)===null||_formData$selectedQuo25===void 0?void 0:_formData$selectedQuo25.id)!==option.id){e.currentTarget.style.boxShadow='0 4px 16px rgba(0,0,0,0.15)';e.currentTarget.style.borderColor='#1976d2';}},onMouseLeave:e=>{var _formData$selectedQuo26;if(((_formData$selectedQuo26=formData.selectedQuote)===null||_formData$selectedQuo26===void 0?void 0:_formData$selectedQuo26.id)!==option.id){e.currentTarget.style.boxShadow='0 2px 8px rgba(0,0,0,0.1)';e.currentTarget.style.borderColor='#e0e0e0';}},children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 8px 0',fontSize:'1.3em',color:'#1976d2',fontWeight:'bold'},children:option.policytypeName||option.policyTypeName||option.name}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0 0 12px 0',fontSize:'0.9em',color:'#666'},children:option.packageName||option.typePackageName}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'16px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'2em',fontWeight:'bold',color:'#333',lineHeight:'1'},children:[option.currency||'€',option.price]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9em',color:'#666',marginTop:'4px'},children:\"per trip\"})]})]}),option.isBestBuy===1&&option.isBestBuyText&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px',background:'#e8f5e8',border:'1px solid #4caf50',borderRadius:'6px',padding:'8px',fontSize:'0.85em',color:'#2e7d32',textAlign:'center',fontWeight:'bold'},children:[\"\\u2728 \",option.isBestBuyText,\" \\u2728\"]}),option.SummaryCovers&&option.SummaryCovers.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{fontSize:'1em',fontWeight:'bold',marginBottom:'12px',color:'#333'},children:\"Coverage Details\"}),option.SummaryCovers.map((cover,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px',padding:'8px',background:'#f8f9fa',borderRadius:'4px',fontSize:'0.85em'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold',color:'#1976d2',marginBottom:'4px'},children:cover.name}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9em'},children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Limit:\"}),\" \",cover.Limit]})})]},index))]}),/*#__PURE__*/_jsx(\"button\",{style:{width:'100%',padding:'12px',backgroundColor:((_formData$selectedQuo27=formData.selectedQuote)===null||_formData$selectedQuo27===void 0?void 0:_formData$selectedQuo27.id)===option.id?'#ff6b35':'#1976d2',color:'white',border:'none',borderRadius:'4px',fontSize:'0.95em',fontWeight:'bold',cursor:'pointer',transition:'background-color 0.3s ease',textTransform:'uppercase'},onMouseEnter:e=>{var _formData$selectedQuo28;e.currentTarget.style.backgroundColor=((_formData$selectedQuo28=formData.selectedQuote)===null||_formData$selectedQuo28===void 0?void 0:_formData$selectedQuo28.id)===option.id?'#e55a2b':'#1565c0';},onMouseLeave:e=>{var _formData$selectedQuo29;e.currentTarget.style.backgroundColor=((_formData$selectedQuo29=formData.selectedQuote)===null||_formData$selectedQuo29===void 0?void 0:_formData$selectedQuo29.id)===option.id?'#ff6b35':'#1976d2';},children:((_formData$selectedQuo30=formData.selectedQuote)===null||_formData$selectedQuo30===void 0?void 0:_formData$selectedQuo30.id)===option.id?'SELECTED':'SELECT PLAN'})]},option.id);}):/*#__PURE__*/_jsx(\"div\",{style:{gridColumn:'1 / -1',textAlign:'center',padding:'40px',color:'#666'},children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading SOAP quotes...\"})})})]});const renderPhase3=()=>{var _formData$selectedQuo31,_formData$selectedQuo32;return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enhance Your Coverage\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add optional coverage for extra protection during your trip.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"selected-plan-summary\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"current-plan\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Selected Plan\"}),formData.selectedQuote&&/*#__PURE__*/_jsxs(\"div\",{className:\"plan-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"plan-name\",children:formData.selectedQuote.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"plan-price\",children:[\"\\u20AC\",formData.selectedQuote.price]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"additional-policies\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Optional Coverage Add-ons\"}),isLoadingAddons?/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',padding:'40px',color:'#666'},children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading available add-ons...\"})}):availableAdditionalPolicies.length===0?/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',padding:'40px',color:'#666'},children:/*#__PURE__*/_jsx(\"p\",{children:\"No additional coverage options available for this policy type.\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"policies-grid\",children:availableAdditionalPolicies.map(policy=>{const isSelected=formData.additionalPolicies.some(p=>p.id===policy.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"policy-card \".concat(isSelected?'selected':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"policy-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"policy-icon\",children:policy.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"policy-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:policy.name}),policy.price>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"policy-price\",children:[\"\\u20AC\",policy.price.toFixed(2)]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"policy-btn \".concat(isSelected?'remove':'add'),onClick:()=>isSelected?removeAdditionalPolicy(policy.id):addAdditionalPolicy(policy),disabled:processingAddonId!==null,children:processingAddonId===policy.id?'PROCESSING...':isSelected?'REMOVE':'ADD'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"policy-description\",children:/*#__PURE__*/_jsx(\"p\",{children:policy.description})})]},policy.id);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"total-summary-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"base-plan\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Base Plan: \",(_formData$selectedQuo31=formData.selectedQuote)===null||_formData$selectedQuo31===void 0?void 0:_formData$selectedQuo31.name]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u20AC\",(_formData$selectedQuo32=formData.selectedQuote)===null||_formData$selectedQuo32===void 0?void 0:_formData$selectedQuo32.price]})]}),formData.additionalPolicies.map(policy=>/*#__PURE__*/_jsxs(\"div\",{className:\"additional-item\",children:[/*#__PURE__*/_jsx(\"span\",{children:policy.name}),/*#__PURE__*/_jsx(\"span\",{children:policy.price>0?\"\\u20AC\".concat(policy.price.toFixed(2)):'Included in total'})]},policy.id)),/*#__PURE__*/_jsxs(\"div\",{className:\"total-line\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Total Premium:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-amount\",children:[\"\\u20AC\",calculateTotalPrice().toFixed(2)]})]})]})})]});};const renderPhase4=()=>{var _formData$selectedQuo33;const calculateTripDuration=()=>{if(formData.startDate&&formData.endDate){const start=new Date(formData.startDate);const end=new Date(formData.endDate);const days=Math.ceil((end.getTime()-start.getTime())/(1000*3600*24));return days;}return 0;};return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Review Your Details\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please carefully review all information below. You can go back to make changes if needed.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"professional-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDF0D Trip Overview\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Insurance Type:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formData.tripType==='single'?'Single Trip Insurance':formData.tripType==='annual'?'Annual Multi-Trip Insurance':formData.tripType==='longstay'?'Long Stay Travel Insurance':'Comprehensive Single Trip Insurance'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Country of Residence:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formData.countryOfResidence})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Destination:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formData.destination})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Departure Date:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formatDateToEuropean(formData.startDate)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Return Date:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:formatDateToEuropean(formData.endDate)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Trip Duration:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[calculateTripDuration(),\" days\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Number of Travelers:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[formData.numberOfTravelers,\" \",formData.numberOfTravelers===1?'person':'people']})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDEE1\\uFE0F Selected Insurance Plan\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:formData.selectedQuote&&/*#__PURE__*/_jsxs(\"div\",{className:\"plan-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"plan-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:formData.selectedQuote.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"plan-price\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"price-label\",children:\"Total Premium:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"price-value\",children:[\"\\u20AC\",calculateTotalPrice().toFixed(2)]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-overview\",children:[/*#__PURE__*/_jsxs(\"h5\",{style:{background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',WebkitBackgroundClip:'text',WebkitTextFillColor:'transparent',fontSize:'1.5em',fontWeight:'700',marginBottom:'20px',display:'flex',alignItems:'center',gap:'10px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'1.2em'},children:\"\\uD83D\\uDEE1\\uFE0F\"}),\"Coverage Limits\"]}),formData.selectedQuote.SummaryCovers&&formData.selectedQuote.SummaryCovers.length>0?/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(280px, 1fr))',gap:'15px',marginTop:'15px'},children:formData.selectedQuote.SummaryCovers.map((cover,index)=>{// Determine icon and color based on cover name\nconst getIconAndColor=name=>{const lowerName=name.toLowerCase();if(lowerName.includes('medical')||lowerName.includes('emergency'))return{icon:'🏥',color:'#e74c3c',bgColor:'#fdeaea'};if(lowerName.includes('baggage')||lowerName.includes('luggage'))return{icon:'🧳',color:'#3498db',bgColor:'#eaf2f8'};if(lowerName.includes('cancellation'))return{icon:'❌',color:'#e67e22',bgColor:'#fef5e7'};if(lowerName.includes('delay'))return{icon:'⏰',color:'#9b59b6',bgColor:'#f4ecf7'};if(lowerName.includes('personal')&&lowerName.includes('liability'))return{icon:'⚖️',color:'#16a085',bgColor:'#e8f8f5'};if(lowerName.includes('accident'))return{icon:'🚑',color:'#c0392b',bgColor:'#fadbd8'};if(lowerName.includes('legal'))return{icon:'⚖️',color:'#2c3e50',bgColor:'#ecf0f1'};if(lowerName.includes('money')||lowerName.includes('cash'))return{icon:'💰',color:'#f39c12',bgColor:'#fef9e7'};if(lowerName.includes('passport')||lowerName.includes('document'))return{icon:'📄',color:'#7f8c8d',bgColor:'#f2f3f4'};if(lowerName.includes('rental')||lowerName.includes('vehicle'))return{icon:'🚗',color:'#34495e',bgColor:'#ebedef'};if(lowerName.includes('winter')||lowerName.includes('sport'))return{icon:'⛷️',color:'#3498db',bgColor:'#ebf5fb'};if(lowerName.includes('personal')&&lowerName.includes('effect'))return{icon:'👜',color:'#8e44ad',bgColor:'#f5eef8'};return{icon:'📋',color:'#27ae60',bgColor:'#eafaf1'};};const{icon,color,bgColor}=getIconAndColor(cover.name);return/*#__PURE__*/_jsxs(\"div\",{style:{background:\"linear-gradient(135deg, \".concat(bgColor,\" 0%, #ffffff 100%)\"),border:\"2px solid \".concat(bgColor),borderRadius:'12px',padding:'18px',transition:'all 0.3s ease',cursor:'pointer',position:'relative',overflow:'hidden'},onMouseEnter:e=>{e.currentTarget.style.transform='translateY(-5px)';e.currentTarget.style.boxShadow=\"0 8px 25px rgba(0,0,0,0.15)\";e.currentTarget.style.borderColor=color;},onMouseLeave:e=>{e.currentTarget.style.transform='translateY(0)';e.currentTarget.style.boxShadow='none';e.currentTarget.style.borderColor=bgColor;},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'-20px',right:'-20px',width:'80px',height:'80px',background:color,opacity:'0.1',borderRadius:'50%'}}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'flex-start',gap:'12px',position:'relative',zIndex:1},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2.5em',background:color,width:'60px',height:'60px',borderRadius:'12px',display:'flex',alignItems:'center',justifyContent:'center',flexShrink:0,boxShadow:\"0 4px 15px \".concat(color,\"40\")},children:icon}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,minWidth:0},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9em',color:'#555',fontWeight:'500',marginBottom:'8px',lineHeight:'1.3'},children:cover.name}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'1.3em',fontWeight:'700',color:color,marginBottom:'4px'},children:cover.Limit}),cover.Excess&&cover.Excess!=='€0'&&cover.Excess!=='Nil'&&/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.85em',color:'#888',background:'#f8f9fa',padding:'4px 8px',borderRadius:'6px',display:'inline-block',marginTop:'4px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600'},children:\"Excess:\"}),\" \",cover.Excess]})]})]})]},index);})}):/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-icon\",children:\"\\uD83C\\uDFE5\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-type\",children:\"Medical Emergency\"}),/*#__PURE__*/_jsx(\"span\",{className:\"coverage-amount\",children:formData.selectedQuote.coverage.medical})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-icon\",children:\"\\uD83E\\uDDF3\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-type\",children:\"Baggage Protection\"}),/*#__PURE__*/_jsx(\"span\",{className:\"coverage-amount\",children:formData.selectedQuote.coverage.baggage})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-icon\",children:\"\\u274C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"coverage-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"coverage-type\",children:\"Trip Cancellation\"}),/*#__PURE__*/_jsx(\"span\",{className:\"coverage-amount\",children:formData.selectedQuote.coverage.cancellation})]})]})]})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-card total-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"total-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Base Premium:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-value\",children:[\"\\u20AC\",(_formData$selectedQuo33=formData.selectedQuote)===null||_formData$selectedQuo33===void 0?void 0:_formData$selectedQuo33.price]})]}),formData.additionalPolicies.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Additional Policies:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-value\",children:[\"\\u20AC\",((_formData$selectedQuo34,_formData$selectedQuo35)=>{// Calculate addon amount as Total Amount - Base Premium\nconst basePrice=typeof((_formData$selectedQuo34=formData.selectedQuote)===null||_formData$selectedQuo34===void 0?void 0:_formData$selectedQuo34.price)==='number'?formData.selectedQuote.price:parseFloat(((_formData$selectedQuo35=formData.selectedQuote)===null||_formData$selectedQuo35===void 0?void 0:_formData$selectedQuo35.price)||'0');const totalAmount=calculateTotalPrice();const addonAmount=totalAmount-basePrice;return addonAmount.toFixed(2);})()]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Taxes & Fees:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"total-value\",children:\"Included\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row final-total\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"total-label\",children:\"Total Amount:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"total-value\",children:[\"\\u20AC\",calculateTotalPrice().toFixed(2)]})]})]})})})]})]});};const renderPhase5=()=>{var _formData$selectedQuo36;return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Confirmation\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please confirm that all details are correct before proceeding to payment.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Trip:\"}),\" \",formData.destination,\" (\",formatDateToEuropean(formData.startDate),\" to \",formatDateToEuropean(formData.endDate),\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Country of Residence:\"}),\" \",formData.countryOfResidence]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Travelers:\"}),\" \",formData.numberOfTravelers,\" person\",formData.numberOfTravelers>1?'s':'']}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Plan:\"}),\" \",(_formData$selectedQuo36=formData.selectedQuote)===null||_formData$selectedQuo36===void 0?void 0:_formData$selectedQuo36.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-item total\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Amount:\"}),\" \\u20AC\",calculateTotalPrice().toFixed(2)]})]})]});};// Helper function to decode HTML entities and format question text\nconst decodeQuestionText=text=>{if(!text)return'';// Create a temporary element to decode HTML entities\nconst textarea=document.createElement('textarea');textarea.innerHTML=text;let decoded=textarea.value;// Replace <BR> tags (after decoding &lt;BR&gt;) with actual line breaks\ndecoded=decoded.replace(/<BR>/gi,'\\n');decoded=decoded.replace(/&lt;BR&gt;/gi,'\\n');return decoded;};const renderPhase6=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Screening Questions\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please answer the following questions to complete your insurance application.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"screening-questions\",children:screeningQuestions.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-questions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No screening questions required for this policy.\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',color:'#666',marginTop:'10px'},children:\"The API returned an empty response or no questions are configured for this quote.\"})]}):screeningQuestions.map((question,index)=>{const decodedQuestion=decodeQuestionText(question.question);return/*#__PURE__*/_jsxs(\"div\",{className:\"screening-question\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Question \",question.questionNumber]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",style:{whiteSpace:'pre-wrap',lineHeight:'1.6',padding:'15px',background:'#f9f9f9',borderRadius:'8px',border:'1px solid #e0e0e0'},children:decodedQuestion}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-options\",style:{marginTop:'20px'},children:[/*#__PURE__*/_jsxs(\"label\",{className:\"radio-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"question-\".concat(question.questionNumber),value:\"yes\",checked:screeningAnswers[question.questionNumber]==='yes',onChange:e=>setScreeningAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[question.questionNumber]:'yes'}))}),/*#__PURE__*/_jsx(\"span\",{children:\"Yes\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"radio-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"question-\".concat(question.questionNumber),value:\"no\",checked:screeningAnswers[question.questionNumber]==='no',onChange:e=>setScreeningAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[question.questionNumber]:'no'}))}),/*#__PURE__*/_jsx(\"span\",{children:\"No\"})]})]}),screeningAnswers[question.questionNumber]&&/*#__PURE__*/_jsxs(\"div\",{className:\"answer-message \".concat(screeningAnswers[question.questionNumber]),children:[/*#__PURE__*/_jsx(\"p\",{style:{whiteSpace:'pre-wrap'},children:screeningAnswers[question.questionNumber]==='yes'?decodeQuestionText(question.yesMessage):decodeQuestionText(question.noMessage)}),question.yesAction&&screeningAnswers[question.questionNumber]==='yes'&&question.yesActionText&&/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'13px',marginTop:'5px',fontStyle:'italic'},children:[\"Action: \",question.yesActionText]}),question.noAction&&screeningAnswers[question.questionNumber]==='no'&&question.noActionText&&/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'13px',marginTop:'5px',fontStyle:'italic'},children:[\"Action: \",question.noActionText]})]})]},question.questionNumber);})})]});const renderPhase7=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment Details\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Enter your payment information to complete your purchase.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-traveler-billing-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Traveler Information\"}),formData.travelers.map((traveler,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"traveler-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Traveler \",index+1,index===0?'/Policy holder':'']}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title-\".concat(index),children:\"Title\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"title-\".concat(index),value:traveler.title||'Mr',onChange:e=>handleTravelerChange(index,'title',e.target.value),title:\"Select the traveler's title\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Mr\",children:\"Mr\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mrs\",children:\"Mrs\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Miss\",children:\"Miss\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Ms\",children:\"Ms\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Dr\",children:\"Dr\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Prof\",children:\"Prof\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"firstName-\".concat(index),children:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"firstName-\".concat(index),value:traveler.firstName,onChange:e=>handleTravelerChange(index,'firstName',e.target.value),placeholder:\"Enter first name\",title:\"Enter the traveler's first name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lastName-\".concat(index),children:\"Last Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"lastName-\".concat(index),value:traveler.lastName,onChange:e=>handleTravelerChange(index,'lastName',e.target.value),placeholder:\"Enter last name\",title:\"Enter the traveler's last name\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dateOfBirth-\".concat(index),children:\"Date of Birth\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"dateOfBirth-\".concat(index),value:traveler.dateOfBirth||'',onChange:e=>{const dateOfBirth=e.target.value;// Auto-calculate age from date of birth\nif(dateOfBirth){const age=calculateAgeFromDateOfBirth(dateOfBirth);handleTravelerChange(index,'dateOfBirth',dateOfBirth);handleTravelerChange(index,'age',age.toString());}else{handleTravelerChange(index,'dateOfBirth',dateOfBirth);}},title:\"Enter the traveler's date of birth\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"vaxId-\".concat(index),children:[\"VAT ID\",index===0&&formData.countryOfResidence==='Greece'&&/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),index===0&&formData.countryOfResidence==='Greece'&&/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px',color:'#666'},children:\" (Required for Greece)\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"vaxId-\".concat(index),value:traveler.vaxId,onChange:e=>handleTravelerChange(index,'vaxId',e.target.value),placeholder:index===0&&formData.countryOfResidence==='Greece'?\"Enter VAT ID (Required)\":\"Enter VAT ID (Optional)\",title:index===0&&formData.countryOfResidence==='Greece'?\"VAT ID is required for Greece\":\"Enter the traveler's VAT ID (optional)\",required:index===0&&formData.countryOfResidence==='Greece'})]})]}),index===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email-\".concat(index),children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email-\".concat(index),value:traveler.email,onChange:e=>handleTravelerChange(index,'email',e.target.value),placeholder:\"Enter email address\",title:\"Enter the traveler's email address\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone-\".concat(index),children:\"Phone\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone-\".concat(index),value:traveler.phone,onChange:e=>handleTravelerChange(index,'phone',e.target.value),placeholder:\"+30 123 456 7890\",title:\"Enter the traveler's phone number\",required:true})]})]}),index===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{style:{margin:'20px 0',border:'none',borderTop:'1px solid #e0e0e0'}}),/*#__PURE__*/_jsx(\"h4\",{children:\"Billing Address\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",value:formData.billingAddress.street,onChange:e=>handleBillingAddressChange('street',e.target.value),placeholder:\"Enter street address\",title:\"Enter your billing street address\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postalCode\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postalCode\",value:formData.billingAddress.postalCode,onChange:e=>handleBillingAddressChange('postalCode',e.target.value),placeholder:\"Enter postal code\",title:\"Enter your billing postal code\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",value:formData.billingAddress.city,onChange:e=>handleBillingAddressChange('city',e.target.value),placeholder:\"Enter city\",title:\"Enter your billing city\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"country\",value:formData.billingAddress.country,onChange:e=>handleBillingAddressChange('country',e.target.value),placeholder:\"Enter country\",title:\"Enter your billing country\",required:true})]})]})]})]},index))]})}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-method-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"payment-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"payment-methods\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-method-info\",children:/*#__PURE__*/_jsx(\"p\",{children:\"We accept all major credit and debit cards for secure payment processing.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-details\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Card Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cardNumber\",children:\"Card Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"cardNumber\",value:formData.cardNumber,onChange:e=>handleInputChange('cardNumber',e.target.value),placeholder:\"1234 5678 9012 3456\",title:\"Enter your 16-digit card number\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"expiryDate\",children:\"Expiry Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"expiryDate\",value:formData.expiryDate,onChange:e=>handleInputChange('expiryDate',e.target.value),placeholder:\"mm / yyyy\",title:\"Enter card expiry date in mm / yyyy format\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cvv\",children:\"CVV\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"cvv\",value:formData.cvv,onChange:e=>handleInputChange('cvv',e.target.value),placeholder:\"123\",title:\"Enter the 3-digit CVV code from the back of your card\",required:true})]})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-summary\",children:/*#__PURE__*/_jsx(\"div\",{className:\"summary-item\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"Total Amount: \\u20AC\",calculateTotalPrice().toFixed(2)]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"terms-section\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",required:true,checked:termsAccepted,onChange:e=>handleTermsAcceptance(e.target.checked)}),/*#__PURE__*/_jsxs(\"span\",{children:[\"I have read and accept the \",/*#__PURE__*/_jsx(\"button\",{className:\"link-button\",onClick:e=>{e.preventDefault();setShowPrivacyPolicy(true);},style:{background:'none',border:'none',color:'#0077b6',textDecoration:'underline',cursor:'pointer',padding:0},children:\"Privacy Policy\"}),\", \",/*#__PURE__*/_jsx(\"button\",{className:\"link-button\",onClick:e=>{e.preventDefault();setShowTermsAndConditions(true);},style:{background:'none',border:'none',color:'#0077b6',textDecoration:'underline',cursor:'pointer',padding:0},children:\"Terms and Conditions\"}),\" and \",/*#__PURE__*/_jsx(\"button\",{className:\"link-button\",onClick:e=>{e.preventDefault();fetchGeneralConditions();},style:{background:'none',border:'none',color:'#0077b6',textDecoration:'underline',cursor:'pointer',padding:0},children:\"General conditions\"}),\".\"]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",required:true,checked:marketingEmailsAccepted,onChange:e=>setMarketingEmailsAccepted(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{children:\"I would like to receive marketing emails about travel insurance offers\"})]})]})]});const renderPhase8=()=>{var _formData$travelers$0,_formData$selectedQuo37,_formData$selectedQuo38;return/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-phase\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDF89 Congratulations!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your travel insurance has been successfully purchased.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"policy-number\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Policy Number:\"}),\" \",policyNumber?policyNumber:'Processing...']}),/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-email\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"A confirmation email has been sent to \",(_formData$travelers$0=formData.travelers[0])===null||_formData$travelers$0===void 0?void 0:_formData$travelers$0.email]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"documents-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Documents\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',color:'#666',marginBottom:'15px'},children:\"Click on any document to open it in a new tab\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"document-links\",children:[policyDocuments.summaryOfCover?/*#__PURE__*/_jsx(\"a\",{href:policyDocuments.summaryOfCover,className:\"document-link\",target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"Open Summary of Cover in new tab\",title:\"View Summary of Cover from Terracotta\",children:\"\\uD83D\\uDCC4 Summary of Cover\"}):(_formData$selectedQuo37=formData.selectedQuote)!==null&&_formData$selectedQuo37!==void 0&&_formData$selectedQuo37.SI?/*#__PURE__*/_jsx(\"a\",{href:formData.selectedQuote.SI,className:\"document-link\",target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"Open Summary of Cover in new tab\",title:\"View Summary of Cover (from quote)\",children:\"\\uD83D\\uDCC4 Summary of Cover (from quote)\"}):/*#__PURE__*/_jsx(\"div\",{className:\"document-link disabled\",style:{opacity:0.5,cursor:'not-allowed'},children:\"\\uD83D\\uDCC4 Summary of Cover (Not Available)\"}),policyDocuments.policyWording?/*#__PURE__*/_jsx(\"a\",{href:policyDocuments.policyWording,className:\"document-link\",target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"Open Policy Wording in new tab\",title:\"View Policy Wording from Terracotta\",children:\"\\uD83D\\uDCCB Policy Wording\"}):(_formData$selectedQuo38=formData.selectedQuote)!==null&&_formData$selectedQuo38!==void 0&&_formData$selectedQuo38.PW?/*#__PURE__*/_jsx(\"a\",{href:formData.selectedQuote.PW,className:\"document-link\",target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"Open Policy Wording in new tab\",title:\"View Policy Wording (from quote)\",children:\"\\uD83D\\uDCCB Policy Wording (from quote)\"}):/*#__PURE__*/_jsx(\"div\",{className:\"document-link disabled\",style:{opacity:0.5,cursor:'not-allowed'},children:\"\\uD83D\\uDCCB Policy Wording (Not Available)\"}),policyDocuments.certificate?/*#__PURE__*/_jsx(\"a\",{href:policyDocuments.certificate,className:\"document-link\",target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"Open Certificate in new tab\",title:\"View Certificate from Terracotta\",children:\"\\uD83C\\uDD94 Certificate\"}):/*#__PURE__*/_jsx(\"div\",{className:\"document-link disabled\",style:{opacity:0.5,cursor:'not-allowed'},children:\"\\uD83C\\uDD94 Certificate (Pending - may be emailed separately)\"}),policyDocuments.keyFacts&&/*#__PURE__*/_jsx(\"a\",{href:policyDocuments.keyFacts,className:\"document-link\",target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"Open Key Facts in new tab\",title:\"View Key Facts from Terracotta\",children:\"\\uD83D\\uDCCB Key Facts\"}),policyDocuments.ipid&&/*#__PURE__*/_jsx(\"a\",{href:policyDocuments.ipid,className:\"document-link\",target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"Open IPID in new tab\",title:\"View Insurance Product Information Document\",children:\"\\uD83D\\uDCC4 IPID\"}),/*#__PURE__*/_jsx(\"button\",{onClick:downloadPolicyPDF,className:\"document-link download-btn\",\"aria-label\":\"Download your policy summary as a PDF document\",title:\"Download a PDF copy of your travel insurance policy summary\",type:\"button\",children:\"\\uD83D\\uDCC4 Download Your Policy Summary (PDF)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"next-steps\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"What's Next?\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Save your policy documents in a safe place\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Keep the emergency contact numbers with you while traveling\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Download our mobile app for easy access to your policy\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Contact us anytime at +30 6974907500 for assistance\"})]})]})]});};const renderPhaseContent=()=>{switch(currentPhase){case 1:return renderPhase1();// Trip Details\ncase 2:return renderPhase2();// Quotes\ncase 3:return renderPhase3();// Add-ons\ncase 4:return renderPhase4();// Review\ncase 5:return renderPhase7();// Payment\ncase 6:return renderPhase8();// Documents\ndefault:return renderPhase1();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quote-page\",children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n          @keyframes spin {\\n            0% { transform: rotate(0deg); }\\n            100% { transform: rotate(360deg); }\\n          }\\n        \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Travel Insurance Quote Wizard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wizard-progress\",children:[1,2,3,4,5,6].map(phase=>/*#__PURE__*/_jsxs(\"div\",{className:\"progress-step \".concat(currentPhase>=phase?'active':'',\" \").concat(currentPhase===phase?'current':''),children:[/*#__PURE__*/_jsx(\"div\",{className:\"step-number\",children:phase}),/*#__PURE__*/_jsxs(\"div\",{className:\"step-label\",children:[phase===1&&'Details',phase===2&&'Quotes',phase===3&&'Add-ons',phase===4&&'Review',phase===5&&'Payment',phase===6&&'Documents']})]},phase))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"wizard-content\",children:renderPhaseContent()}),/*#__PURE__*/_jsxs(\"div\",{className:\"wizard-navigation\",children:[currentPhase>1&&currentPhase<6&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:prevPhase,\"aria-label\":\"Go to previous step\",title:\"Go back to the previous step\",type:\"button\",children:\"Previous\"}),currentPhase<5&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:nextPhase,disabled:!isPhaseValid(currentPhase),\"aria-label\":currentPhase===4?'Proceed to payment step':'Go to next step',title:currentPhase===4?'Continue to payment details':'Continue to next step',type:\"button\",children:currentPhase===4?'Proceed to Payment':'Next'}),currentPhase===5&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:processPayment,disabled:!isPhaseValid(currentPhase)||isProcessing,\"aria-label\":isProcessing?'Processing payment, please wait':\"Pay \\u20AC\".concat(calculateTotalPrice().toFixed(2),\" for your travel insurance\"),title:isProcessing?'Payment is being processed, please wait':\"Complete payment of \\u20AC\".concat(calculateTotalPrice().toFixed(2)),type:\"button\",style:{opacity:!isPhaseValid(currentPhase)||isProcessing?0.5:1,cursor:!isPhaseValid(currentPhase)||isProcessing?'not-allowed':'pointer'},children:isProcessing?'Processing Payment...':\"Pay \\u20AC\".concat(calculateTotalPrice().toFixed(2))})}),currentPhase===6&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>window.location.href='/',\"aria-label\":\"Return to homepage\",title:\"Go back to the main homepage\",type:\"button\",children:\"Return to Homepage\"})]})]}),showHelpPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-overlay\",onClick:()=>setShowHelpPopup(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Destination Categories & Countries\"}),/*#__PURE__*/_jsx(\"button\",{className:\"help-popup-close\",onClick:()=>setShowHelpPopup(false),\"aria-label\":\"Close help popup\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-content\",children:isLoadingCountries?/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:\"Loading countries...\"}):/*#__PURE__*/_jsx(\"div\",{className:\"categories-container\",children:Object.entries(countriesByCategory).map(_ref4=>{let[category,countries]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"category-section\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"category-title\",children:category}),/*#__PURE__*/_jsx(\"div\",{className:\"countries-grid\",children:countries.map(country=>/*#__PURE__*/_jsx(\"span\",{className:\"country-item\",children:country},country))}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-count\",children:[countries.length,\" countries\"]})]},category);})})})]})}),showPrivacyPolicy&&/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-overlay\",onClick:()=>setShowPrivacyPolicy(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Privacy Policy\"}),/*#__PURE__*/_jsx(\"button\",{className:\"help-popup-close\",onClick:()=>setShowPrivacyPolicy(false),\"aria-label\":\"Close privacy policy\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-content\",children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',lineHeight:'1.6'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sample Privacy Policy\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This is a sample Privacy Policy. The actual content will be added later.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"1. Information We Collect\"}),/*#__PURE__*/_jsx(\"p\",{children:\"We collect information that you provide directly to us, including personal information such as your name, email address, date of birth, and travel details.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"2. How We Use Your Information\"}),/*#__PURE__*/_jsx(\"p\",{children:\"We use the information we collect to provide, maintain, and improve our services, including processing your insurance quotes and policies.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"3. Data Security\"}),/*#__PURE__*/_jsx(\"p\",{children:\"We implement appropriate technical and organizational measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"4. Your Rights\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You have the right to access, correct, or delete your personal information. You may also object to or restrict certain processing of your data.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"5. Contact Us\"}),/*#__PURE__*/_jsx(\"p\",{children:\"If you have any questions about this Privacy Policy, please contact us at privacy@example.com\"}),/*#__PURE__*/_jsxs(\"p\",{style:{marginTop:'20px',fontSize:'12px',color:'#666'},children:[\"Last updated: \",new Date().toLocaleDateString()]})]})})]})}),showTermsAndConditions&&/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-overlay\",onClick:()=>setShowTermsAndConditions(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Terms and Conditions\"}),/*#__PURE__*/_jsx(\"button\",{className:\"help-popup-close\",onClick:()=>setShowTermsAndConditions(false),\"aria-label\":\"Close terms and conditions\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-content\",children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',lineHeight:'1.6'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sample Terms and Conditions\"}),/*#__PURE__*/_jsx(\"p\",{children:\"This is a sample Terms and Conditions document. The actual content will be added later.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"1. Acceptance of Terms\"}),/*#__PURE__*/_jsx(\"p\",{children:\"By purchasing travel insurance from us, you agree to be bound by these Terms and Conditions. Please read them carefully before proceeding with your purchase.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"2. Insurance Coverage\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The insurance coverage is subject to the terms, conditions, and exclusions set forth in the policy documents. Coverage begins on the start date specified in your policy.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"3. Premium Payment\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The insurance premium must be paid in full before coverage begins. All payments are processed securely through our payment gateway.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"4. Claims Process\"}),/*#__PURE__*/_jsx(\"p\",{children:\"In the event of a claim, you must notify us as soon as reasonably possible and provide all required documentation to support your claim.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"5. Cancellation Policy\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You may cancel your policy within the cooling-off period specified in your policy documents for a full refund, provided no claims have been made.\"}),/*#__PURE__*/_jsx(\"h5\",{style:{marginTop:'20px'},children:\"6. Governing Law\"}),/*#__PURE__*/_jsx(\"p\",{children:\"These Terms and Conditions are governed by and construed in accordance with applicable insurance regulations.\"}),/*#__PURE__*/_jsxs(\"p\",{style:{marginTop:'20px',fontSize:'12px',color:'#666'},children:[\"Last updated: \",new Date().toLocaleDateString()]})]})})]})}),showGeneralConditions&&/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-overlay\",onClick:()=>setShowGeneralConditions(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"help-popup-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"General Conditions\"}),/*#__PURE__*/_jsx(\"button\",{className:\"help-popup-close\",onClick:()=>setShowGeneralConditions(false),\"aria-label\":\"Close general conditions\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"help-popup-content\",children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',lineHeight:'1.6'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Screening Questions & General Conditions\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:'20px',color:'#666'},children:\"These are the general conditions and screening questions for your selected policy.\"}),generalConditionsData.length===0?/*#__PURE__*/_jsx(\"div\",{style:{padding:'20px',textAlign:'center',color:'#666'},children:/*#__PURE__*/_jsx(\"p\",{children:\"No general conditions available for this policy.\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"screening-questions\",children:generalConditionsData.map((question,index)=>{const decodedQuestion=decodeQuestionText(question.question);const decodedNoMessage=question.noMessage?decodeQuestionText(question.noMessage):'';// Filter out specific unwanted text from the No message\nconst filteredNoMessage=decodedNoMessage.replace(/Yes\\/No \\(If No cannot proceed with purchase\\)\\.\\s*If No:\\s*You must confirm that you have read and accepted the following to purchase this insurance by selecting Yes\\.\\s*If you are unable to agree with any of the following statements, then you are unable to continue with the purchase of this insurance\\.\\s*/gi,'').trim();return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'25px',padding:'15px',background:'#f9f9f9',borderRadius:'8px',border:'1px solid #e0e0e0'},children:[/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:'pre-wrap',lineHeight:'1.6',marginBottom:'10px'},children:decodedQuestion}),question.yesMessage&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#d9534f'},children:\"If Yes:\"}),/*#__PURE__*/_jsx(\"p\",{style:{whiteSpace:'pre-wrap',marginTop:'5px',color:'#555'},children:decodeQuestionText(question.yesMessage)})]}),filteredNoMessage&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#5cb85c'},children:\"If No:\"}),/*#__PURE__*/_jsx(\"p\",{style:{whiteSpace:'pre-wrap',marginTop:'5px',color:'#555'},children:filteredNoMessage})]})]},question.questionNumber);})})]})})]})})]});};export default Quote2;","map":{"version":3,"names":["React","useState","useEffect","useRef","createQuote","processPayment","apiProcessPayment","getAddonsByPolicyType","TerracottaService","getResidenceID","getTypePolicyID","getAgebandID","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","generatePDF","formData","calculateTotalPrice","formatDateToEuropean","policyNumber","_formData$selectedQuo","jsPDF","default","doc","currentDate","Date","toLocaleDateString","setFontSize","text","concat","yPos","tripType","countryOfResidence","destination","startDate","endDate","numberOfTravelers","travelers","forEach","traveler","index","addPage","firstName","lastName","age","email","phone","selectedQuote","name","coverage","medical","baggage","cancellation","features","length","feature","additionalPolicies","policy","price","toFixed","additional","reduce","sum","save","error","console","generateHTMLPolicy","_formData$selectedQuo2","htmlContent","map","join","printWindow","window","open","document","write","close","dateString","year","month","day","split","calculateAgeFromDateOfBirth","dateOfBirth","birthDate","today","getFullYear","monthDiff","getMonth","getDate","Math","max","Quote2","_ref","_formData$selectedQuo10","onNavigate","currentPhase","setCurrentPhase","setFormData","vaxId","nationality","paymentMethod","cardNumber","expiryDate","cvv","billingAddress","street","city","postalCode","country","quoteOptions","setQuoteOptions","isProcessing","setIsProcessing","setPolicyNumber","policyDocuments","setPolicyDocuments","terracottaService","log","getInstance","screeningQuestions","setScreeningQuestions","screeningAnswers","setScreeningAnswers","isLoadingQuotes","setIsLoadingQuotes","quoteError","setQuoteError","availableProducts","setAvailableProducts","isLoadingProducts","setIsLoadingProducts","availablePolicyTypes","setAvailablePolicyTypes","isLoadingPolicyTypes","setIsLoadingPolicyTypes","availablePolicyTypeDestinations","setAvailablePolicyTypeDestinations","isLoadingPolicyTypeDestinations","setIsLoadingPolicyTypeDestinations","destinationCategories","setDestinationCategories","isLoadingCategories","setIsLoadingCategories","showHelpPopup","setShowHelpPopup","countriesByCategory","setCountriesByCategory","isLoadingCountries","setIsLoadingCountries","showPrivacyPolicy","setShowPrivacyPolicy","showTermsAndConditions","setShowTermsAndConditions","showGeneralConditions","setShowGeneralConditions","generalConditionsData","setGeneralConditionsData","termsAccepted","setTermsAccepted","marketingEmailsAccepted","setMarketingEmailsAccepted","countriesOfResidence","setCountriesOfResidence","isLoadingCountriesOfResidence","setIsLoadingCountriesOfResidence","availableAdditionalPolicies","setAvailableAdditionalPolicies","isLoadingAddons","setIsLoadingAddons","totalGrossPriceWithAddons","setTotalGrossPriceWithAddons","processingAddonId","setProcessingAddonId","scrollTo","top","behavior","loadTerracottaProducts","_productResponse$Sche","productResponse","getUserProductList","Schemas","loadPolicyTypes","allPolicyTypes","product","SchemaID","SchemaName","policyResponse","getUserProductTypePolicy","toString","policyTypesWithSchema","PolicyTypes","policyType","_objectSpread","push","uniquePolicyTypes","filter","self","findIndex","p","TypePolicyID","schemaToUse","find","policyTypeResponse","loadCountriesOfResidence","response","fetch","data","json","status","countries","message","loadDestinationCategories","categories","loadCountriesForCategories","countriesData","category","encodeURIComponent","generateQuotesIfNeeded","options","generateQuoteOptions","normalizePolicyTypeName","soapPolicyType","normalized","trim","mappings","key","value","Object","entries","toLowerCase","lowerNormalized","includes","warn","fetchAddons","_formData$selectedQuo3","_formData$selectedQuo4","_formData$selectedQuo5","_formData$selectedQuo6","_formData$selectedQuo7","_formData$selectedQuo8","_formData$selectedQuo9","_formData$selectedQuo0","rawPolicyTypeName","policytypeName","policyTypeName","typePolicyName","selectedField","addonsData","addons","transformedAddons","addon","displayName","additional_cover_detail","additional_cover_name","getIcon","lowerName","getCategory","id","alteration_id","description","icon","alterationId","_formData$selectedQuo1","nameParts","extractedPolicyType","normalizedType","prev","_response$quoteResult","terracottaRequest","convertToTerracottaFormat","provideQuotation","Message","quoteResults","realQuotes","result","QuoteID","schemaName","type","isBestBuy","GrossPrice","coverLevel","toLocaleString","activities","isAnnual","maxDaysPerTrip","terracottaQuoteId","summaryOfCoverUrl","SI","policyWordingUrl","PW","currency","ipt","IPT","schemaID","destinationCategory","destinationName","residenceName","packageName","typePackageName","isBestBuyText","discount","Discount","iconURL","IconURL","helpFile","HelpFile","policytypeShortName","keyFactsUrl","KF","policyTypeID","PolicyTypeID","destinationID","DestinationID","packageID","PackageID","screeningPremium","ipRate","IPTRate","netUW","wbComm","agentComm","SummaryCovers","sortedByIPT","sort","a","b","iptA","iptB","top3Quotes","slice","sortedByPrice","q","generateSampleSOAPQuotes","allSampleQuotes","top3","calculateRealCoverageLevels","baseMedical","baseBaggage","baseCancellation","medicalMultiplier","baggageMultiplier","cancellationMultiplier","parseInt","replace","generateActivitiesForDestination","generateFeaturesFromSOAPData","baseFeatures","soapFeatures","destinationFeatures","calculateCoverageLevels","determineQuoteType","generateFeaturesForDestination","baseActivities","generateEnhancedMockQuoteOptions","days","ceil","getTime","basePrice","dailyRate","tripMultiplier","mockQuotes","schemasToUse","schema","round","quoteType","now","generateLegacyMockQuoteOptions","CustomDatePicker","_ref2","onChange","placeholder","required","minDate","isOpen","setIsOpen","setCurrentDate","pickerRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","isDateValid","date","setHours","inputDate","minDateObj","generateCalendar","firstDay","lastDay","daysInMonth","startingDayOfWeek","getDay","i","className","padStart","isSelected","isToday","toDateString","isValid","onClick","style","cursor","opacity","children","navigateMonth","direction","monthNames","ref","e","formattedValue","formatDateInput","isoDate","convertToISO","title","pattern","maxLength","handleInputChange","field","newData","setDate","handleTravelerChange","handleNumberOfTravelersChange","count","splice","handleBillingAddressChange","ddmmyyyy","toISOString","digits","fetchGeneralConditions","_formData$selectedQuo11","screeningResponse","getScreeningQuestions","handleTermsAcceptance","checked","allYesAnswers","question","questionNumber","nextPhase","JSON","stringify","essentialPlan","option","_option$name","_option$policytypeNam","Error","String","stack","prevPhase","selectQuote","quote","addAdditionalPolicy","_formData$selectedQuo12","_formData$billingAddr","_formData$billingAddr2","_formData$travelers$","_formData$travelers$2","alert","existingAlterationIds","allAlterationIds","calculateAgeFromDOB","calculateDOBFromAge","TravellerNumber","Title","FirstName","LastName","DateOfBirth","formatDateForTerracotta","Age","TitleID","getTitleID","AlterationID","contactDetails","Address","Postcode","Email","Telephone","alterationsRequest","userID","userCode","quoteID","specificQuoteDetails","Travellers","ContactDetails","provideQuotationWithAlterations","updatedQuote","newGrossPrice","dob","currentYear","birthYear","parts","titleMap","removeAdditionalPolicy","policyId","_formData$selectedQuo13","remainingAddons","_formData$billingAddr3","_formData$billingAddr4","_formData$travelers$3","_formData$travelers$4","remainingAlterationIds","_formData$selectedQuo14","_formData$selectedQuo15","parseFloat","additionalPrice","generatePolicyPDF","downloadPolicyPDF","_formData$travelers$5","policyHolderEmail","emailRegex","test","_formData$travelers$6","vatId","travelersWithNumber","travellerNumber","quoteData","totalAmount","quoteResponse","_formData$travelers$7","_formData$travelers$8","_formData$selectedQuo16","_formData$selectedQuo21","quoteId","terracottaScreeningAnswers","_ref3","answer","travelerData","AgebandID","minAge","maxAge","ScreeningInformation","quoteRequestWithRealData","quoteDetails","ResidenceID","TypePackageID","Destination","StartDate","EndDate","includeAnnualQuotes","includeUpsell","currencyID","schemaIDFilter","updatedQuoteResponse","selectedPlan","_formData$selectedQuo17","_formData$selectedQuo18","alterationIds","alterationsRequestWithRealData","updatedAlterationsResponse","_formData$selectedQuo19","_formData$selectedQuo20","updateError","t","idx","savePolicyResponse","savePolicyDetails","screeningQuestionAnswers","medicalScreeningReference","useDefaultAnswers","policySaved","policyID","certificate","documents","policyWording","summaryOfCover","keyFacts","ipid","IPID","_formData$travelers$9","validationErrors","emailResponse","emailPolicyDocuments","emailAddress","emailSent","emailError","paymentData","amount","paymentResponse","terracottaError","undefined","_paymentResponse$data","isPhaseValid","phase","travelersBasicValid","every","policyHolderContactValid","paymentValid","renderPhase1","htmlFor","fontSize","color","marginLeft","disabled","tripTypeValue","TypePolicyName","country_name","country_id","num","renderPhase2","textAlign","marginBottom","margin","fontWeight","fontFamily","display","flexDirection","justifyContent","gap","marginTop","overflowX","padding","maxWidth","_formData$selectedQuo22","_formData$selectedQuo23","_formData$selectedQuo24","_formData$selectedQuo27","_formData$selectedQuo30","background","border","borderRadius","transition","boxShadow","position","minWidth","flexShrink","onMouseEnter","_formData$selectedQuo25","currentTarget","borderColor","onMouseLeave","_formData$selectedQuo26","lineHeight","cover","Limit","width","backgroundColor","textTransform","_formData$selectedQuo28","_formData$selectedQuo29","gridColumn","renderPhase3","_formData$selectedQuo31","_formData$selectedQuo32","alignItems","some","renderPhase4","_formData$selectedQuo33","calculateTripDuration","start","end","WebkitBackgroundClip","WebkitTextFillColor","gridTemplateColumns","getIconAndColor","bgColor","overflow","transform","right","height","zIndex","flex","Excess","_formData$selectedQuo34","_formData$selectedQuo35","addonAmount","renderPhase5","_formData$selectedQuo36","decodeQuestionText","textarea","createElement","innerHTML","decoded","renderPhase6","decodedQuestion","whiteSpace","yesMessage","noMessage","yesAction","yesActionText","fontStyle","noAction","noActionText","renderPhase7","borderTop","preventDefault","textDecoration","renderPhase8","_formData$travelers$0","_formData$selectedQuo37","_formData$selectedQuo38","href","rel","renderPhaseContent","location","stopPropagation","_ref4","decodedNoMessage","filteredNoMessage"],"sources":["C:/Users/laptop-123/TravelInsurance_Demo_2/src/pages/Quote2.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './Quote2.css';\n// Import API service for database integration\nimport { createQuote, processPayment as apiProcessPayment, getAddonsByPolicyType } from '../services/apiService';\n// Import Terracotta service for insurance quotes\nimport TerracottaService, { \n  TerracottaQuoteResponse, \n  TerracottaQuoteResult, \n  TerracottaScreeningQuestionsResponse,\n  TerracottaSavePolicyResponse,\n  TerracottaProductListResponse,\n  TerracottaPolicyType,\n  TerracottaPolicyTypeResponse,\n  TerracottaPolicyTypeDestination,\n  TerracottaPolicyTypeDestinationResponse,\n  SummaryCover,\n  TerracottaQuoteWithAlterationsRequest,\n  TerracottaTraveler,\n  TerracottaContactDetails,\n  getResidenceID,\n  getTypePolicyID,\n  getAgebandID,\n  getTitleID\n} from '../services/terracottaService';\n\n// Import jsPDF dynamically to avoid build issues\nconst generatePDF = async (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  try {\n    // Dynamic import of jsPDF\n    const jsPDF = (await import('jspdf')).default;\n    \n    const doc = new jsPDF();\n    const currentDate = new Date().toLocaleDateString('en-GB');\n    \n    // Set up fonts and styles\n    doc.setFontSize(20);\n    doc.text('TRAVEL INSURANCE POLICY', 20, 20);\n    \n    doc.setFontSize(14);\n    doc.text(`Policy Number: ${policyNumber}`, 20, 35);\n    doc.text(`Issue Date: ${currentDate}`, 20, 45);\n    \n    let yPos = 65;\n    \n    // Trip Information Section\n    doc.setFontSize(16);\n    doc.text('TRIP INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    const tripType = formData.tripType === 'single' ? 'Single Trip Insurance' : \n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance';\n    \n    doc.text(`Trip Type: ${tripType}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Country of Residence: ${formData.countryOfResidence}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Destination: ${formData.destination}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Departure: ${formatDateToEuropean(formData.startDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Return: ${formatDateToEuropean(formData.endDate)}`, 20, yPos);\n    yPos += 10;\n    doc.text(`Travelers: ${formData.numberOfTravelers}`, 20, yPos);\n    yPos += 20;\n    \n    // Traveler Information\n    doc.setFontSize(16);\n    doc.text('TRAVELER INFORMATION', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    formData.travelers.forEach((traveler: any, index: number) => {\n      if (yPos > 250) { // New page if needed\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.text(`${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}:`, 20, yPos);\n      yPos += 10;\n      doc.text(`Name: ${traveler.firstName} ${traveler.lastName}`, 20, yPos);\n      yPos += 8;\n      doc.text(`Age: ${traveler.age} years old`, 20, yPos);\n      yPos += 8;\n      doc.text(`Email: ${traveler.email}`, 20, yPos);\n      yPos += 8;\n      if (traveler.phone) {\n        doc.text(`Phone: ${traveler.phone}`, 20, yPos);\n        yPos += 8;\n      }\n      yPos += 10;\n    });\n    \n    // Selected Plan\n    if (formData.selectedQuote) {\n      if (yPos > 180) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('SELECTED INSURANCE PLAN', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      doc.text(`Plan: ${formData.selectedQuote.name}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Medical: ${formData.selectedQuote.coverage.medical}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Baggage: ${formData.selectedQuote.coverage.baggage}`, 20, yPos);\n      yPos += 10;\n      doc.text(`Cancellation: ${formData.selectedQuote.coverage.cancellation}`, 20, yPos);\n      yPos += 15;\n      \n      // Add Included Features\n      if (formData.selectedQuote.features && formData.selectedQuote.features.length > 0) {\n        doc.text('Included Features:', 20, yPos);\n        yPos += 10;\n        formData.selectedQuote.features.forEach((feature: string) => {\n          if (yPos > 270) { // Check for page break\n            doc.addPage();\n            yPos = 20;\n          }\n          doc.text(`• ${feature}`, 25, yPos);\n          yPos += 8;\n        });\n        yPos += 10;\n      }\n    }\n    \n    // Additional Coverage\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      if (yPos > 220) {\n        doc.addPage();\n        yPos = 20;\n      }\n      \n      doc.setFontSize(16);\n      doc.text('ADDITIONAL COVERAGE', 20, yPos);\n      yPos += 15;\n      \n      doc.setFontSize(12);\n      formData.additionalPolicies.forEach((policy: any) => {\n        if (yPos > 270) { // Check for page break\n          doc.addPage();\n          yPos = 20;\n        }\n        doc.text(`• ${policy.name} - €${policy.price.toFixed(2)}`, 25, yPos);\n        yPos += 8;\n      });\n      yPos += 15;\n    }\n    \n    // Premium Summary\n    if (yPos > 200) {\n      doc.addPage();\n      yPos = 20;\n    }\n    \n    doc.setFontSize(16);\n    doc.text('PREMIUM SUMMARY', 20, yPos);\n    yPos += 15;\n    \n    doc.setFontSize(12);\n    doc.text(`Base Premium: €${formData.selectedQuote?.price}`, 20, yPos);\n    yPos += 10;\n    if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n      const additional = formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0);\n      doc.text(`Additional Policies: €${additional.toFixed(2)}`, 20, yPos);\n      yPos += 10;\n    }\n    doc.text('Taxes & Fees: Included', 20, yPos);\n    yPos += 10;\n    doc.text(`Total Premium: €${calculateTotalPrice().toFixed(2)}`, 20, yPos);\n    yPos += 20;\n    \n    doc.text('Emergency Contact: +30 6974907500', 20, yPos);\n    \n    // Save the PDF\n    doc.save(`Travel_Insurance_Policy_${policyNumber}.pdf`);\n    \n  } catch (error) {\n    console.error('PDF generation failed, falling back to HTML:', error);\n    // Fallback to HTML generation if PDF fails\n    generateHTMLPolicy(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  }\n};\n\nconst generateHTMLPolicy = (formData: any, calculateTotalPrice: () => number, formatDateToEuropean: (date: string) => string, policyNumber: string) => {\n  const currentDate = new Date().toLocaleDateString('en-GB');\n  \n  const htmlContent = `\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Travel Insurance Policy - ${policyNumber}</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }\n        .header { text-align: center; border-bottom: 2px solid #0077b6; padding-bottom: 20px; margin-bottom: 30px; }\n        .section { margin-bottom: 25px; }\n        .section-title { color: #0077b6; font-size: 16px; font-weight: bold; margin-bottom: 10px; }\n        .info-row { margin: 8px 0; }\n        .traveler-block { margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 5px; }\n        @media print { body { margin: 0; } }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>TRAVEL INSURANCE POLICY</h1>\n        <h2>Policy Number: ${policyNumber}</h2>\n        <p>Issue Date: ${currentDate}</p>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRIP INFORMATION</div>\n        <div class=\"info-row\"><strong>Trip Type:</strong> ${formData.tripType === 'single' ? 'Single Trip Insurance' : \n                        formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' : \n                        formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                        'Comprehensive Single Trip Insurance'}</div>\n        <div class=\"info-row\"><strong>Country of Residence:</strong> ${formData.countryOfResidence}</div>\n        <div class=\"info-row\"><strong>Destination:</strong> ${formData.destination}</div>\n        <div class=\"info-row\"><strong>Departure:</strong> ${formatDateToEuropean(formData.startDate)}</div>\n        <div class=\"info-row\"><strong>Return:</strong> ${formatDateToEuropean(formData.endDate)}</div>\n        <div class=\"info-row\"><strong>Travelers:</strong> ${formData.numberOfTravelers}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"section-title\">TRAVELER INFORMATION</div>\n        ${formData.travelers.map((traveler: any, index: number) => `\n            <div class=\"traveler-block\">\n                <strong>${index === 0 ? 'Primary Policyholder' : `Traveler ${index + 1}`}</strong>\n                <div class=\"info-row\"><strong>Name:</strong> ${traveler.firstName} ${traveler.lastName}</div>\n                <div class=\"info-row\"><strong>Age:</strong> ${traveler.age} years old</div>\n                <div class=\"info-row\"><strong>Email:</strong> ${traveler.email}</div>\n                ${traveler.phone ? `<div class=\"info-row\"><strong>Phone:</strong> ${traveler.phone}</div>` : ''}\n            </div>\n        `).join('')}\n    </div>\n    \n    ${formData.selectedQuote ? `\n    <div class=\"section\">\n        <div class=\"section-title\">SELECTED INSURANCE PLAN</div>\n        <div class=\"info-row\"><strong>Plan:</strong> ${formData.selectedQuote.name}</div>\n        <div class=\"info-row\"><strong>Medical Coverage:</strong> ${formData.selectedQuote.coverage.medical}</div>\n        <div class=\"info-row\"><strong>Baggage Coverage:</strong> ${formData.selectedQuote.coverage.baggage}</div>\n        <div class=\"info-row\"><strong>Trip Cancellation:</strong> ${formData.selectedQuote.coverage.cancellation}</div>\n        \n        ${formData.selectedQuote.features && formData.selectedQuote.features.length > 0 ? `\n        <div style=\"margin-top: 15px;\">\n            <strong>Included Features:</strong>\n            <ul>\n                ${formData.selectedQuote.features.map((feature: string) => `<li>${feature}</li>`).join('')}\n            </ul>\n        </div>\n        ` : ''}\n    </div>\n    ` : ''}\n    \n    ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n    <div class=\"section\">\n        <div class=\"section-title\">ADDITIONAL COVERAGE</div>\n        <ul>\n            ${formData.additionalPolicies.map((policy: any) => `<li>${policy.name} - €${policy.price.toFixed(2)}</li>`).join('')}\n        </ul>\n    </div>\n    ` : ''}\n    \n    <div class=\"section\">\n        <div class=\"section-title\">PREMIUM SUMMARY</div>\n        <div class=\"info-row\"><strong>Base Premium:</strong> €${formData.selectedQuote?.price}</div>\n        ${formData.additionalPolicies && formData.additionalPolicies.length > 0 ? `\n        <div class=\"info-row\"><strong>Additional Policies:</strong> €${formData.additionalPolicies.reduce((sum: number, policy: any) => sum + policy.price, 0).toFixed(2)}</div>\n        ` : ''}\n        <div class=\"info-row\"><strong>Taxes & Fees:</strong> Included</div>\n        <div class=\"info-row\"><strong>Total Premium:</strong> €${calculateTotalPrice().toFixed(2)}</div>\n    </div>\n    \n    <div class=\"section\">\n        <div class=\"info-row\"><strong>Emergency Contact:</strong> +30 6974907500</div>\n        <div class=\"info-row\" style=\"margin-top: 20px; font-style: italic;\">\n            This document serves as proof of travel insurance coverage.\n        </div>\n    </div>\n    \n    <script>\n        window.onload = function() { window.print(); };\n        window.onafterprint = function() { window.close(); };\n    </script>\n</body>\n</html>`;\n\n  const printWindow = window.open('', '_blank', 'width=800,height=600');\n  if (printWindow) {\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }\n};\n\n// Format date to European format (DD/MM/YYYY)\nconst formatDateToEuropean = (dateString: string): string => {\n  if (!dateString) return '';\n  // Parse the ISO date string directly to avoid timezone issues\n  const [year, month, day] = dateString.split('-');\n  return `${day}/${month}/${year}`;\n};\n\nconst calculateAgeFromDateOfBirth = (dateOfBirth: string): number => {\n  const birthDate = new Date(dateOfBirth);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  \n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  \n  return Math.max(0, age);\n};\n\ninterface TravelerInfo {\n  firstName: string;\n  lastName: string;\n  age: string;\n  email: string;\n  phone: string;\n  vaxId: string;\n  nationality: string;\n  title?: string;\n  dateOfBirth?: string;\n  gender?: string;\n}\n\ninterface QuoteOption {\n  id: string;\n  name: string;\n  type: 'basic' | 'standard' | 'premium';\n  price: number;\n  coverage: {\n    medical: string;\n    baggage: string;\n    cancellation: string;\n    activities: string[];\n  };\n  features: string[];\n  // Terracotta specific fields\n  terracottaQuoteId?: string;\n  schemaName?: string;\n  policyTypeName?: string;\n  policytypeName?: string; // Raw field from SOAP response\n  summaryOfCoverUrl?: string;\n  policyWordingUrl?: string;\n  currency?: string;\n  ipt?: number;\n  // Enhanced metadata fields\n  schemaID?: number;\n  destinationCategory?: string;\n  tripType?: string;\n  // Enhanced SOAP fields\n  residenceName?: string;\n  destinationName?: string;\n  packageName?: string;\n  typePackageName?: string;\n  isAnnual?: number;\n  isBestBuy?: number;\n  maxDaysPerTrip?: number;\n  coverLevel?: number;\n  discount?: number;\n  iconURL?: string;\n  helpFile?: string;\n  policytypeShortName?: string;\n  // Additional SOAP response fields\n  keyFactsUrl?: string;\n  policyTypeID?: number;\n  destinationID?: number;\n  packageID?: number;\n  screeningPremium?: number;\n  ipRate?: number;\n  netUW?: number;\n  wbComm?: number;\n  agentComm?: number;\n  // Additional fields from SOAP response\n  typePolicyName?: string;\n  isBestBuyText?: string;\n  SummaryCovers?: SummaryCover[];\n  // Document URLs from quote response\n  SI?: string;  // Summary of Cover URL\n  PW?: string;  // Policy Wording URL\n}\n\ninterface QuoteFormData {\n  // Trip Details\n  destination: string;\n  startDate: string;\n  endDate: string;\n  tripType: 'single' | 'annual' | 'comprehensive' | 'longstay';\n  countryOfResidence: string;\n  \n  // Traveler Information\n  numberOfTravelers: number;\n  travelers: TravelerInfo[];\n  \n  // Selected Quote\n  selectedQuote: QuoteOption | null;\n  \n  // Additional Policies\n  additionalPolicies: AdditionalPolicy[];\n  \n  // Payment Details\n  paymentMethod: 'card' | 'bank' | 'paypal';\n  cardNumber: string;\n  expiryDate: string;\n  cvv: string;\n  billingAddress: {\n    street: string;\n    city: string;\n    postalCode: string;\n    country: string;\n  };\n}\n\ninterface AdditionalPolicy {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  icon: string;\n  category: string;\n  alterationId: string; // Terracotta alteration ID for SOAP calls\n}\n\ntype WizardPhase = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface QuoteProps {\n  onNavigate?: (page: string) => void;\n}\n\nconst Quote2: React.FC<QuoteProps> = ({ onNavigate }) => {\n  const [currentPhase, setCurrentPhase] = useState<WizardPhase>(1);\n  const [formData, setFormData] = useState<QuoteFormData>({\n    destination: '',\n    startDate: '',\n    endDate: '',\n    tripType: 'single',\n    countryOfResidence: '',\n    numberOfTravelers: 1,\n    travelers: [\n      {\n        firstName: '',\n        lastName: '',\n        age: '',\n        email: '',\n        phone: '',\n        vaxId: '',\n        nationality: ''\n      }\n    ],\n    selectedQuote: null,\n    additionalPolicies: [],\n    paymentMethod: 'card',\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    billingAddress: {\n      street: '',\n      city: '',\n      postalCode: '',\n      country: ''\n    }\n  });\n\n  const [quoteOptions, setQuoteOptions] = useState<QuoteOption[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [policyNumber, setPolicyNumber] = useState<string>('');\n  const [policyDocuments, setPolicyDocuments] = useState<{\n    certificate?: string;\n    policyWording?: string;\n    summaryOfCover?: string;\n    keyFacts?: string;\n    ipid?: string;\n  }>({});\n  const [terracottaService] = useState<TerracottaService>(() => {\n    console.log('Creating TerracottaService instance...');\n    return TerracottaService.getInstance('4072', '111427');\n  });\n  const [screeningQuestions, setScreeningQuestions] = useState<any[]>([]);\n  const [screeningAnswers, setScreeningAnswers] = useState<{[key: number]: 'yes' | 'no'}>({});\n  const [isLoadingQuotes, setIsLoadingQuotes] = useState(false);\n  const [quoteError, setQuoteError] = useState<string>('');\n  const [availableProducts, setAvailableProducts] = useState<any[]>([]);\n  const [isLoadingProducts, setIsLoadingProducts] = useState(true);\n  \n  // Policy types state\n  const [availablePolicyTypes, setAvailablePolicyTypes] = useState<TerracottaPolicyType[]>([]);\n  const [isLoadingPolicyTypes, setIsLoadingPolicyTypes] = useState(false);\n  \n  // Policy type destinations state (Trip Types)\n  const [availablePolicyTypeDestinations, setAvailablePolicyTypeDestinations] = useState<TerracottaPolicyTypeDestination[]>([]);\n  const [isLoadingPolicyTypeDestinations, setIsLoadingPolicyTypeDestinations] = useState(false);\n  \n  // Destination categories state\n  const [destinationCategories, setDestinationCategories] = useState<string[]>([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(false);\n  \n  // Help popup state\n  const [showHelpPopup, setShowHelpPopup] = useState(false);\n  const [countriesByCategory, setCountriesByCategory] = useState<{[key: string]: string[]}>({});\n  const [isLoadingCountries, setIsLoadingCountries] = useState(false);\n  \n  // Privacy Policy and Terms modal states\n  const [showPrivacyPolicy, setShowPrivacyPolicy] = useState(false);\n  const [showTermsAndConditions, setShowTermsAndConditions] = useState(false);\n  const [showGeneralConditions, setShowGeneralConditions] = useState(false);\n  const [generalConditionsData, setGeneralConditionsData] = useState<any[]>([]);\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [marketingEmailsAccepted, setMarketingEmailsAccepted] = useState(false);\n  \n  // Countries of residence state\n  const [countriesOfResidence, setCountriesOfResidence] = useState<{country_id: number, country_name: string}[]>([]);\n  const [isLoadingCountriesOfResidence, setIsLoadingCountriesOfResidence] = useState(false);\n  \n  // Addons state - fetched from database based on selected policy type\n  const [availableAdditionalPolicies, setAvailableAdditionalPolicies] = useState<AdditionalPolicy[]>([]);\n  const [isLoadingAddons, setIsLoadingAddons] = useState(false);\n  \n  // Store the total GrossPrice from SOAP alterations response\n  const [totalGrossPriceWithAddons, setTotalGrossPriceWithAddons] = useState<number | null>(null);\n  \n  // Loading state for addon operations - track which specific addon is being processed\n  const [processingAddonId, setProcessingAddonId] = useState<string | null>(null);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n  \n\n  // Load available Terracotta products on component mount\n  useEffect(() => {\n    const loadTerracottaProducts = async () => {\n      try {\n        setIsLoadingProducts(true);\n        console.log('Loading Terracotta products...');\n        const productResponse = await terracottaService.getUserProductList();\n        console.log('Terracotta products loaded:', productResponse);\n        console.log(`✅ Successfully loaded ${productResponse.Schemas?.length || 0} products for your account`);\n        setAvailableProducts(productResponse.Schemas || []);\n        setIsLoadingProducts(false);\n      } catch (error) {\n        console.error('Error loading Terracotta products:', error);\n        setIsLoadingProducts(false);\n        // Don't show error to user, just log it - we'll use fallback\n      }\n    };\n\n    loadTerracottaProducts();\n  }, [terracottaService]);\n\n  // Load policy types when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        setIsLoadingPolicyTypes(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema)\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        for (const product of availableProducts) {\n          try {\n            console.log(`Loading policy types for schema ${product.SchemaID}: ${product.SchemaName}`);\n            const policyResponse = await terracottaService.getUserProductTypePolicy(product.SchemaID.toString());\n            console.log(`Policy types for schema ${product.SchemaID}:`, policyResponse);\n            \n            // Add schema context to each policy type\n            const policyTypesWithSchema = policyResponse.PolicyTypes.map(policyType => ({\n              ...policyType,\n              SchemaID: product.SchemaID,\n              SchemaName: product.SchemaName\n            }));\n            \n            allPolicyTypes.push(...policyTypesWithSchema);\n          } catch (error) {\n            console.error(`Error loading policy types for schema ${product.SchemaID}:`, error);\n          }\n        }\n        \n        // Remove duplicates based on TypePolicyID\n        const uniquePolicyTypes = allPolicyTypes.filter((policyType, index, self) => \n          index === self.findIndex(p => p.TypePolicyID === policyType.TypePolicyID)\n        );\n        \n        setAvailablePolicyTypes(uniquePolicyTypes);\n        console.log(`✅ Successfully loaded ${uniquePolicyTypes.length} unique policy types`);\n        setIsLoadingPolicyTypes(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypes(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Load policy types (Trip Types) when products are available\n  useEffect(() => {\n    const loadPolicyTypes = async () => {\n      if (availableProducts.length === 0) return;\n      \n      try {\n        setIsLoadingPolicyTypeDestinations(true);\n        console.log('Loading policy types for available products...');\n        \n        // Load policy types for each product (schema) - Using schema 717 as specified\n        const allPolicyTypes: TerracottaPolicyType[] = [];\n        \n        // Use schema 717 as specified in the requirement\n        const schemaToUse = availableProducts.find(p => p.SchemaID === 717) || availableProducts[0];\n        \n        try {\n          console.log(`Loading policy types for schema ${schemaToUse.SchemaID}: ${schemaToUse.SchemaName}`);\n          const policyTypeResponse = await terracottaService.getUserProductTypePolicy(schemaToUse.SchemaID.toString());\n          console.log(`Policy types for schema ${schemaToUse.SchemaID}:`, policyTypeResponse);\n          \n          allPolicyTypes.push(...policyTypeResponse.PolicyTypes);\n        } catch (error) {\n          console.error(`Error loading policy types for schema ${schemaToUse.SchemaID}:`, error);\n        }\n        \n        setAvailablePolicyTypes(allPolicyTypes);\n        console.log(`✅ Successfully loaded ${allPolicyTypes.length} policy types`);\n        setIsLoadingPolicyTypeDestinations(false);\n      } catch (error) {\n        console.error('Error loading policy types:', error);\n        setIsLoadingPolicyTypeDestinations(false);\n      }\n    };\n\n    loadPolicyTypes();\n  }, [availableProducts, terracottaService]);\n\n  // Show a brief message when end date is cleared due to start date change\n  useEffect(() => {\n    if (formData.startDate && !formData.endDate) {\n      // This effect will run when start date exists but end date is empty\n      // We could add a toast notification here if needed\n    }\n  }, [formData.startDate, formData.endDate]);\n\n  // Load countries of residence on component mount\n  useEffect(() => {\n    const loadCountriesOfResidence = async () => {\n      try {\n        setIsLoadingCountriesOfResidence(true);\n        console.log('Loading countries of residence...');\n        const response = await fetch('http://localhost:5002/api/countries');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setCountriesOfResidence(data.countries);\n          console.log('✅ Countries of residence loaded:', data.countries.length, 'countries');\n        } else {\n          console.error('❌ Failed to load countries of residence:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading countries of residence:', error);\n      } finally {\n        setIsLoadingCountriesOfResidence(false);\n      }\n    };\n\n    loadCountriesOfResidence();\n  }, []);\n\n  // Load destination categories on component mount\n  useEffect(() => {\n    const loadDestinationCategories = async () => {\n      try {\n        setIsLoadingCategories(true);\n        console.log('Loading destination categories...');\n        const response = await fetch('http://localhost:5002/api/destination-categories');\n        const data = await response.json();\n        \n        if (data.status === 'success') {\n          setDestinationCategories(data.categories);\n          console.log('✅ Destination categories loaded:', data.categories);\n        } else {\n          console.error('❌ Failed to load destination categories:', data.message);\n        }\n      } catch (error) {\n        console.error('❌ Error loading destination categories:', error);\n        // Set fallback categories if API fails\n        setDestinationCategories(['Europe', 'Worldwide']);\n      } finally {\n        setIsLoadingCategories(false);\n      }\n    };\n\n    loadDestinationCategories();\n  }, []);\n\n  // Load countries for each category when categories are loaded\n  useEffect(() => {\n    const loadCountriesForCategories = async () => {\n      if (destinationCategories.length === 0) return;\n      \n      try {\n        setIsLoadingCountries(true);\n        const countriesData: {[key: string]: string[]} = {};\n        \n        // Load countries for each category\n        for (const category of destinationCategories) {\n          try {\n            const response = await fetch(`http://localhost:5002/api/destination-categories/${encodeURIComponent(category)}/countries`);\n            const data = await response.json();\n            \n            if (data.status === 'success') {\n              countriesData[category] = data.countries;\n            }\n          } catch (error) {\n            console.error(`Error loading countries for ${category}:`, error);\n            countriesData[category] = [];\n          }\n        }\n        \n        setCountriesByCategory(countriesData);\n      } catch (error) {\n        console.error('Error loading countries:', error);\n      } finally {\n        setIsLoadingCountries(false);\n      }\n    };\n\n    loadCountriesForCategories();\n  }, [destinationCategories]);\n\n  // Generate quotes when component mounts or when form data is complete\n  useEffect(() => {\n    const generateQuotesIfNeeded = async () => {\n      // Only generate quotes if we have basic form data and we're in phase 2\n      if (currentPhase === 2 && quoteOptions.length === 0) {\n        console.log('🔄 Generating quotes on component load...');\n        try {\n          const options = await generateQuoteOptions();\n          setQuoteOptions(options);\n        } catch (error) {\n          console.error('Error generating quotes:', error);\n        }\n      }\n    };\n\n    generateQuotesIfNeeded();\n  }, [currentPhase]);\n\n  // Helper function to normalize SOAP policy type names to match database\n  const normalizePolicyTypeName = (soapPolicyType: string): string => {\n    if (!soapPolicyType) return '';\n    \n    // Trim and normalize whitespace\n    let normalized = soapPolicyType.trim();\n    \n    // Map common SOAP response values to database policy type names\n    const mappings: { [key: string]: string } = {\n      // Annual Multi-Trip variants (handle various capitalizations)\n      'Silver Annual Multi-Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi-Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi-Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi Trip': 'Silver Annual Multi-Trip',\n      'Gold Annual Multi Trip': 'Gold Annual Multi-Trip',\n      'Essential Annual Multi Trip': 'Essential Annual Multi-Trip',\n      'Silver Annual Multi-trip': 'Silver Annual Multi-Trip', // lowercase 't'\n      'Gold Annual Multi-trip': 'Gold Annual Multi-Trip', // lowercase 't'\n      'Essential Annual Multi-trip': 'Essential Annual Multi-Trip', // lowercase 't'\n      \n      // Single Trip variants\n      'Silver Single Trip': 'Silver Single Trip',\n      'Gold Single Trip': 'Gold Single Trip',\n      'Essential Single Trip': 'Essential Single Trip',\n      'Value Single Trip': 'Value Single Trip',\n      \n      // Long Stay variants\n      'Long Stay Standard': 'Long Stay Standard',\n      'Long Stay Study Abroad': 'Long Stay Study Abroad',\n      'Longstay Standard': 'Long Stay Standard',\n      'Longstay Study Abroad': 'Long Stay Study Abroad',\n    };\n    \n    // Try exact match first (case-insensitive)\n    for (const [key, value] of Object.entries(mappings)) {\n      if (normalized.toLowerCase() === key.toLowerCase()) {\n        console.log(`✅ Exact match found! Normalized policy type: \"${normalized}\" -> \"${value}\"`);\n        return value;\n      }\n    }\n    \n    console.log(`⚠️ No exact mapping found for: \"${normalized}\", trying pattern matching...`);\n    \n    // Try pattern matching if exact match fails\n    const lowerNormalized = normalized.toLowerCase();\n    \n    // Silver Annual Multi-Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Annual Multi-Trip\"`);\n      return 'Silver Annual Multi-Trip';\n    }\n    \n    // Gold Annual Multi-Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Annual Multi-Trip\"`);\n      return 'Gold Annual Multi-Trip';\n    }\n    \n    // Essential Annual Multi-Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('annual')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Annual Multi-Trip\"`);\n      return 'Essential Annual Multi-Trip';\n    }\n    \n    // Silver Single Trip patterns\n    if (lowerNormalized.includes('silver') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Silver Single Trip\"`);\n      return 'Silver Single Trip';\n    }\n    \n    // Gold Single Trip patterns\n    if (lowerNormalized.includes('gold') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Gold Single Trip\"`);\n      return 'Gold Single Trip';\n    }\n    \n    // Essential Single Trip patterns\n    if (lowerNormalized.includes('essential') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Essential Single Trip\"`);\n      return 'Essential Single Trip';\n    }\n    \n    // Value Single Trip patterns\n    if (lowerNormalized.includes('value') && lowerNormalized.includes('single')) {\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Value Single Trip\"`);\n      return 'Value Single Trip';\n    }\n    \n    // Long Stay patterns\n    if (lowerNormalized.includes('long') && lowerNormalized.includes('stay')) {\n      if (lowerNormalized.includes('study') || lowerNormalized.includes('abroad')) {\n        console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Study Abroad\"`);\n        return 'Long Stay Study Abroad';\n      }\n      console.log(`✅ Pattern matched: \"${normalized}\" -> \"Long Stay Standard\"`);\n      return 'Long Stay Standard';\n    }\n    \n    // If no match found, return original and log warning\n    console.warn(`⚠️ No mapping found for policy type: \"${normalized}\"`);\n    return normalized;\n  };\n\n  // Fetch addons when entering Step 3 (Add-ons phase)\n  useEffect(() => {\n    const fetchAddons = async () => {\n      // Only fetch addons when we're in Step 3 (Add-ons phase)\n      if (currentPhase !== 3) {\n        console.log('ℹ️ Not in Step 3, skipping addon fetch (current phase:', currentPhase, ')');\n        return;\n      }\n\n      // Debug: Log the entire selected quote to see all available fields\n      console.log('🔍 DEBUG - Selected Quote:', formData.selectedQuote);\n      console.log('📍 Current Phase:', currentPhase, '- Fetching add-ons for Step 3');\n      \n      // Only fetch if we have a selected quote with a policy type name\n      // IMPORTANT: prioritize policytypeName first as it contains the full name (e.g., \"Silver Annual Multi-Trip\")\n      // policyTypeName often just contains \"Annual Multi-Trip\" without the tier (Silver/Gold/Essential)\n      const rawPolicyTypeName = formData.selectedQuote?.policytypeName || formData.selectedQuote?.policyTypeName || formData.selectedQuote?.typePolicyName;\n      \n      console.log('🔍 DEBUG - Policy type field values:', {\n        policyTypeName: formData.selectedQuote?.policyTypeName,\n        policytypeName: formData.selectedQuote?.policytypeName,\n        typePolicyName: formData.selectedQuote?.typePolicyName,\n        rawPolicyTypeName: rawPolicyTypeName,\n        selectedField: formData.selectedQuote?.policytypeName ? 'policytypeName' : \n                       formData.selectedQuote?.policyTypeName ? 'policyTypeName' : 'typePolicyName'\n      });\n      \n      if (rawPolicyTypeName) {\n        // Normalize the policy type name to match database\n        const policyTypeName = normalizePolicyTypeName(rawPolicyTypeName);\n        console.log('📋 Fetching addons for policy type:', policyTypeName, '(raw:', rawPolicyTypeName, ')');\n        setIsLoadingAddons(true);\n        \n        try {\n          const response = await getAddonsByPolicyType(policyTypeName);\n          \n          if (response.status === 'success') {\n            const addonsData = (response as any).addons || [];\n            console.log(`✅ Loaded ${addonsData.length} addons for ${policyTypeName}`);\n            \n            // Transform database addons to AdditionalPolicy format\n            const transformedAddons: AdditionalPolicy[] = addonsData.map((addon: any) => {\n              // Create a descriptive name combining cover name and details\n              const displayName = addon.additional_cover_detail \n                ? `${addon.additional_cover_name} - ${addon.additional_cover_detail}`\n                : addon.additional_cover_name;\n              \n              // Determine icon based on addon type\n              const getIcon = (name: string) => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                if (lowerName.includes('business')) return '💼';\n                if (lowerName.includes('golf')) return '⛳';\n                if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                if (lowerName.includes('wedding')) return '💍';\n                if (lowerName.includes('event')) return '🎫';\n                if (lowerName.includes('cancellation')) return '❌';\n                if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                if (lowerName.includes('accident')) return '🚑';\n                if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                if (lowerName.includes('emigration')) return '🌍';\n                if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                return '📋'; // Default icon\n              };\n              \n              // Determine category based on addon type\n              const getCategory = (name: string) => {\n                const lowerName = name.toLowerCase();\n                if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                if (lowerName.includes('business')) return 'Business';\n                if (lowerName.includes('cancellation')) return 'Cancellation';\n                if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                return 'Other';\n              };\n              \n              return {\n                id: `addon-${addon.alteration_id}`,\n                name: displayName,\n                description: addon.additional_cover_detail || addon.additional_cover_name,\n                price: 0, // Price will be updated from SOAP response\n                icon: getIcon(addon.additional_cover_name),\n                category: getCategory(addon.additional_cover_name),\n                alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n              };\n            });\n            \n            setAvailableAdditionalPolicies(transformedAddons);\n          } else {\n            console.warn('No addons found for policy type:', policyTypeName);\n            setAvailableAdditionalPolicies([]);\n          }\n        } catch (error) {\n          console.error('Error fetching addons:', error);\n          // Keep empty array on error\n          setAvailableAdditionalPolicies([]);\n        } finally {\n          setIsLoadingAddons(false);\n        }\n      } else {\n        // No policy type selected, try to extract from quote name as fallback\n        if (formData.selectedQuote?.name) {\n          console.warn('⚠️ No policy type field found, attempting to extract from quote name:', formData.selectedQuote.name);\n          \n          // Try to extract policy type from the name field\n          // Format is usually: \"SchemaName - PolicyTypeName\"\n          const nameParts = formData.selectedQuote.name.split(' - ');\n          if (nameParts.length > 1) {\n            const extractedPolicyType = nameParts[1].trim();\n            console.log('🔍 Extracted policy type from name:', extractedPolicyType);\n            \n            const normalizedType = normalizePolicyTypeName(extractedPolicyType);\n            if (normalizedType) {\n              setIsLoadingAddons(true);\n              try {\n                const response = await getAddonsByPolicyType(normalizedType);\n                if (response.status === 'success') {\n                  const addonsData = (response as any).addons || [];\n                  console.log(`✅ Loaded ${addonsData.length} addons using extracted type: ${normalizedType}`);\n                  \n                  const transformedAddons: AdditionalPolicy[] = addonsData.map((addon: any) => {\n                    const displayName = addon.additional_cover_detail \n                      ? `${addon.additional_cover_name} - ${addon.additional_cover_detail}`\n                      : addon.additional_cover_name;\n                    \n                    const getIcon = (name: string) => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('winter') || lowerName.includes('sports')) return '🏂';\n                      if (lowerName.includes('business')) return '💼';\n                      if (lowerName.includes('golf')) return '⛳';\n                      if (lowerName.includes('hazardous') || lowerName.includes('activities')) return '🪂';\n                      if (lowerName.includes('wedding')) return '💍';\n                      if (lowerName.includes('event')) return '🎫';\n                      if (lowerName.includes('cancellation')) return '❌';\n                      if (lowerName.includes('waiver') || lowerName.includes('excess')) return '🛡️';\n                      if (lowerName.includes('financial') || lowerName.includes('protection')) return '💰';\n                      if (lowerName.includes('accident')) return '🚑';\n                      if (lowerName.includes('missed') || lowerName.includes('connection')) return '✈️';\n                      if (lowerName.includes('emigration')) return '🌍';\n                      if (lowerName.includes('study') || lowerName.includes('abroad')) return '📚';\n                      if (lowerName.includes('medical') || lowerName.includes('repatriation')) return '🏥';\n                      return '📋';\n                    };\n                    \n                    const getCategory = (name: string) => {\n                      const lowerName = name.toLowerCase();\n                      if (lowerName.includes('sport') || lowerName.includes('golf') || lowerName.includes('hazardous')) return 'Activities';\n                      if (lowerName.includes('business')) return 'Business';\n                      if (lowerName.includes('cancellation')) return 'Cancellation';\n                      if (lowerName.includes('wedding') || lowerName.includes('event')) return 'Events';\n                      if (lowerName.includes('protection') || lowerName.includes('waiver') || lowerName.includes('excess')) return 'Protection';\n                      if (lowerName.includes('medical') || lowerName.includes('accident')) return 'Medical';\n                      return 'Other';\n                    };\n                    \n                    return {\n                      id: `addon-${addon.alteration_id}`,\n                      name: displayName,\n                      description: addon.additional_cover_detail || addon.additional_cover_name,\n                      price: 0, // Price will be updated from SOAP response\n                      icon: getIcon(addon.additional_cover_name),\n                      category: getCategory(addon.additional_cover_name),\n                      alterationId: addon.alteration_id.toString() // Store alteration_id for SOAP calls\n                    };\n                  });\n                  \n                  setAvailableAdditionalPolicies(transformedAddons);\n                }\n              } catch (error) {\n                console.error('Error fetching addons with extracted type:', error);\n                setAvailableAdditionalPolicies([]);\n              } finally {\n                setIsLoadingAddons(false);\n              }\n              return;\n            }\n          }\n        }\n        \n        console.warn('⚠️ No policy type found in selected quote, clearing addons');\n        setAvailableAdditionalPolicies([]);\n      }\n    };\n\n    fetchAddons();\n  }, [currentPhase, formData.selectedQuote]); // Trigger when entering Step 3 OR when quote changes\n\n  // Reset addons and pricing when the selected quote changes\n  useEffect(() => {\n    if (formData.selectedQuote) {\n      console.log('Quote changed, resetting addons and pricing...');\n      \n      // Clear existing addons\n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: []\n      }));\n      \n      // Reset SOAP pricing\n      setTotalGrossPriceWithAddons(null);\n      \n      // Clear available addons to force refresh\n      setAvailableAdditionalPolicies([]);\n      \n      console.log('✅ Addons and pricing reset for new quote');\n    }\n  }, [formData.selectedQuote?.id]); // Only trigger when the quote ID actually changes\n\n  // REMOVED: Auto-loading sample quotes - now using real SOAP response\n  // useEffect(() => {\n  //   if (currentPhase === 2) {\n  //     console.log('🚀 Auto-loading TravelSafe sample quotes...');\n  //     const sampleQuotes = generateSampleSOAPQuotes();\n  //     setQuoteOptions(sampleQuotes);\n  //     setIsLoadingQuotes(false);\n  //   }\n  // }, [currentPhase]);\n\n  const generateQuoteOptions = async (): Promise<QuoteOption[]> => {\n    setIsLoadingQuotes(true);\n    setQuoteError('');\n\n    try {\n      console.log('🚀 Getting real quotes from Terracotta SOAP API...');\n      console.log('Form data:', formData);\n      \n      // Make a single SOAP request to get all available quotes\n      const terracottaRequest = TerracottaService.convertToTerracottaFormat(formData, availablePolicyTypes);\n      console.log('SOAP Request:', terracottaRequest);\n      \n      // Get quotes from Terracotta SOAP API\n      const response: TerracottaQuoteResponse = await terracottaService.provideQuotation(terracottaRequest);\n      console.log('SOAP Response:', response);\n      \n      console.log('📊 SOAP Response Message:', response.Message);\n      console.log('📊 Quote Results Count:', response.quoteResults?.length || 0);\n      \n      if (response.quoteResults && response.quoteResults.length > 0) {\n        console.log('📊 Processing SOAP results:', response.quoteResults);\n        // Convert SOAP response directly to QuoteOption format\n        const realQuotes: QuoteOption[] = response.quoteResults.map((result, index) => {\n          console.log(`Processing quote ${index + 1}:`, result);\n          return {\n            id: `soap-${result.QuoteID}`,\n            name: `${result.schemaName} - ${result.policytypeName || result.typePolicyName}`,\n            type: result.isBestBuy === 1 ? 'premium' : result.GrossPrice > 100 ? 'standard' : 'basic',\n            price: result.GrossPrice || 0,\n            coverage: {\n              medical: result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : '€2,000,000',\n              baggage: '€1,000', // This would ideally come from SOAP response\n              cancellation: '€2,000', // This would ideally come from SOAP response\n              activities: ['Standard activities', 'Adventure sports']\n            },\n            features: [\n              '24/7 Emergency Assistance',\n              'Medical Coverage',\n              'Trip Cancellation',\n              'Baggage Protection',\n              ...(result.isAnnual === 1 ? ['Annual Multi-Trip Coverage'] : []),\n              ...(result.isBestBuy === 1 ? ['Best Buy Option'] : []),\n              ...(result.maxDaysPerTrip > 0 ? [`Up to ${result.maxDaysPerTrip} days per trip`] : [])\n            ],\n            // Real SOAP response data\n            terracottaQuoteId: result.QuoteID,\n            schemaName: result.schemaName,\n            policytypeName: result.policytypeName,\n            policyTypeName: result.typePolicyName || result.policytypeName,\n            typePolicyName: result.typePolicyName || result.policytypeName,\n            summaryOfCoverUrl: result.SI,\n            policyWordingUrl: result.PW,\n            currency: result.currency,\n            ipt: result.IPT,\n            // Complete SOAP response fields\n            schemaID: result.SchemaID,\n            destinationCategory: result.destinationName,\n            tripType: formData.tripType,\n            residenceName: result.residenceName,\n            destinationName: result.destinationName,\n            packageName: result.packageName,\n            typePackageName: result.typePackageName,\n            isAnnual: result.isAnnual,\n            isBestBuy: result.isBestBuy,\n            isBestBuyText: result.isBestBuyText,\n            maxDaysPerTrip: result.maxDaysPerTrip,\n            coverLevel: result.coverLevel,\n            discount: result.Discount,\n            iconURL: result.IconURL,\n            helpFile: result.HelpFile,\n            policytypeShortName: result.policytypeShortName,\n            // Additional SOAP fields\n            keyFactsUrl: result.KF,\n            policyTypeID: result.PolicyTypeID,\n            destinationID: result.DestinationID,\n            packageID: result.PackageID,\n            screeningPremium: result.screeningPremium,\n            ipRate: result.IPTRate,\n            netUW: result.netUW,\n            wbComm: result.wbComm,\n            agentComm: result.agentComm,\n            SummaryCovers: result.SummaryCovers || [],\n            // Document URLs\n            SI: result.SI,\n            PW: result.PW\n          };\n        });\n        \n        console.log(`✅ Received ${realQuotes.length} real quotes from Terracotta SOAP API`);\n        \n        // Sort by IPT (highest first) and take top 3\n        const sortedByIPT = realQuotes.sort((a, b) => {\n          const iptA = a.ipt || 0;\n          const iptB = b.ipt || 0;\n          return iptB - iptA; // Descending order (highest IPT first)\n        });\n        \n        const top3Quotes = sortedByIPT.slice(0, 3);\n        \n        // Sort the top 3 by price (ascending - least expensive to most expensive)\n        const sortedByPrice = top3Quotes.sort((a, b) => a.price - b.price);\n        \n        console.log(`📊 Filtered to top 3 quotes with highest IPT, sorted by price:`, sortedByPrice.map(q => ({ \n          name: q.name, \n          price: q.price,\n          ipt: q.ipt \n        })));\n        \n        setIsLoadingQuotes(false);\n        return sortedByPrice;\n      } else {\n        console.log('⚠️ No quotes in SOAP response, using sample data');\n        console.log('⚠️ Response message:', response.Message);\n        console.log('⚠️ This might be due to:');\n        console.log('   - Incorrect API credentials');\n        console.log('   - Invalid parameter values');\n        console.log('   - API restrictions or downtime');\n        console.log('   - Date range issues (past dates)');\n        setIsLoadingQuotes(false);\n        return generateSampleSOAPQuotes();\n      }\n      \n    } catch (error) {\n      console.error('❌ Error getting real SOAP quotes:', error);\n      setQuoteError('SOAP API unavailable. Showing sample quotes from your SOAP response.');\n      setIsLoadingQuotes(false);\n      \n      // Fallback to sample SOAP response data\n      console.log('🔄 Using sample SOAP response data');\n      return generateSampleSOAPQuotes();\n    }\n  };\n\n  // Generate sample quotes using your SOAP response data\n  const generateSampleSOAPQuotes = (): QuoteOption[] => {\n    const allSampleQuotes: QuoteOption[] = [\n      {\n        id: 'soap-12345',\n        name: 'TravelSafe Basic 2024 - Single Trip Travel Insurance',\n        type: 'premium' as const, // Best buy\n        price: 72.60,\n        coverage: {\n          medical: '€5,000,000', // Cover level 5\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Best Buy Option',\n          'Up to 90 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12345\n        terracottaQuoteId: '12345',\n        schemaName: 'TravelSafe Basic 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12345.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12345.pdf',\n        currency: 'EUR',\n        ipt: 12.60,\n        // Complete SOAP response fields\n        schemaID: 683,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Standard',\n        typePackageName: 'Standard Package',\n        isAnnual: 0,\n        isBestBuy: 1,\n        isBestBuyText: 'Best Value Option',\n        maxDaysPerTrip: 90,\n        coverLevel: 5,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/basic.png',\n        helpFile: 'https://terracotta.example.com/help/12345.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12345.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 1,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 60.00,\n        wbComm: 5.40,\n        agentComm: 7.20\n      },\n      {\n        id: 'soap-12346',\n        name: 'TravelSafe Premium 2024 - Single Trip Travel Insurance',\n        type: 'standard' as const,\n        price: 108.90,\n        coverage: {\n          medical: '€10,000,000', // Cover level 10\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          '24/7 Emergency Assistance',\n          'Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          'Up to 120 days per trip'\n        ],\n        // Real SOAP response data from QuoteID 12346\n        terracottaQuoteId: '12346',\n        schemaName: 'TravelSafe Premium 2024',\n        policyTypeName: 'Single Trip Travel Insurance',\n        typePolicyName: 'Single Trip Travel Insurance',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/12346.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/12346.pdf',\n        currency: 'EUR',\n        ipt: 18.90,\n        // Complete SOAP response fields\n        schemaID: 717,\n        destinationCategory: 'Europe',\n        tripType: formData.tripType,\n        residenceName: 'Greece',\n        destinationName: 'Europe',\n        packageName: 'TravelSafe Premium',\n        typePackageName: 'Premium Package',\n        isAnnual: 0,\n        isBestBuy: 0,\n        isBestBuyText: '',\n        maxDaysPerTrip: 120,\n        coverLevel: 10,\n        discount: 0.00,\n        iconURL: 'https://terracotta.example.com/icons/premium.png',\n        helpFile: 'https://terracotta.example.com/help/12346.html',\n        policytypeShortName: 'Single Trip',\n        // Additional SOAP fields\n        keyFactsUrl: 'https://terracotta.example.com/keyfacts/12346.pdf',\n        policyTypeID: 1,\n        destinationID: 2,\n        packageID: 2,\n        screeningPremium: 0.00,\n        ipRate: 21.00,\n        netUW: 90.00,\n        wbComm: 8.10,\n        agentComm: 10.80\n      }\n    ];\n    \n    // Sort by IPT (highest first) and take top 3\n    const sortedByIPT = allSampleQuotes.sort((a, b) => {\n      const iptA = a.ipt || 0;\n      const iptB = b.ipt || 0;\n      return iptB - iptA; // Descending order (highest IPT first)\n    });\n    \n    const top3 = sortedByIPT.slice(0, 3);\n    \n    // Sort the top 3 by price (ascending - least expensive to most expensive)\n    return top3.sort((a, b) => a.price - b.price);\n  };\n\n  // Helper function to calculate coverage levels using real SOAP data\n  const calculateRealCoverageLevels = (result: any, destination: string, tripType: string) => {\n    // Use real data from SOAP response when available, fallback to calculated values\n    const baseMedical = result.coverLevel > 0 ? `€${(result.coverLevel * 1000000).toLocaleString()}` : \n                       tripType === 'annual' ? '€5,000,000' : '€2,000,000';\n    \n    const baseBaggage = '€1,000'; // This would ideally come from SOAP response\n    const baseCancellation = '€2,000'; // This would ideally come from SOAP response\n    \n    // Enhance coverage based on destination category and SOAP data\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n    \n    // Use SOAP cover level if available\n    if (result.coverLevel > 0) {\n      medicalMultiplier = 1; // Use the real cover level from SOAP\n    }\n    \n    return {\n      medical: result.coverLevel > 0 ? baseMedical : \n               `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to generate features using real SOAP data\n  const generateFeaturesFromSOAPData = (result: any, destination: string, tripType: string): string[] => {\n    const baseFeatures = [\n      '24/7 Emergency Assistance',\n      'Medical Coverage',\n      'Trip Cancellation',\n      'Baggage Protection'\n    ];\n    \n    const soapFeatures: string[] = [];\n    const destinationFeatures: string[] = [];\n    \n    // Add features based on SOAP response data\n    if (result.isAnnual === 1) {\n      soapFeatures.push('Annual Multi-Trip Coverage', 'Unlimited Trips', 'Annual Policy Benefits');\n    }\n    \n    if (result.isBestBuy === 1) {\n      soapFeatures.push('Best Buy Policy', result.isBestBuyText || 'Recommended Option');\n    }\n    \n    if (result.maxDaysPerTrip > 0) {\n      soapFeatures.push(`Up to ${result.maxDaysPerTrip} days per trip`);\n    }\n    \n    if (result.discount > 0) {\n      soapFeatures.push(`${result.discount}% Discount Applied`);\n    }\n    \n    // Add destination-specific features\n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    \n    if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    \n    return [...baseFeatures, ...soapFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to calculate coverage levels based on destination and trip type (fallback)\n  const calculateCoverageLevels = (destination: string, tripType: string, price: number) => {\n    const baseMedical = tripType === 'annual' ? '€5,000,000' : tripType === 'longstay' ? '€3,000,000' : '€2,000,000';\n    const baseBaggage = '€1,000';\n    const baseCancellation = '€2,000';\n    \n    // Enhance coverage based on destination category\n    let medicalMultiplier = 1;\n    let baggageMultiplier = 1;\n    let cancellationMultiplier = 1;\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      medicalMultiplier = 2;\n      baggageMultiplier = 1.5;\n      cancellationMultiplier = 2;\n    } else if (destination.toLowerCase().includes('europe')) {\n      medicalMultiplier = 1.5;\n      baggageMultiplier = 1.2;\n      cancellationMultiplier = 1.5;\n    }\n    \n    // Enhance based on price level\n    if (price > 200) {\n      medicalMultiplier *= 2;\n      baggageMultiplier *= 2;\n      cancellationMultiplier *= 2;\n    } else if (price > 100) {\n      medicalMultiplier *= 1.5;\n      baggageMultiplier *= 1.5;\n      cancellationMultiplier *= 1.5;\n    }\n    \n    return {\n      medical: `€${(parseInt(baseMedical.replace(/[€,]/g, '')) * medicalMultiplier).toLocaleString()}`,\n      baggage: `€${(parseInt(baseBaggage.replace(/[€,]/g, '')) * baggageMultiplier).toLocaleString()}`,\n      cancellation: `€${(parseInt(baseCancellation.replace(/[€,]/g, '')) * cancellationMultiplier).toLocaleString()}`,\n      activities: generateActivitiesForDestination(destination)\n    };\n  };\n\n  // Helper function to determine quote type based on price and index\n  const determineQuoteType = (price: number, index: number): 'basic' | 'standard' | 'premium' => {\n    if (price < 50) return 'basic';\n    if (price < 150) return 'standard';\n    return 'premium';\n  };\n\n  // Helper function to generate features based on destination and trip type\n  const generateFeaturesForDestination = (destination: string, tripType: string): string[] => {\n    const baseFeatures = [\n      '24/7 Emergency Assistance',\n      'Medical Coverage',\n      'Trip Cancellation',\n      'Baggage Protection'\n    ];\n    \n    const destinationFeatures: string[] = [];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      destinationFeatures.push('Worldwide Medical Coverage', 'Emergency Repatriation', 'High-Risk Activity Coverage');\n    } else if (destination.toLowerCase().includes('europe')) {\n      destinationFeatures.push('EU Medical Card Coverage', 'Schengen Zone Protection');\n    }\n    \n    if (tripType === 'annual') {\n      destinationFeatures.push('Multiple Trip Coverage', 'Annual Policy Benefits', 'Unlimited Trips');\n    } else if (tripType === 'longstay') {\n      destinationFeatures.push('Extended Stay Coverage', 'Long Term Medical', 'Extended Baggage Protection', 'Long Stay Benefits');\n    } else if (tripType === 'comprehensive') {\n      destinationFeatures.push('Enhanced Coverage', 'Adventure Sports', 'Winter Sports', 'Business Travel');\n    }\n    \n    return [...baseFeatures, ...destinationFeatures];\n  };\n\n  // Helper function to generate activities based on destination\n  const generateActivitiesForDestination = (destination: string): string[] => {\n    const baseActivities = ['Standard activities'];\n    \n    if (destination.toLowerCase().includes('worldwide') || destination.toLowerCase().includes('america')) {\n      return ['Standard activities', 'Adventure sports', 'Extreme sports', 'Water sports', 'Winter sports'];\n    } else if (destination.toLowerCase().includes('europe')) {\n      return ['Standard activities', 'Adventure sports', 'Winter sports'];\n    }\n    \n    return baseActivities;\n  };\n\n  // Enhanced mock quote generation that simulates Terracotta-style data\n  const generateEnhancedMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    // Generate multiple mock quotes based on available schemas\n    const mockQuotes: QuoteOption[] = [];\n    \n    // Create quotes for each available schema if we have them, otherwise use defaults\n    const schemasToUse = availableProducts.length > 0 ? availableProducts : [\n      { SchemaID: 683, SchemaName: 'TravelSafe Basic' },\n      { SchemaID: 717, SchemaName: 'TravelSafe Premium' }\n    ];\n\n    schemasToUse.forEach((schema, index) => {\n      const price = Math.round((basePrice + (days * dailyRate) + (index * 30)) * formData.numberOfTravelers * tripMultiplier);\n      const coverage = calculateCoverageLevels(formData.destination, formData.tripType, price);\n      const features = generateFeaturesForDestination(formData.destination, formData.tripType);\n      const quoteType = determineQuoteType(price, index);\n\n      mockQuotes.push({\n        id: `mock-${schema.SchemaID}-${index}`,\n        name: `${schema.SchemaName} - ${formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip'}`,\n        type: quoteType,\n        price: price,\n        coverage: coverage,\n        features: features,\n        // Terracotta specific fields (mock)\n        terracottaQuoteId: `mock-${schema.SchemaID}-${Date.now()}`,\n        schemaName: schema.SchemaName,\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/mock.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/mock.pdf',\n        currency: 'EUR',\n        ipt: Math.round(price * 0.21), // 21% IPT\n        // Additional metadata\n        schemaID: schema.SchemaID,\n        destinationCategory: formData.destination,\n        tripType: formData.tripType\n      });\n    });\n\n    return mockQuotes;\n  };\n\n  // Legacy mock quotes (kept for backward compatibility)\n  const generateLegacyMockQuoteOptions = (): QuoteOption[] => {\n    const days = formData.startDate && formData.endDate \n      ? Math.ceil((new Date(formData.endDate).getTime() - new Date(formData.startDate).getTime()) / (1000 * 3600 * 24))\n      : 7;\n\n    let basePrice = formData.tripType === 'annual' ? 99 : formData.tripType === 'longstay' ? 60 : 40;\n    const dailyRate = formData.tripType === 'annual' ? 0 : formData.tripType === 'longstay' ? 3 : 5;\n    const tripMultiplier = formData.tripType === 'comprehensive' ? 1.5 : formData.tripType === 'longstay' ? 1.2 : 1;\n\n    const options: QuoteOption[] = [\n      {\n        id: 'terracotta-basic',\n        name: 'Terracotta TravelSafe Basic',\n        type: 'basic',\n        price: Math.round((basePrice + (days * dailyRate)) * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€5,000,000' : '€2,000,000',\n          baggage: '€1,000',\n          cancellation: '€2,000',\n          activities: ['Standard activities']\n        },\n        features: [\n          'Emergency Medical Coverage',\n          'Trip Cancellation',\n          'Baggage Protection',\n          '24/7 Assistance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-001`,\n        schemaName: 'TravelSafe Basic',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/basic.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/basic.pdf',\n        currency: 'EUR',\n        ipt: 15.50\n      },\n      {\n        id: 'terracotta-standard',\n        name: 'Terracotta TravelSafe Standard',\n        type: 'standard',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.3 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€5,000,000',\n          baggage: '€2,500',\n          cancellation: '€5,000',\n          activities: ['Standard activities', 'Adventure sports']\n        },\n        features: [\n          'Enhanced Medical Coverage',\n          'Trip Cancellation & Curtailment',\n          'Enhanced Baggage Protection',\n          'Adventure Sports Coverage',\n          '24/7 Assistance',\n          'Travel Delay Compensation'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-002`,\n        schemaName: 'TravelSafe Standard',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/standard.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/standard.pdf',\n        currency: 'EUR',\n        ipt: 22.75\n      },\n      {\n        id: 'terracotta-premium',\n        name: 'Terracotta TravelSafe Premium',\n        type: 'premium',\n        price: Math.round((basePrice + (days * dailyRate)) * 1.8 * formData.numberOfTravelers * tripMultiplier),\n        coverage: {\n          medical: formData.tripType === 'annual' ? '€10,000,000' : '€10,000,000',\n          baggage: '€5,000',\n          cancellation: '€10,000',\n          activities: ['All activities', 'Extreme sports', 'Winter sports']\n        },\n        features: [\n          'Maximum Medical Coverage',\n          'Comprehensive Trip Protection',\n          'Premium Baggage Coverage',\n          'All Sports & Activities',\n          '24/7 VIP Assistance',\n          'Travel Delay & Missed Connections',\n          'Personal Liability Coverage',\n          'Emergency Cash Advance'\n        ],\n        // Terracotta-specific fields (simulated)\n        terracottaQuoteId: `TC-${Date.now()}-003`,\n        schemaName: 'TravelSafe Premium',\n        policyTypeName: formData.tripType === 'annual' ? 'Annual Multi-Trip' : 'Single Trip',\n        summaryOfCoverUrl: 'https://terracotta.example.com/summary/premium.pdf',\n        policyWordingUrl: 'https://terracotta.example.com/wording/premium.pdf',\n        currency: 'EUR',\n        ipt: 35.00\n      }\n    ];\n\n    return options;\n  };\n\n  // Custom Date Picker Component\n  const CustomDatePicker: React.FC<{\n    id: string;\n    value: string;\n    onChange: (value: string) => void;\n    placeholder: string;\n    required?: boolean;\n    minDate?: string; // ISO date string for minimum selectable date\n  }> = ({ id, value, onChange, placeholder, required, minDate }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [currentDate, setCurrentDate] = useState(() => {\n      // Initialize with selected date if available, otherwise current date\n      return value ? new Date(value) : new Date();\n    });\n    const pickerRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (pickerRef.current && !pickerRef.current.contains(event.target as Node)) {\n          setIsOpen(false);\n        }\n      };\n\n      if (isOpen) {\n        document.addEventListener('mousedown', handleClickOutside);\n      }\n\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [isOpen]);\n\n    // Update current date when value changes to show the correct month\n    useEffect(() => {\n      if (value) {\n        setCurrentDate(new Date(value));\n      }\n    }, [value]);\n\n    // Helper function to check if a date is valid (not in past and not before minDate)\n    const isDateValid = (date: Date): boolean => {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Reset time to start of day for accurate comparison\n      \n      // Reset the input date to start of day for accurate comparison\n      const inputDate = new Date(date);\n      inputDate.setHours(0, 0, 0, 0);\n      \n      // Check if date is in the past\n      if (inputDate < today) {\n        return false;\n      }\n      \n      // Check if date is before minimum date\n      if (minDate) {\n        const minDateObj = new Date(minDate);\n        minDateObj.setHours(0, 0, 0, 0);\n        if (inputDate < minDateObj) {\n          return false;\n        }\n      }\n      \n      return true;\n    };\n\n    const generateCalendar = () => {\n      const year = currentDate.getFullYear();\n      const month = currentDate.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const daysInMonth = lastDay.getDate();\n      const startingDayOfWeek = firstDay.getDay();\n\n      const days = [];\n      \n      // Add empty cells for days before the first day of the month\n      for (let i = 0; i < startingDayOfWeek; i++) {\n        days.push(<div key={`empty-${i}`} className=\"calendar-day empty\"></div>);\n      }\n\n      // Add days of the month\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = new Date(year, month, day);\n        // Create ISO string manually to avoid timezone issues\n        const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        const isSelected = value === dateString;\n        const isToday = new Date().toDateString() === date.toDateString();\n        const isValid = isDateValid(date);\n\n        days.push(\n          <div\n            key={day}\n            className={`calendar-day ${isSelected ? 'selected' : ''} ${isToday ? 'today' : ''} ${!isValid ? 'disabled' : ''}`}\n            onClick={() => {\n              if (isValid) {\n                onChange(dateString);\n                setIsOpen(false);\n              }\n            }}\n            style={{\n              cursor: isValid ? 'pointer' : 'not-allowed',\n              opacity: isValid ? 1 : 0.4\n            }}\n          >\n            {day}\n          </div>\n        );\n      }\n\n      return days;\n    };\n\n    const navigateMonth = (direction: number) => {\n      setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + direction, 1));\n    };\n\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    return (\n      <div className=\"custom-date-picker\" ref={pickerRef}>\n        <div className=\"date-input-wrapper\">\n          <input\n            type=\"text\"\n            id={id}\n            value={value ? formatDateToEuropean(value) : ''}\n            onChange={(e) => {\n              const formattedValue = formatDateInput(e.target.value);\n              const isoDate = formattedValue.length === 10 ? convertToISO(formattedValue) : '';\n              \n              // Validate that the date is valid (not in past and not before minDate)\n              if (isoDate) {\n                const inputDate = new Date(isoDate);\n                if (!isDateValid(inputDate)) {\n                  // Don't update the value if it's an invalid date\n                  return;\n                }\n              }\n              \n              onChange(isoDate);\n            }}\n            placeholder={placeholder}\n            title={minDate ? \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates and dates before start date are not allowed\" : \n              \"Enter date (DD/MM/YYYY) or click calendar - past dates are not allowed\"\n            }\n            pattern=\"\\d{2}/\\d{2}/\\d{4}\"\n            maxLength={10}\n            required={required}\n          />\n          <span \n            className=\"date-icon clickable\" \n            onClick={() => setIsOpen(!isOpen)}\n            title=\"Open calendar\"\n          >\n            📅\n          </span>\n        </div>\n        \n        {isOpen && (\n          <div className=\"calendar-popup\">\n            <div className=\"calendar-header\">\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(-1)}\n              >\n                ‹\n              </button>\n              <span className=\"calendar-month-year\">\n                {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\n              </span>\n              <button \n                type=\"button\" \n                className=\"calendar-nav-btn\" \n                onClick={() => navigateMonth(1)}\n              >\n                ›\n              </button>\n            </div>\n            <div className=\"calendar-weekdays\">\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                <div key={day} className=\"calendar-weekday\">{day}</div>\n              ))}\n            </div>\n            <div className=\"calendar-days\">\n              {generateCalendar()}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleInputChange = (field: string, value: string | number) => {\n    setFormData(prev => {\n      const newData = {\n        ...prev,\n        [field]: value\n      };\n      \n      // If start date is changed, clear end date if it's now invalid\n      if (field === 'startDate' && value && prev.endDate) {\n        const startDate = new Date(value as string);\n        const endDate = new Date(prev.endDate);\n        startDate.setDate(startDate.getDate() + 1); // Add 1 day to start date\n        \n        // If end date is before or equal to start date, clear it\n        if (endDate <= startDate) {\n          newData.endDate = '';\n        }\n      }\n      \n      return newData;\n    });\n  };\n\n  const handleTravelerChange = (index: number, field: keyof TravelerInfo, value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      travelers: prev.travelers.map((traveler, i) => \n        i === index ? { ...traveler, [field]: value } : traveler\n      )\n    }));\n  };\n\n  const handleNumberOfTravelersChange = (count: number) => {\n    setFormData(prev => {\n      const travelers = [...prev.travelers];\n      \n      if (count > travelers.length) {\n        // Add new travelers\n        for (let i = travelers.length; i < count; i++) {\n          travelers.push({\n            firstName: '',\n            lastName: '',\n            age: '',\n            email: '',\n            phone: '',\n            vaxId: '',\n            nationality: ''\n          });\n        }\n      } else if (count < travelers.length) {\n        // Remove travelers\n        travelers.splice(count);\n      }\n      \n      return {\n        ...prev,\n        numberOfTravelers: count,\n        travelers\n      };\n    });\n  };\n\n  const handleBillingAddressChange = (field: keyof QuoteFormData['billingAddress'], value: string) => {\n    setFormData(prev => ({\n      ...prev,\n      billingAddress: {\n        ...prev.billingAddress,\n        [field]: value\n      }\n    }));\n  };\n\n  // Helper function to convert DD/MM/YYYY to YYYY-MM-DD for internal storage\n  const convertToISO = (ddmmyyyy: string): string => {\n    if (!ddmmyyyy || ddmmyyyy.length !== 10) return '';\n    const [day, month, year] = ddmmyyyy.split('/');\n    // Create date in local timezone to avoid timezone issues\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n    return date.toISOString().split('T')[0];\n  };\n\n  // Helper function to format input as DD/MM/YYYY\n  const formatDateInput = (value: string): string => {\n    // Remove all non-digits\n    const digits = value.replace(/\\D/g, '');\n    \n    // Format as DD/MM/YYYY\n    if (digits.length >= 8) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4, 8)}`;\n    } else if (digits.length >= 4) {\n      return `${digits.slice(0, 2)}/${digits.slice(2, 4)}/${digits.slice(4)}`;\n    } else if (digits.length >= 2) {\n      return `${digits.slice(0, 2)}/${digits.slice(2)}`;\n    }\n    return digits;\n  };\n\n  const fetchGeneralConditions = async () => {\n    if (formData.selectedQuote?.terracottaQuoteId) {\n      try {\n        console.log('🔄 Fetching general conditions (screening questions) for QuoteID:', formData.selectedQuote.terracottaQuoteId);\n        const screeningResponse = await terracottaService.getScreeningQuestions(formData.selectedQuote.terracottaQuoteId);\n        console.log('📥 General Conditions Response:', screeningResponse);\n        \n        if (screeningResponse.screeningQuestions && screeningResponse.screeningQuestions.length > 0) {\n          setGeneralConditionsData(screeningResponse.screeningQuestions);\n          console.log('✅ General conditions loaded from API:', screeningResponse.screeningQuestions);\n          setShowGeneralConditions(true);\n        } else {\n          console.warn('⚠️ No general conditions in API response');\n          setGeneralConditionsData([]);\n          setShowGeneralConditions(true);\n        }\n      } catch (error) {\n        console.error('❌ Error fetching general conditions:', error);\n        // Show empty popup on error\n        setGeneralConditionsData([]);\n        setShowGeneralConditions(true);\n      }\n    }\n  };\n\n  const handleTermsAcceptance = (checked: boolean) => {\n    setTermsAccepted(checked);\n    \n    if (checked && screeningQuestions.length > 0) {\n      // When checkbox is checked, automatically answer \"yes\" to all screening questions (yesAction)\n      const allYesAnswers: {[key: number]: 'yes'} = {};\n      screeningQuestions.forEach((question) => {\n        allYesAnswers[question.questionNumber] = 'yes';\n      });\n      setScreeningAnswers(allYesAnswers);\n      console.log('✅ Terms accepted - All screening questions answered as \"Yes\" (yesAction triggered)');\n    } else if (!checked) {\n      // When unchecked, clear the screening answers\n      setScreeningAnswers({});\n      console.log('❌ Terms not accepted - Screening answers cleared');\n    }\n  };\n\n  const nextPhase = async () => {\n    if (currentPhase === 1) {\n      // Generate quotes when moving from phase 1 to 2\n      try {\n        console.log('🔄 Moving from Phase 1 to Phase 2 - Fetching quotes...');\n        console.log('📋 Current Form Data:', JSON.stringify(formData, null, 2));\n        \n        const options = await generateQuoteOptions();\n        \n        console.log('✅ Quote options received:', options);\n        console.log('📊 Number of quotes:', options.length);\n        \n        setQuoteOptions(options);\n        \n        // Automatically pre-select the Essential plan\n        const essentialPlan = options.find(option => \n          option.name?.toLowerCase().includes('essential') || \n          option.policytypeName?.toLowerCase().includes('essential')\n        );\n        if (essentialPlan) {\n          console.log('✅ Auto-selected Essential plan:', essentialPlan);\n          setFormData(prev => ({\n            ...prev,\n            selectedQuote: essentialPlan\n          }));\n        } else {\n          console.log('⚠️ No Essential plan found, selecting first available quote');\n          if (options.length > 0) {\n            setFormData(prev => ({\n              ...prev,\n              selectedQuote: options[0]\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('❌ CRITICAL ERROR generating quotes:', error);\n        console.error('Error details:', error instanceof Error ? error.message : String(error));\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\n        setQuoteError('Failed to generate quotes. Please try again.');\n        return; // Don't proceed to next phase if quotes failed\n      }\n    }\n    \n    if (currentPhase < 6) {\n      setCurrentPhase((prev) => (prev + 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const prevPhase = () => {\n    if (currentPhase > 1) {\n      setCurrentPhase((prev) => (prev - 1) as WizardPhase);\n      window.scrollTo(0, 0);\n    }\n  };\n\n  const selectQuote = (quote: QuoteOption) => {\n    setFormData(prev => ({\n      ...prev,\n      selectedQuote: quote\n    }));\n  };\n\n  const addAdditionalPolicy = async (policy: AdditionalPolicy) => {\n    // Prevent multiple simultaneous requests\n    if (processingAddonId) {\n      return;\n    }\n    \n    try {\n      setProcessingAddonId(policy.id);\n      \n      // Check if quoteID is available\n      if (!formData.selectedQuote?.terracottaQuoteId) {\n        alert('Error: No quote selected. Please select a quote first.');\n        return;\n      }\n\n      // Build comma-separated list of alteration IDs (existing + new one)\n      const existingAlterationIds = formData.additionalPolicies.map(p => p.alterationId);\n      const allAlterationIds = [...existingAlterationIds, policy.alterationId].join(',');\n      \n      // Convert travelers to Terracotta format\n      const travelers: TerracottaTraveler[] = formData.travelers.map((traveler, index) => {\n        const age = traveler.dateOfBirth ? \n          calculateAgeFromDOB(traveler.dateOfBirth) : \n          parseInt(traveler.age) || 25;\n        \n        const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n        \n        return {\n          TravellerNumber: index + 1,\n          Title: traveler.title || 'Mr',\n          FirstName: traveler.firstName || 'Customer',\n          LastName: traveler.lastName || 'Name',\n          DateOfBirth: formatDateForTerracotta(dateOfBirth),\n          Age: age,\n          TitleID: getTitleID(traveler.title || 'Mr'),\n          AlterationID: '' // Empty for individual traveler alterations\n        };\n      });\n      \n      // Build contact details\n      const contactDetails: TerracottaContactDetails = {\n        Address: formData.billingAddress?.street || '123 Main Street',\n        Postcode: formData.billingAddress?.postalCode || '12345',\n        Email: formData.travelers[0]?.email || 'customer@example.com',\n        Telephone: formData.travelers[0]?.phone || '+302101234567'\n      };\n      \n      // Build SOAP request\n      const alterationsRequest: TerracottaQuoteWithAlterationsRequest = {\n        userID: '4072',\n        userCode: '111427',\n        quoteID: formData.selectedQuote.terracottaQuoteId,\n        specificQuoteDetails: {\n          AlterationID: allAlterationIds,\n          Travellers: travelers,\n          ContactDetails: contactDetails\n        }\n      };\n      \n      // Call SOAP service\n      const response: TerracottaQuoteResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n      \n      // Extract the updated price from the response\n      if (response.quoteResults && response.quoteResults.length > 0) {\n        const updatedQuote = response.quoteResults[0];\n        const newGrossPrice = updatedQuote.GrossPrice;\n        \n        // Store the total GrossPrice (this is the complete price including base + all addons)\n        setTotalGrossPriceWithAddons(newGrossPrice);\n        \n        // Add the policy to state (price will be calculated from total)\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      } else {\n        // Still add the addon but with 0 price\n        setFormData(prev => ({\n          ...prev,\n          additionalPolicies: [...prev.additionalPolicies, policy]\n        }));\n      }\n      \n    } catch (error) {\n      console.error('Error adding addon with alterations:', error);\n      alert(`Error adding addon: ${error instanceof Error ? error.message : 'Unknown error'}. Please try again.`);\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n  \n  // Helper functions for date/age calculations\n  const calculateAgeFromDOB = (dob: string): number => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return Math.max(0, age);\n  };\n  \n  const calculateDOBFromAge = (age: number): string => {\n    const currentYear = new Date().getFullYear();\n    const birthYear = currentYear - age;\n    return `${birthYear}/05/20`; // Use May 20 as default date\n  };\n  \n  const formatDateForTerracotta = (dateString: string): string => {\n    if (!dateString) return '';\n    // Handle different formats\n    if (dateString.includes('/')) {\n      const parts = dateString.split('/');\n      if (parts.length === 3 && parts[0].length === 4) {\n        return dateString; // Already in YYYY/MM/DD format\n      } else if (parts.length === 3) {\n        // Convert DD/MM/YYYY to YYYY/MM/DD\n        return `${parts[2]}/${parts[1]}/${parts[0]}`;\n      }\n    }\n    if (dateString.includes('-')) {\n      return dateString.replace(/-/g, '/');\n    }\n    return dateString;\n  };\n  \n  const getTitleID = (title: string): number => {\n    const titleMap: { [key: string]: number } = {\n      'Mr': 1, 'Mrs': 2, 'Miss': 3, 'Ms': 4, 'Dr': 5, 'Prof': 6\n    };\n    return titleMap[title] || 1;\n  };\n\n  const removeAdditionalPolicy = async (policyId: string) => {\n    try {\n      setProcessingAddonId(policyId);\n      \n      // Remove the addon from the list first\n      const remainingAddons = formData.additionalPolicies.filter(p => p.id !== policyId);\n      \n      setFormData(prev => ({\n        ...prev,\n        additionalPolicies: remainingAddons\n      }));\n      \n      // If no addons remaining, reset to base price\n      if (remainingAddons.length === 0) {\n        setTotalGrossPriceWithAddons(null);\n        setProcessingAddonId(null);\n        return;\n      }\n      \n      // If there are still addons, call SOAP to get updated price\n      if (formData.selectedQuote?.terracottaQuoteId) {\n        // Build comma-separated list of remaining alteration IDs\n        const remainingAlterationIds = remainingAddons.map(p => p.alterationId).join(',');\n        \n        // Convert travelers to Terracotta format\n        const travelers: TerracottaTraveler[] = formData.travelers.map((traveler, index) => {\n          const age = traveler.dateOfBirth ? \n            calculateAgeFromDOB(traveler.dateOfBirth) : \n            parseInt(traveler.age) || 25;\n          \n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          \n          return {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || 'Customer',\n            LastName: traveler.lastName || 'Name',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            AlterationID: ''\n          };\n        });\n        \n        // Build contact details\n        const contactDetails: TerracottaContactDetails = {\n          Address: formData.billingAddress?.street || '123 Main Street',\n          Postcode: formData.billingAddress?.postalCode || '12345',\n          Email: formData.travelers[0]?.email || 'customer@example.com',\n          Telephone: formData.travelers[0]?.phone || '+302101234567'\n        };\n        \n        // Build SOAP request\n        const alterationsRequest: TerracottaQuoteWithAlterationsRequest = {\n          userID: '4072',\n          userCode: '111427',\n          quoteID: formData.selectedQuote.terracottaQuoteId,\n          specificQuoteDetails: {\n            AlterationID: remainingAlterationIds,\n            Travellers: travelers,\n            ContactDetails: contactDetails\n          }\n        };\n        \n        // Call SOAP service\n        const response: TerracottaQuoteResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequest);\n        \n        // Update the GrossPrice\n        if (response.quoteResults && response.quoteResults.length > 0) {\n          const updatedQuote = response.quoteResults[0];\n          const newGrossPrice = updatedQuote.GrossPrice;\n          setTotalGrossPriceWithAddons(newGrossPrice);\n        }\n      }\n    } catch (error) {\n      console.error('Error updating price after addon removal:', error);\n      // Keep the addon removed even if SOAP call fails\n    } finally {\n      setProcessingAddonId(null);\n    }\n  };\n\n  const calculateTotalPrice = (): number => {\n    // If we have a GrossPrice from SOAP alterations, use that\n    if (totalGrossPriceWithAddons !== null && formData.additionalPolicies.length > 0) {\n      return totalGrossPriceWithAddons;\n    }\n    \n    // Otherwise, use the base price + individual addon prices (fallback)\n    const basePrice = typeof formData.selectedQuote?.price === 'number' \n      ? formData.selectedQuote.price \n      : parseFloat(formData.selectedQuote?.price || '0');\n    const additionalPrice = formData.additionalPolicies.reduce((sum, policy) => sum + policy.price, 0);\n    return basePrice + additionalPrice;\n  };\n\n  const generatePolicyPDF = async () => {\n    if (!policyNumber) {\n      console.error('⚠️ Cannot generate PDF: No policy number available');\n      alert('Policy number not available. Please contact support.');\n      return;\n    }\n    console.log('📄 Generating PDF for Policy ID:', policyNumber);\n    await generatePDF(formData, calculateTotalPrice, formatDateToEuropean, policyNumber);\n  };\n\n  const downloadPolicyPDF = () => {\n    generatePolicyPDF();\n  };\n\n  const processPayment = async () => {\n    // Validate that terms are accepted before processing payment\n    if (!termsAccepted) {\n      alert('Please accept the Privacy Policy, Terms and Conditions and General conditions to proceed with payment.');\n      return;\n    }\n\n    // Validate email address for policy holder (Traveler 1)\n    const policyHolderEmail = formData.travelers[0]?.email;\n    \n    if (!policyHolderEmail || policyHolderEmail.trim() === '') {\n      alert('❌ Policy holder email is required.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) before proceeding with payment.');\n      return;\n    }\n\n    // Email validation regex pattern (RFC 5322 compliant)\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    \n    if (!emailRegex.test(policyHolderEmail.trim())) {\n      alert(`❌ Invalid Email Address\\n\\nThe email address \"${policyHolderEmail}\" is not valid.\\n\\nPlease enter a valid email address for Traveler 1 (Policy Holder) in the format: example@domain.com`);\n      return;\n    }\n\n    // Validate emails for all other travelers if provided\n    for (let i = 0; i < formData.travelers.length; i++) {\n      const traveler = formData.travelers[i];\n      if (traveler.email && traveler.email.trim() !== '') {\n        if (!emailRegex.test(traveler.email.trim())) {\n          alert(`❌ Invalid Email Address\\n\\nThe email address \"${traveler.email}\" for Traveler ${i + 1} (${traveler.firstName} ${traveler.lastName}) is not valid.\\n\\nPlease enter a valid email address in the format: example@domain.com`);\n          return;\n        }\n      }\n    }\n\n    console.log('✅ Email validation passed for all travelers');\n\n    // Validate VAT ID for Greece (Traveler 1/Policy Holder)\n    if (formData.countryOfResidence === 'Greece') {\n      const vatId = formData.travelers[0]?.vaxId;\n      \n      if (!vatId || vatId.trim() === '') {\n        alert('❌ VAT ID Required\\n\\nFor residents of Greece, VAT ID is mandatory for the policy holder.\\n\\nPlease enter the VAT ID for Traveler 1 (Policy Holder) before proceeding with payment.');\n        return;\n      }\n      \n      console.log('✅ VAT ID validation passed for Greece:', vatId);\n    } else {\n      console.log('✅ VAT ID validation skipped (not Greece)');\n    }\n    \n    setIsProcessing(true);\n    \n    try {\n      // First save the quote to database\n      // Add TravellerNumber to each traveler (index + 1)\n      const travelersWithNumber = formData.travelers.map((traveler, index) => ({\n        ...traveler,\n        travellerNumber: index + 1\n      }));\n\n      const quoteData = {\n        destination: formData.destination,\n        countryOfResidence: formData.countryOfResidence,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        tripType: formData.tripType,\n        numberOfTravelers: formData.numberOfTravelers,\n        travelers: travelersWithNumber,\n        selectedQuote: formData.selectedQuote,\n        additionalPolicies: formData.additionalPolicies,\n        totalAmount: calculateTotalPrice()\n      };\n\n      // console.log('Saving quote to database...', quoteData);\n      // console.log('Quote data JSON string:', JSON.stringify(quoteData));\n      const quoteResponse = await createQuote(quoteData);\n      \n      if (quoteResponse.status === 'success' && quoteResponse.data) {\n        const quoteId = quoteResponse.data.quoteId;\n        \n        // Convert screening answers to Terracotta format\n        const terracottaScreeningAnswers = Object.entries(screeningAnswers).map(([questionNumber, answer]) => ({\n          questionNumber: parseInt(questionNumber),\n          answer: answer as 'yes' | 'no'\n        }));\n\n        // Build travelers array and contact details with REAL data from payment step\n        console.log('🔍 DEBUG: formData.travelers at payment time:', JSON.stringify(formData.travelers, null, 2));\n        console.log('🔍 DEBUG: formData.billingAddress at payment time:', JSON.stringify(formData.billingAddress, null, 2));\n        \n        const travelers = formData.travelers.map((traveler, index) => {\n          console.log(`🔍 DEBUG: Processing traveler ${index + 1}:`, {\n            firstName: traveler.firstName,\n            lastName: traveler.lastName,\n            age: traveler.age,\n            dateOfBirth: traveler.dateOfBirth,\n            title: traveler.title,\n            email: traveler.email,\n            phone: traveler.phone\n          });\n          \n          const age = traveler.dateOfBirth ? \n            calculateAgeFromDOB(traveler.dateOfBirth) : \n            parseInt(traveler.age) || 30;\n          \n          const dateOfBirth = traveler.dateOfBirth || calculateDOBFromAge(age);\n          \n          const travelerData = {\n            TravellerNumber: index + 1,\n            Title: traveler.title || 'Mr',\n            FirstName: traveler.firstName || '',\n            LastName: traveler.lastName || '',\n            DateOfBirth: formatDateForTerracotta(dateOfBirth),\n            Age: age,\n            AgebandID: getAgebandID(age),\n            TitleID: getTitleID(traveler.title || 'Mr'),\n            minAge: age,\n            maxAge: age,\n            ScreeningInformation: null\n          };\n          \n          console.log(`✅ Built traveler ${index + 1} data:`, travelerData);\n          return travelerData;\n        });\n        \n        // Build contact details with REAL data from payment step\n        const contactDetails = {\n          Address: `${formData.billingAddress.street}, ${formData.billingAddress.city}, ${formData.billingAddress.country}`,\n          Postcode: formData.billingAddress.postalCode || '',\n          Email: formData.travelers[0]?.email || '',\n          Telephone: formData.travelers[0]?.phone || ''\n        };\n        \n        console.log('✅ Using REAL Travelers:', travelers);\n        console.log('✅ Using REAL Contact Details:', contactDetails);\n\n        // Re-fetch quote with REAL traveler data using ProvideQuotation\n        if (formData.selectedQuote?.terracottaQuoteId) {\n          try {\n            console.log('🔄 Re-fetching quote with REAL traveler data using ProvideQuotation...');\n            \n            // Build quote request with REAL traveler and contact data\n            const quoteRequestWithRealData = {\n              userID: '4072',\n              userCode: '111427',\n              quoteDetails: {\n                ResidenceID: getResidenceID(formData.countryOfResidence),\n                TypePolicyID: getTypePolicyID(formData.tripType, availablePolicyTypes),\n                TypePackageID: '1',\n                Destination: formData.destination || 'Europe',\n                StartDate: formatDateForTerracotta(formData.startDate),\n                EndDate: formatDateForTerracotta(formData.endDate),\n                Travellers: travelers, // REAL traveler data\n                ContactDetails: contactDetails, // REAL contact data\n                includeAnnualQuotes: 0, // Always 0 - TypePolicyID determines if it's annual\n                includeUpsell: 0,\n                currencyID: 1,\n                schemaIDFilter: '717'\n              }\n            };\n            \n            console.log('📤 ProvideQuotation with REAL data:', quoteRequestWithRealData);\n            const updatedQuoteResponse = await terracottaService.provideQuotation(quoteRequestWithRealData);\n            console.log('📥 Updated quote response:', updatedQuoteResponse);\n            \n            // ✅ UPDATE THE QUOTE ID WITH THE NEW ONE THAT HAS REAL DATA\n            if (updatedQuoteResponse.quoteResults && updatedQuoteResponse.quoteResults.length > 0) {\n              const selectedPlan = updatedQuoteResponse.quoteResults.find((q: any) => \n                q.policytypeName === formData.selectedQuote?.name || \n                q.GrossPrice === formData.selectedQuote?.price\n              ) || updatedQuoteResponse.quoteResults[0];\n              \n              if (selectedPlan && selectedPlan.QuoteID) {\n                console.log('🔄 Updating quoteID from', formData.selectedQuote.terracottaQuoteId, 'to', selectedPlan.QuoteID);\n                formData.selectedQuote.terracottaQuoteId = selectedPlan.QuoteID;\n                console.log('✅ Using NEW QuoteID with REAL traveler data:', selectedPlan.QuoteID);\n              }\n            }\n            \n            // If add-ons were selected, re-fetch with alterations using REAL data\n            if (formData.additionalPolicies && formData.additionalPolicies.length > 0) {\n              console.log('🔄 Re-fetching quote with add-ons using ProvideQuotationWithAlterations...');\n              \n              const alterationIds = formData.additionalPolicies.map(p => p.alterationId).join(',');\n              \n              const alterationsRequestWithRealData = {\n                userID: '4072',\n                userCode: '111427',\n                quoteID: formData.selectedQuote.terracottaQuoteId || '',\n                specificQuoteDetails: {\n                  AlterationID: alterationIds,\n                  Travellers: travelers, // REAL traveler data\n                  ContactDetails: contactDetails // REAL contact data\n                }\n              };\n              \n              console.log('📤 ProvideQuotationWithAlterations with REAL data:', alterationsRequestWithRealData);\n              const updatedAlterationsResponse = await terracottaService.provideQuotationWithAlterations(alterationsRequestWithRealData);\n              console.log('📥 Updated alterations response:', updatedAlterationsResponse);\n              \n              // ✅ UPDATE THE QUOTE ID WITH THE NEW ONE FROM ALTERATIONS\n              if (updatedAlterationsResponse.quoteResults && updatedAlterationsResponse.quoteResults.length > 0) {\n                const selectedPlan = updatedAlterationsResponse.quoteResults.find((q: any) => \n                  q.policytypeName === formData.selectedQuote?.name || \n                  q.GrossPrice === formData.selectedQuote?.price\n                ) || updatedAlterationsResponse.quoteResults[0];\n                \n                if (selectedPlan && selectedPlan.QuoteID) {\n                  console.log('🔄 Updating quoteID after alterations from', formData.selectedQuote.terracottaQuoteId, 'to', selectedPlan.QuoteID);\n                  formData.selectedQuote.terracottaQuoteId = selectedPlan.QuoteID;\n                  console.log('✅ Using NEW QuoteID with REAL data + alterations:', selectedPlan.QuoteID);\n                }\n              }\n            }\n          } catch (updateError) {\n            console.warn('⚠️ Could not update quote with real data, continuing with existing quote:', updateError);\n            console.error('⚠️ This may result in policy using dummy data from initial quote request');\n          }\n        }\n\n        // Save policy details with Terracotta\n        if (formData.selectedQuote?.terracottaQuoteId) {\n          try {\n            console.log('💾 ========================================');\n            console.log('💾 Saving policy details with Terracotta...');\n            console.log('💾 ========================================');\n            console.log('📋 QuoteID being used for SavePolicyDetails:', formData.selectedQuote.terracottaQuoteId);\n            console.log('📋 (This should be the NEW quoteID with REAL traveler data, not the original dummy data quoteID)');\n            console.log('📋 Screening Answers:', terracottaScreeningAnswers);\n            console.log('👥 Traveler Data (REAL from Payment Step):', formData.travelers);\n            console.log('🏠 Billing Address (REAL from Payment Step):', formData.billingAddress);\n            \n            // Log each traveler's details clearly\n            console.log('📝 SavePolicyDetails - Travelers being sent:');\n            travelers.forEach((t, idx) => {\n              console.log(`  Traveler ${idx + 1}: ${t.Title} ${t.FirstName} ${t.LastName}, Age: ${t.Age}, DOB: ${t.DateOfBirth}, AgebandID: ${t.AgebandID}, TitleID: ${t.TitleID}`);\n            });\n            console.log('📝 SavePolicyDetails - Contact Details being sent:', contactDetails);\n            \n            const savePolicyResponse = await terracottaService.savePolicyDetails({\n              userID: '4072',\n              userCode: '111427',\n              quoteID: formData.selectedQuote.terracottaQuoteId,\n              screeningQuestionAnswers: terracottaScreeningAnswers,\n              medicalScreeningReference: 'string',\n              useDefaultAnswers: 1,\n              travelers: travelers,\n              contactDetails: contactDetails\n            });\n\n            console.log('✅ SavePolicyDetails response:', savePolicyResponse);\n            console.log('📋 Policy Saved Status:', savePolicyResponse.policySaved);\n            console.log('📋 Policy ID:', savePolicyResponse.policyID);\n            console.log('📄 Certificate URL:', savePolicyResponse.certificate);\n            console.log('📄 Policy Wording URL:', savePolicyResponse.PW);\n            console.log('📄 Summary of Cover URL:', savePolicyResponse.SI);\n\n            // Handle both \"Yes\" and \"true\" formats for policySaved\n            if (savePolicyResponse.policySaved === 'Yes' || savePolicyResponse.policySaved === 'true') {\n              if (!savePolicyResponse.policyID) {\n                console.error('⚠️ Warning: Policy saved but no Policy ID received!');\n                throw new Error('Policy saved but no Policy ID received from Terracotta');\n              }\n              \n              console.log('✅ Policy saved successfully! Policy ID:', savePolicyResponse.policyID);\n              setPolicyNumber(savePolicyResponse.policyID);\n              \n              // Store policy document URLs from SavePolicyDetails response\n              const documents = {\n                certificate: savePolicyResponse.certificate || '',\n                policyWording: savePolicyResponse.PW || '',\n                summaryOfCover: savePolicyResponse.SI || '',\n                keyFacts: savePolicyResponse.KF || '',\n                ipid: savePolicyResponse.IPID || ''\n              };\n              \n              console.log('📄 Setting policy documents:', documents);\n              console.log('📄 SavePolicyDetails full response:', savePolicyResponse);\n              setPolicyDocuments(documents);\n\n              // Email Policy Documents to the policy holder\n              // VALIDATION: Only proceed if we have ALL required parameters\n              try {\n                console.log('📧 Validating parameters for EmailPolicyDocuments...');\n                \n                // Extract required parameters\n                const policyHolderEmail = formData.travelers[0]?.email;\n                const policyID = savePolicyResponse.policyID;\n                const userID = '4072';\n                const userCode = '111427';\n\n                // Validation checks\n                const validationErrors: string[] = [];\n\n                if (!policyID || policyID.trim() === '') {\n                  validationErrors.push('Policy ID is missing or empty');\n                  console.error('❌ VALIDATION FAILED: Policy ID not received from SavePolicyDetails');\n                }\n\n                if (!policyHolderEmail || policyHolderEmail.trim() === '') {\n                  validationErrors.push('Policy holder email address is missing');\n                  console.error('❌ VALIDATION FAILED: No email address for Traveler 1 (Policy Holder)');\n                }\n\n                if (!userID || userID.trim() === '') {\n                  validationErrors.push('User ID is missing');\n                  console.error('❌ VALIDATION FAILED: User ID not configured');\n                }\n\n                if (!userCode || userCode.trim() === '') {\n                  validationErrors.push('User Code is missing');\n                  console.error('❌ VALIDATION FAILED: User Code not configured');\n                }\n\n                // Log validation status\n                if (validationErrors.length > 0) {\n                  console.error('⚠️ EmailPolicyDocuments VALIDATION FAILED:');\n                  validationErrors.forEach((error, index) => {\n                    console.error(`   ${index + 1}. ${error}`);\n                  });\n                  console.error('⚠️ Skipping email sending. Policy is saved but documents will not be emailed automatically.');\n                  \n                  throw new Error(`Cannot send policy documents email: ${validationErrors.join(', ')}`);\n                }\n\n                // All validations passed - log parameters\n                console.log('✅ All parameters validated successfully:');\n                console.log('   📋 User ID:', userID);\n                console.log('   📋 User Code:', userCode);\n                console.log('   📋 Policy ID:', policyID);\n                console.log('   📧 Email Address:', policyHolderEmail);\n                console.log('📧 Proceeding to send EmailPolicyDocuments request...');\n\n                // Send EmailPolicyDocuments request\n                const emailResponse = await terracottaService.emailPolicyDocuments({\n                  userID: userID,\n                  userCode: userCode,\n                  policyID: policyID,\n                  emailAddress: policyHolderEmail\n                });\n\n                console.log('✅ EmailPolicyDocuments response:', emailResponse);\n\n                if (emailResponse.emailSent) {\n                  console.log('✅ Policy documents successfully emailed to:', policyHolderEmail);\n                  alert(`✅ Success! Policy documents have been sent to ${policyHolderEmail}`);\n                } else {\n                  // Log the response but don't show popup to user\n                  console.warn('⚠️ EmailPolicyDocuments response did not explicitly confirm success:', emailResponse.message);\n                  console.warn('⚠️ emailSent value:', emailResponse.emailSent);\n                  // No alert - assume success if no error was thrown\n                }\n              } catch (emailError) {\n                console.error('❌ Error sending policy documents email:', emailError);\n                console.error('⚠️ Continuing with payment process despite email error');\n                \n                // Detailed error logging\n                if (emailError instanceof Error) {\n                  console.error('   Error message:', emailError.message);\n                  console.error('   Error stack:', emailError.stack);\n                }\n                \n                // Don't throw - allow payment process to continue even if email fails\n                alert('Note: There was an issue sending the policy documents email, but your policy has been saved. Please contact support to receive your documents.');\n              }\n              \n              // Debug: Check if documents are empty and log\n              if (!documents.certificate) {\n                console.warn('⚠️ Certificate URL not found in SavePolicyDetails response!');\n                console.warn('💡 This might be normal - certificate may need to be generated separately');\n              }\n              if (!documents.policyWording) {\n                console.warn('⚠️ Policy Wording URL not found in SavePolicyDetails response!');\n              }\n              if (!documents.summaryOfCover) {\n                console.warn('⚠️ Summary of Cover URL not found in SavePolicyDetails response!');\n              }\n              \n              if (!documents.certificate && !documents.policyWording && !documents.summaryOfCover) {\n                console.warn('⚠️ No document URLs received from SavePolicyDetails response!');\n                console.warn('💡 Full SavePolicyDetails response:', JSON.stringify(savePolicyResponse, null, 2));\n              }\n              \n              // Update database with Terracotta Policy ID and status\n              console.log('💾 Updating database with Terracotta Policy ID...');\n              const paymentData = {\n                quoteId: quoteId,\n                paymentMethod: formData.paymentMethod || 'card',\n                cardNumber: formData.cardNumber || '',\n                expiryDate: formData.expiryDate || '',\n                cvv: formData.cvv || '',\n                billingAddress: formData.billingAddress,\n                amount: calculateTotalPrice(),\n                policyNumber: savePolicyResponse.policyID // Include Terracotta Policy ID\n              };\n\n              console.log('💳 Updating quote in database with policy details...');\n              const paymentResponse = await apiProcessPayment(paymentData);\n              \n              if (paymentResponse.status === 'success') {\n                console.log('✅ Database updated successfully with Policy ID:', savePolicyResponse.policyID);\n              } else {\n                console.warn('⚠️ Database update failed, but policy was saved in Terracotta');\n              }\n              \n              setIsProcessing(false);\n              nextPhase(); // Move to documents phase\n              return;\n            } else {\n              console.error('❌ Policy save failed. Message:', savePolicyResponse.Message);\n              throw new Error(savePolicyResponse.Message || 'Failed to save policy with Terracotta');\n            }\n          } catch (terracottaError) {\n            console.error('❌ Terracotta policy save error:', terracottaError);\n            // Fall through to regular payment processing\n          }\n        }\n        \n        // Fallback to regular payment processing if Terracotta fails\n        const paymentData = {\n          quoteId: quoteId,\n          paymentMethod: formData.paymentMethod,\n          cardNumber: formData.cardNumber, // Note: In production, this should be tokenized\n          expiryDate: formData.expiryDate,\n          cvv: formData.cvv,\n          billingAddress: formData.billingAddress,\n          amount: calculateTotalPrice(),\n          policyNumber: policyNumber || undefined // Include Terracotta Policy ID if available\n        };\n\n        console.log('💳 Processing payment with data:', { ...paymentData, cardNumber: '****', cvv: '***' });\n        const paymentResponse = await apiProcessPayment(paymentData);\n        \n        if (paymentResponse.status === 'success') {\n          if (paymentResponse.data?.policyNumber) {\n            setPolicyNumber(paymentResponse.data.policyNumber);\n          }\n          setIsProcessing(false);\n          nextPhase(); // Move to documents phase\n        } else {\n          throw new Error(paymentResponse.message || 'Payment failed');\n        }\n      } else {\n        throw new Error(quoteResponse.message || 'Failed to save quote');\n      }\n    } catch (error) {\n      console.error('Payment processing error:', error);\n      setIsProcessing(false);\n      alert('Payment processing failed. Please try again. Error: ' + (error instanceof Error ? error.message : 'Unknown error'));\n    }\n  };\n\n  const isPhaseValid = (phase: WizardPhase): boolean => {\n    switch (phase) {\n      case 1:\n        return !!(\n          formData.destination &&\n          formData.startDate &&\n          formData.endDate &&\n          formData.tripType &&\n          formData.countryOfResidence\n        );\n      case 2:\n        return !!formData.selectedQuote;\n      case 3:\n        return true; // Additional policies phase is always valid (optional)\n      case 4:\n        return true; // Review phase is always valid\n      case 5:\n        // Validate all travelers have basic info\n        const travelersBasicValid: boolean = formData.travelers.every(t => \n          !!(t.firstName && t.lastName && (t.age || t.dateOfBirth))\n        );\n        // Validate first traveler (policy holder) has contact details\n        const policyHolderContactValid: boolean = !!(\n          formData.travelers.length > 0 && \n          formData.travelers[0].email && \n          formData.travelers[0].phone\n        );\n        const paymentValid: boolean = !!(\n          formData.cardNumber && \n          formData.expiryDate && \n          formData.cvv && \n          formData.billingAddress.street && \n          formData.billingAddress.city && \n          formData.billingAddress.postalCode && \n          formData.billingAddress.country\n        );\n        return travelersBasicValid && policyHolderContactValid && paymentValid;\n      case 6:\n        return true; // Documents phase is always valid\n      default:\n        return false;\n    }\n  };\n\n  const renderPhase1 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Trip Details</h2>\n      \n      <div className=\"form-section\">\n        <h3>Trip Details</h3>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"tripType\">\n            Trip Type \n            <span style={{ fontSize: '0.8em', color: '#666', marginLeft: '5px' }}>\n              {isLoadingPolicyTypeDestinations ? '(Loading...)' : `(${availablePolicyTypes.length} types available)`}\n            </span>\n          </label>\n          <select\n            id=\"tripType\"\n            value={formData.tripType}\n            onChange={(e) => handleInputChange('tripType', e.target.value)}\n            required\n            disabled={isLoadingPolicyTypeDestinations}\n          >\n            <option value=\"\">\n              {isLoadingPolicyTypeDestinations ? 'Loading trip types...' : 'Select trip type'}\n            </option>\n            {availablePolicyTypes.map((policyType) => {\n              // Map policy type names to trip type values\n              let tripTypeValue = 'single';\n              const name = policyType.TypePolicyName.toLowerCase();\n              if (name.includes('annual')) {\n                tripTypeValue = 'annual';\n              } else if (name.includes('comprehensive')) {\n                tripTypeValue = 'comprehensive';\n              } else if (name.includes('longstay') || name.includes('long stay')) {\n                tripTypeValue = 'longstay';\n              }\n              \n              return (\n                <option key={policyType.TypePolicyID} value={tripTypeValue}>\n                  {policyType.TypePolicyName}\n                </option>\n              );\n            })}\n            {/* Fallback options if no policy types loaded */}\n            {!isLoadingPolicyTypeDestinations && availablePolicyTypes.length === 0 && (\n              <>\n                <option value=\"single\">Regular Single Trip Insurance</option>\n                <option value=\"annual\">Annual Multi-Trip Travel Insurance</option>\n                <option value=\"comprehensive\">Comprehensive Single Trip Insurance</option>\n                <option value=\"longstay\">Long Stay Travel Insurance</option>\n              </>\n            )}\n          </select>\n        </div>\n        \n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"countryOfResidence\">Country of Residence</label>\n            <select\n              id=\"countryOfResidence\"\n              value={formData.countryOfResidence}\n              onChange={(e) => handleInputChange('countryOfResidence', e.target.value)}\n              required\n              disabled={isLoadingCountriesOfResidence}\n            >\n              <option value=\"\">\n                {isLoadingCountriesOfResidence ? 'Loading countries...' : 'Select your country of residence'}\n              </option>\n              {countriesOfResidence.map((country) => (\n                <option key={country.country_id} value={country.country_name}>\n                  {country.country_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"destination\">\n              Destination Category \n              <span \n                className=\"help-icon\" \n                onClick={() => setShowHelpPopup(true)}\n                title=\"Click to see all countries by category\"\n              >\n                (?)\n              </span>\n            </label>\n            <select\n              id=\"destination\"\n              value={formData.destination}\n              onChange={(e) => handleInputChange('destination', e.target.value)}\n              required\n              disabled={isLoadingCategories}\n            >\n              <option value=\"\">\n                {isLoadingCategories ? 'Loading categories...' : 'Select destination category'}\n              </option>\n              {destinationCategories.map((category) => (\n                <option key={category} value={category}>\n                  {category}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"startDate\">Departure Date <span className=\"date-format-hint\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"startDate\"\n              value={formData.startDate}\n              onChange={(value) => handleInputChange('startDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"endDate\">Return Date <span className=\"date-format-hint\">(DD/MM/YYYY)</span></label>\n            <CustomDatePicker\n              id=\"endDate\"\n              value={formData.endDate}\n              onChange={(value) => handleInputChange('endDate', value)}\n              placeholder=\"DD/MM/YYYY\"\n              required\n              minDate={formData.startDate ? (() => {\n                // Set minimum date to start date + 1 day\n                const startDate = new Date(formData.startDate);\n                startDate.setDate(startDate.getDate() + 1);\n                return startDate.toISOString().split('T')[0];\n              })() : undefined}\n            />\n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"numberOfTravelers\">Number of Travelers</label>\n          <select\n            id=\"numberOfTravelers\"\n            value={formData.numberOfTravelers}\n            onChange={(e) => handleNumberOfTravelersChange(parseInt(e.target.value))}\n          >\n            {[1,2,3,4,5,6,7,8].map(num => (\n              <option key={num} value={num}>{num} Traveler{num > 1 ? 's' : ''}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase2 = () => (\n    <div className=\"wizard-phase\">\n      <div style={{ textAlign: 'center', marginBottom: '40px' }}>\n        <h2 style={{ \n          fontSize: '2.2em', \n          color: '#333',\n          margin: '0 0 10px 0',\n          fontWeight: 'bold',\n          fontFamily: 'sans-serif'\n        }}>\n          Choose Your Insurance Plan\n        </h2>\n        <p style={{ \n          fontSize: '1.1em', \n          color: '#666',\n          margin: '0',\n          fontWeight: '400'\n        }}>\n          Select the coverage that best fits your travel needs.\n        </p>\n      </div>\n      \n      \n      {isLoadingQuotes && (\n        <div className=\"loading-message\">\n          <p>Loading insurance quotes from Terracotta...</p>\n        </div>\n      )}\n      \n      {quoteError && (\n        <div className=\"error-message\">\n          <p>⚠️ {quoteError}</p>\n          <p>Using fallback quotes for demonstration.</p>\n        </div>\n      )}\n      \n      <div className=\"quote-options\" style={{ \n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        gap: '20px',\n        marginTop: '20px',\n        overflowX: 'auto',\n        padding: '20px 0',\n        maxWidth: '100%'\n      }}>\n        {quoteOptions.length > 0 ? quoteOptions.map((option) => (\n          <div \n            key={option.id} \n            className={`quote-option ${formData.selectedQuote?.id === option.id ? 'selected' : ''}`}\n            onClick={() => selectQuote(option)}\n            style={{\n              background: 'white',\n              border: formData.selectedQuote?.id === option.id ? '2px solid #1976d2' : '1px solid #e0e0e0',\n              borderRadius: '8px',\n              padding: '24px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              boxShadow: formData.selectedQuote?.id === option.id \n                ? '0 4px 12px rgba(25, 118, 210, 0.15)'\n                : '0 2px 8px rgba(0,0,0,0.1)',\n              position: 'relative',\n              minWidth: '320px',\n              maxWidth: '320px',\n              flexShrink: 0\n            }}\n            onMouseEnter={(e) => {\n              if (formData.selectedQuote?.id !== option.id) {\n                e.currentTarget.style.boxShadow = '0 4px 16px rgba(0,0,0,0.15)';\n                e.currentTarget.style.borderColor = '#1976d2';\n              }\n            }}\n            onMouseLeave={(e) => {\n              if (formData.selectedQuote?.id !== option.id) {\n                e.currentTarget.style.boxShadow = '0 2px 8px rgba(0,0,0,0.1)';\n                e.currentTarget.style.borderColor = '#e0e0e0';\n              }\n            }}\n          >\n            {/* Plan Header */}\n            <div style={{ marginBottom: '20px' }}>\n              <h3 style={{ \n                margin: '0 0 8px 0', \n                fontSize: '1.3em', \n                color: '#1976d2',\n                fontWeight: 'bold'\n              }}>\n                {option.policytypeName || option.policyTypeName || option.name}\n              </h3>\n              <p style={{ \n                margin: '0 0 12px 0', \n                fontSize: '0.9em', \n                color: '#666'\n              }}>\n                {option.packageName || option.typePackageName}\n              </p>\n              <div style={{ marginBottom: '16px' }}>\n                <div style={{ \n                  fontSize: '2em', \n                  fontWeight: 'bold', \n                  color: '#333',\n                  lineHeight: '1'\n                }}>\n                  {option.currency || '€'}{option.price}\n                </div>\n                <div style={{ \n                  fontSize: '0.9em', \n                  color: '#666',\n                  marginTop: '4px'\n                }}>\n                  per trip\n                </div>\n              </div>\n            </div>\n            \n            {/* Best Buy Text */}\n            {option.isBestBuy === 1 && option.isBestBuyText && (\n              <div style={{ \n                marginBottom: '20px',\n                background: '#e8f5e8',\n                border: '1px solid #4caf50',\n                borderRadius: '6px',\n                padding: '8px',\n                fontSize: '0.85em',\n                color: '#2e7d32',\n                textAlign: 'center',\n                fontWeight: 'bold'\n              }}>\n                ✨ {option.isBestBuyText} ✨\n              </div>\n            )}\n            \n            {/* Summary Covers */}\n            {option.SummaryCovers && option.SummaryCovers.length > 0 && (\n              <div style={{ marginBottom: '20px' }}>\n                <h4 style={{ \n                  fontSize: '1em', \n                  fontWeight: 'bold', \n                  marginBottom: '12px',\n                  color: '#333'\n                }}>Coverage Details</h4>\n                {option.SummaryCovers.map((cover, index) => (\n                  <div key={index} style={{ \n                    marginBottom: '10px',\n                    padding: '8px',\n                    background: '#f8f9fa',\n                    borderRadius: '4px',\n                    fontSize: '0.85em'\n                  }}>\n                    <div style={{ \n                      fontWeight: 'bold', \n                      color: '#1976d2',\n                      marginBottom: '4px'\n                    }}>\n                      {cover.name}\n                    </div>\n                    <div style={{ fontSize: '0.9em' }}>\n                      <span><strong>Limit:</strong> {cover.Limit}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {/* Action Button */}\n            <button \n              style={{\n                width: '100%',\n                padding: '12px',\n                backgroundColor: formData.selectedQuote?.id === option.id ? '#ff6b35' : '#1976d2',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                fontSize: '0.95em',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n                transition: 'background-color 0.3s ease',\n                textTransform: 'uppercase'\n              }}\n              onMouseEnter={(e) => {\n                e.currentTarget.style.backgroundColor = formData.selectedQuote?.id === option.id ? '#e55a2b' : '#1565c0';\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.backgroundColor = formData.selectedQuote?.id === option.id ? '#ff6b35' : '#1976d2';\n              }}\n            >\n              {formData.selectedQuote?.id === option.id ? 'SELECTED' : 'SELECT PLAN'}\n            </button>\n          </div>\n        )) : (\n          <div style={{ \n            gridColumn: '1 / -1', \n            textAlign: 'center', \n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>Loading SOAP quotes...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase3 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Enhance Your Coverage</h2>\n      <p>Add optional coverage for extra protection during your trip.</p>\n      \n      <div className=\"selected-plan-summary\">\n        <div className=\"current-plan\">\n          <h3>Your Selected Plan</h3>\n          {formData.selectedQuote && (\n            <div className=\"plan-info\">\n              <div className=\"plan-name\">{formData.selectedQuote.name}</div>\n              <div className=\"plan-price\">€{formData.selectedQuote.price}</div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"additional-policies\">\n        <h3>Optional Coverage Add-ons</h3>\n        {isLoadingAddons ? (\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>Loading available add-ons...</p>\n          </div>\n        ) : availableAdditionalPolicies.length === 0 ? (\n          <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '40px',\n            color: '#666'\n          }}>\n            <p>No additional coverage options available for this policy type.</p>\n          </div>\n        ) : (\n          <div className=\"policies-grid\">\n            {availableAdditionalPolicies.map(policy => {\n              const isSelected = formData.additionalPolicies.some(p => p.id === policy.id);\n              return (\n                <div key={policy.id} className={`policy-card ${isSelected ? 'selected' : ''}`}>\n                  <div className=\"policy-header\">\n                    <div className=\"policy-icon\">{policy.icon}</div>\n                    <div className=\"policy-info\">\n                      <h4>{policy.name}</h4>\n                      {policy.price > 0 && (\n                        <div className=\"policy-price\">€{policy.price.toFixed(2)}</div>\n                      )}\n                    </div>\n                    <button \n                      className={`policy-btn ${isSelected ? 'remove' : 'add'}`}\n                      onClick={() => isSelected ? removeAdditionalPolicy(policy.id) : addAdditionalPolicy(policy)}\n                      disabled={processingAddonId !== null}\n                    >\n                      {processingAddonId === policy.id ? 'PROCESSING...' : (isSelected ? 'REMOVE' : 'ADD')}\n                    </button>\n                  </div>\n                  <div className=\"policy-description\">\n                    <p>{policy.description}</p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      <div className=\"total-summary-box\">\n        <div className=\"summary-content\">\n          <div className=\"base-plan\">\n            <span>Base Plan: {formData.selectedQuote?.name}</span>\n            <span>€{formData.selectedQuote?.price}</span>\n          </div>\n          {formData.additionalPolicies.map(policy => (\n            <div key={policy.id} className=\"additional-item\">\n              <span>{policy.name}</span>\n              <span>{policy.price > 0 ? `€${policy.price.toFixed(2)}` : 'Included in total'}</span>\n            </div>\n          ))}\n          <div className=\"total-line\">\n            <span className=\"total-label\">Total Premium:</span>\n            <span className=\"total-amount\">€{calculateTotalPrice().toFixed(2)}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderPhase4 = () => {\n    const calculateTripDuration = () => {\n      if (formData.startDate && formData.endDate) {\n        const start = new Date(formData.startDate);\n        const end = new Date(formData.endDate);\n        const days = Math.ceil((end.getTime() - start.getTime()) / (1000 * 3600 * 24));\n        return days;\n      }\n      return 0;\n    };\n\n    return (\n      <div className=\"wizard-phase\">\n        <h2>Review Your Details</h2>\n        <p>Please carefully review all information below. You can go back to make changes if needed.</p>\n        \n        <div className=\"professional-summary\">\n          {/* Trip Overview Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🌍 Trip Overview</h3>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"summary-grid\">\n                <div className=\"summary-row\">\n                  <span className=\"label\">Insurance Type:</span>\n                  <span className=\"value\">{\n                    formData.tripType === 'single' ? 'Single Trip Insurance' :\n                    formData.tripType === 'annual' ? 'Annual Multi-Trip Insurance' :\n                    formData.tripType === 'longstay' ? 'Long Stay Travel Insurance' :\n                    'Comprehensive Single Trip Insurance'\n                  }</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Country of Residence:</span>\n                  <span className=\"value\">{formData.countryOfResidence}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Destination:</span>\n                  <span className=\"value\">{formData.destination}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Departure Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.startDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Return Date:</span>\n                  <span className=\"value\">{formatDateToEuropean(formData.endDate)}</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Trip Duration:</span>\n                  <span className=\"value\">{calculateTripDuration()} days</span>\n                </div>\n                <div className=\"summary-row\">\n                  <span className=\"label\">Number of Travelers:</span>\n                  <span className=\"value\">{formData.numberOfTravelers} {formData.numberOfTravelers === 1 ? 'person' : 'people'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Insurance Plan Card */}\n          <div className=\"summary-card\">\n            <div className=\"card-header\">\n              <h3>🛡️ Selected Insurance Plan</h3>\n            </div>\n            <div className=\"card-content\">\n              {formData.selectedQuote && (\n                <div className=\"plan-summary\">\n                  <div className=\"plan-header\">\n                    <h4>{formData.selectedQuote.name}</h4>\n                    <div className=\"plan-price\">\n                      <span className=\"price-label\">Total Premium:</span>\n                      <span className=\"price-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"coverage-overview\">\n                    <h5 style={{\n                      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                      WebkitBackgroundClip: 'text',\n                      WebkitTextFillColor: 'transparent',\n                      fontSize: '1.5em',\n                      fontWeight: '700',\n                      marginBottom: '20px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '10px'\n                    }}>\n                      <span style={{ fontSize: '1.2em' }}>🛡️</span>\n                      Coverage Limits\n                    </h5>\n                    {formData.selectedQuote.SummaryCovers && formData.selectedQuote.SummaryCovers.length > 0 ? (\n                      <div style={{\n                        display: 'grid',\n                        gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n                        gap: '15px',\n                        marginTop: '15px'\n                      }}>\n                        {formData.selectedQuote.SummaryCovers.map((cover, index) => {\n                          // Determine icon and color based on cover name\n                          const getIconAndColor = (name: string) => {\n                            const lowerName = name.toLowerCase();\n                            if (lowerName.includes('medical') || lowerName.includes('emergency')) \n                              return { icon: '🏥', color: '#e74c3c', bgColor: '#fdeaea' };\n                            if (lowerName.includes('baggage') || lowerName.includes('luggage')) \n                              return { icon: '🧳', color: '#3498db', bgColor: '#eaf2f8' };\n                            if (lowerName.includes('cancellation')) \n                              return { icon: '❌', color: '#e67e22', bgColor: '#fef5e7' };\n                            if (lowerName.includes('delay')) \n                              return { icon: '⏰', color: '#9b59b6', bgColor: '#f4ecf7' };\n                            if (lowerName.includes('personal') && lowerName.includes('liability')) \n                              return { icon: '⚖️', color: '#16a085', bgColor: '#e8f8f5' };\n                            if (lowerName.includes('accident')) \n                              return { icon: '🚑', color: '#c0392b', bgColor: '#fadbd8' };\n                            if (lowerName.includes('legal')) \n                              return { icon: '⚖️', color: '#2c3e50', bgColor: '#ecf0f1' };\n                            if (lowerName.includes('money') || lowerName.includes('cash')) \n                              return { icon: '💰', color: '#f39c12', bgColor: '#fef9e7' };\n                            if (lowerName.includes('passport') || lowerName.includes('document')) \n                              return { icon: '📄', color: '#7f8c8d', bgColor: '#f2f3f4' };\n                            if (lowerName.includes('rental') || lowerName.includes('vehicle')) \n                              return { icon: '🚗', color: '#34495e', bgColor: '#ebedef' };\n                            if (lowerName.includes('winter') || lowerName.includes('sport')) \n                              return { icon: '⛷️', color: '#3498db', bgColor: '#ebf5fb' };\n                            if (lowerName.includes('personal') && lowerName.includes('effect')) \n                              return { icon: '👜', color: '#8e44ad', bgColor: '#f5eef8' };\n                            return { icon: '📋', color: '#27ae60', bgColor: '#eafaf1' };\n                          };\n\n                          const { icon, color, bgColor } = getIconAndColor(cover.name);\n\n                          return (\n                            <div key={index} style={{\n                              background: `linear-gradient(135deg, ${bgColor} 0%, #ffffff 100%)`,\n                              border: `2px solid ${bgColor}`,\n                              borderRadius: '12px',\n                              padding: '18px',\n                              transition: 'all 0.3s ease',\n                              cursor: 'pointer',\n                              position: 'relative',\n                              overflow: 'hidden'\n                            }}\n                            onMouseEnter={(e) => {\n                              e.currentTarget.style.transform = 'translateY(-5px)';\n                              e.currentTarget.style.boxShadow = `0 8px 25px rgba(0,0,0,0.15)`;\n                              e.currentTarget.style.borderColor = color;\n                            }}\n                            onMouseLeave={(e) => {\n                              e.currentTarget.style.transform = 'translateY(0)';\n                              e.currentTarget.style.boxShadow = 'none';\n                              e.currentTarget.style.borderColor = bgColor;\n                            }}>\n                              {/* Decorative background element */}\n                              <div style={{\n                                position: 'absolute',\n                                top: '-20px',\n                                right: '-20px',\n                                width: '80px',\n                                height: '80px',\n                                background: color,\n                                opacity: '0.1',\n                                borderRadius: '50%'\n                              }}></div>\n                              \n                              <div style={{ display: 'flex', alignItems: 'flex-start', gap: '12px', position: 'relative', zIndex: 1 }}>\n                                <div style={{\n                                  fontSize: '2.5em',\n                                  background: color,\n                                  width: '60px',\n                                  height: '60px',\n                                  borderRadius: '12px',\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                  flexShrink: 0,\n                                  boxShadow: `0 4px 15px ${color}40`\n                                }}>\n                                  {icon}\n                                </div>\n                                <div style={{ flex: 1, minWidth: 0 }}>\n                                  <div style={{\n                                    fontSize: '0.9em',\n                                    color: '#555',\n                                    fontWeight: '500',\n                                    marginBottom: '8px',\n                                    lineHeight: '1.3'\n                                  }}>\n                                    {cover.name}\n                                  </div>\n                                  <div style={{\n                                    fontSize: '1.3em',\n                                    fontWeight: '700',\n                                    color: color,\n                                    marginBottom: '4px'\n                                  }}>\n                                    {cover.Limit}\n                                  </div>\n                                  {cover.Excess && cover.Excess !== '€0' && cover.Excess !== 'Nil' && (\n                                    <div style={{\n                                      fontSize: '0.85em',\n                                      color: '#888',\n                                      background: '#f8f9fa',\n                                      padding: '4px 8px',\n                                      borderRadius: '6px',\n                                      display: 'inline-block',\n                                      marginTop: '4px'\n                                    }}>\n                                      <span style={{ fontWeight: '600' }}>Excess:</span> {cover.Excess}\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    ) : (\n                      <div className=\"coverage-grid\">\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">🏥</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Medical Emergency</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.medical}</span>\n                          </div>\n                        </div>\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">🧳</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Baggage Protection</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.baggage}</span>\n                          </div>\n                        </div>\n                        <div className=\"coverage-item\">\n                          <span className=\"coverage-icon\">❌</span>\n                          <div className=\"coverage-details\">\n                            <span className=\"coverage-type\">Trip Cancellation</span>\n                            <span className=\"coverage-amount\">{formData.selectedQuote.coverage.cancellation}</span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Summary Totals */}\n          <div className=\"summary-card total-card\">\n            <div className=\"card-content\">\n              <div className=\"total-summary\">\n                <div className=\"total-row\">\n                  <span className=\"total-label\">Base Premium:</span>\n                  <span className=\"total-value\">€{formData.selectedQuote?.price}</span>\n                </div>\n                {formData.additionalPolicies.length > 0 && (\n                  <div className=\"total-row\">\n                    <span className=\"total-label\">Additional Policies:</span>\n                    <span className=\"total-value\">€{(() => {\n                      // Calculate addon amount as Total Amount - Base Premium\n                      const basePrice = typeof formData.selectedQuote?.price === 'number' \n                        ? formData.selectedQuote.price \n                        : parseFloat(formData.selectedQuote?.price || '0');\n                      const totalAmount = calculateTotalPrice();\n                      const addonAmount = totalAmount - basePrice;\n                      return addonAmount.toFixed(2);\n                    })()}</span>\n                  </div>\n                )}\n                <div className=\"total-row\">\n                  <span className=\"total-label\">Taxes & Fees:</span>\n                  <span className=\"total-value\">Included</span>\n                </div>\n                <div className=\"total-row final-total\">\n                  <span className=\"total-label\">Total Amount:</span>\n                  <span className=\"total-value\">€{calculateTotalPrice().toFixed(2)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderPhase5 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Confirmation</h2>\n      <p>Please confirm that all details are correct before proceeding to payment.</p>\n      \n      <div className=\"confirmation-box\">\n        <div className=\"confirmation-item\">\n          <strong>Trip:</strong> {formData.destination} ({formatDateToEuropean(formData.startDate)} to {formatDateToEuropean(formData.endDate)})\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Country of Residence:</strong> {formData.countryOfResidence}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Travelers:</strong> {formData.numberOfTravelers} person{formData.numberOfTravelers > 1 ? 's' : ''}\n        </div>\n        <div className=\"confirmation-item\">\n          <strong>Plan:</strong> {formData.selectedQuote?.name}\n        </div>\n        <div className=\"confirmation-item total\">\n          <strong>Total Amount:</strong> €{calculateTotalPrice().toFixed(2)}\n        </div>\n      </div>\n    </div>\n  );\n\n  // Helper function to decode HTML entities and format question text\n  const decodeQuestionText = (text: string): string => {\n    if (!text) return '';\n    \n    // Create a temporary element to decode HTML entities\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = text;\n    let decoded = textarea.value;\n    \n    // Replace <BR> tags (after decoding &lt;BR&gt;) with actual line breaks\n    decoded = decoded.replace(/<BR>/gi, '\\n');\n    decoded = decoded.replace(/&lt;BR&gt;/gi, '\\n');\n    \n    return decoded;\n  };\n\n  const renderPhase6 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Screening Questions</h2>\n      <p>Please answer the following questions to complete your insurance application.</p>\n      \n      <div className=\"screening-questions\">\n        {screeningQuestions.length === 0 ? (\n          <div className=\"no-questions\">\n            <p>No screening questions required for this policy.</p>\n            <p style={{ fontSize: '14px', color: '#666', marginTop: '10px' }}>\n              The API returned an empty response or no questions are configured for this quote.\n            </p>\n          </div>\n        ) : (\n          screeningQuestions.map((question, index) => {\n            const decodedQuestion = decodeQuestionText(question.question);\n            \n            return (\n              <div key={question.questionNumber} className=\"screening-question\">\n                <h3>Question {question.questionNumber}</h3>\n                <div className=\"question-text\" style={{ \n                  whiteSpace: 'pre-wrap',\n                  lineHeight: '1.6',\n                  padding: '15px',\n                  background: '#f9f9f9',\n                  borderRadius: '8px',\n                  border: '1px solid #e0e0e0'\n                }}>\n                  {decodedQuestion}\n                </div>\n                \n                <div className=\"question-options\" style={{ marginTop: '20px' }}>\n                  <label className=\"radio-option\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${question.questionNumber}`}\n                      value=\"yes\"\n                      checked={screeningAnswers[question.questionNumber] === 'yes'}\n                      onChange={(e) => setScreeningAnswers(prev => ({\n                        ...prev,\n                        [question.questionNumber]: 'yes'\n                      }))}\n                    />\n                    <span>Yes</span>\n                  </label>\n                  <label className=\"radio-option\">\n                    <input\n                      type=\"radio\"\n                      name={`question-${question.questionNumber}`}\n                      value=\"no\"\n                      checked={screeningAnswers[question.questionNumber] === 'no'}\n                      onChange={(e) => setScreeningAnswers(prev => ({\n                        ...prev,\n                        [question.questionNumber]: 'no'\n                      }))}\n                    />\n                    <span>No</span>\n                  </label>\n                </div>\n                \n                {/* Show messages based on answer */}\n                {screeningAnswers[question.questionNumber] && (\n                  <div className={`answer-message ${screeningAnswers[question.questionNumber]}`}>\n                    <p style={{ whiteSpace: 'pre-wrap' }}>\n                      {screeningAnswers[question.questionNumber] === 'yes' \n                        ? decodeQuestionText(question.yesMessage)\n                        : decodeQuestionText(question.noMessage)}\n                    </p>\n                    {/* Show action text if available */}\n                    {question.yesAction && screeningAnswers[question.questionNumber] === 'yes' && question.yesActionText && (\n                      <p style={{ fontSize: '13px', marginTop: '5px', fontStyle: 'italic' }}>\n                        Action: {question.yesActionText}\n                      </p>\n                    )}\n                    {question.noAction && screeningAnswers[question.questionNumber] === 'no' && question.noActionText && (\n                      <p style={{ fontSize: '13px', marginTop: '5px', fontStyle: 'italic' }}>\n                        Action: {question.noActionText}\n                      </p>\n                    )}\n                  </div>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n\n  const renderPhase7 = () => (\n    <div className=\"wizard-phase\">\n      <h2>Payment Details</h2>\n      <p>Enter your payment information to complete your purchase.</p>\n      \n      {/* Traveler Information and Billing Address - Grouped Background */}\n      <div className=\"payment-traveler-billing-group\">\n        {/* Traveler Information Section */}\n        <div className=\"form-section\">\n          <h3>Traveler Information</h3>\n          {formData.travelers.map((traveler, index) => (\n            <div key={index} className=\"traveler-info\">\n              <h4>Traveler {index + 1}{index === 0 ? '/Policy holder' : ''}</h4>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`title-${index}`}>Title</label>\n                <select\n                  id={`title-${index}`}\n                  value={traveler.title || 'Mr'}\n                  onChange={(e) => handleTravelerChange(index, 'title', e.target.value)}\n                  title=\"Select the traveler's title\"\n                >\n                  <option value=\"Mr\">Mr</option>\n                  <option value=\"Mrs\">Mrs</option>\n                  <option value=\"Miss\">Miss</option>\n                  <option value=\"Ms\">Ms</option>\n                  <option value=\"Dr\">Dr</option>\n                  <option value=\"Prof\">Prof</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`firstName-${index}`}>First Name</label>\n                <input\n                  type=\"text\"\n                  id={`firstName-${index}`}\n                  value={traveler.firstName}\n                  onChange={(e) => handleTravelerChange(index, 'firstName', e.target.value)}\n                  placeholder=\"Enter first name\"\n                  title=\"Enter the traveler's first name\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`lastName-${index}`}>Last Name</label>\n                <input\n                  type=\"text\"\n                  id={`lastName-${index}`}\n                  value={traveler.lastName}\n                  onChange={(e) => handleTravelerChange(index, 'lastName', e.target.value)}\n                  placeholder=\"Enter last name\"\n                  title=\"Enter the traveler's last name\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor={`dateOfBirth-${index}`}>Date of Birth</label>\n                <input\n                  type=\"date\"\n                  id={`dateOfBirth-${index}`}\n                  value={traveler.dateOfBirth || ''}\n                  onChange={(e) => {\n                    const dateOfBirth = e.target.value;\n                    // Auto-calculate age from date of birth\n                    if (dateOfBirth) {\n                      const age = calculateAgeFromDateOfBirth(dateOfBirth);\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                      handleTravelerChange(index, 'age', age.toString());\n                    } else {\n                      handleTravelerChange(index, 'dateOfBirth', dateOfBirth);\n                    }\n                  }}\n                  title=\"Enter the traveler's date of birth\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor={`vaxId-${index}`}>\n                  VAT ID\n                  {index === 0 && formData.countryOfResidence === 'Greece' && <span style={{color: 'red'}}>*</span>}\n                  {index === 0 && formData.countryOfResidence === 'Greece' && <span style={{fontSize: '12px', color: '#666'}}> (Required for Greece)</span>}\n                </label>\n                <input\n                  type=\"text\"\n                  id={`vaxId-${index}`}\n                  value={traveler.vaxId}\n                  onChange={(e) => handleTravelerChange(index, 'vaxId', e.target.value)}\n                  placeholder={index === 0 && formData.countryOfResidence === 'Greece' ? \"Enter VAT ID (Required)\" : \"Enter VAT ID (Optional)\"}\n                  title={index === 0 && formData.countryOfResidence === 'Greece' ? \"VAT ID is required for Greece\" : \"Enter the traveler's VAT ID (optional)\"}\n                  required={index === 0 && formData.countryOfResidence === 'Greece'}\n                />\n              </div>\n            </div>\n            \n            {/* Email and Phone - Only for first traveler/policy holder */}\n            {index === 0 && (\n              <div className=\"form-row\">\n                <div className=\"form-group\">\n                  <label htmlFor={`email-${index}`}>Email</label>\n                  <input\n                    type=\"email\"\n                    id={`email-${index}`}\n                    value={traveler.email}\n                    onChange={(e) => handleTravelerChange(index, 'email', e.target.value)}\n                    placeholder=\"Enter email address\"\n                    title=\"Enter the traveler's email address\"\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor={`phone-${index}`}>Phone</label>\n                  <input\n                    type=\"tel\"\n                    id={`phone-${index}`}\n                    value={traveler.phone}\n                    onChange={(e) => handleTravelerChange(index, 'phone', e.target.value)}\n                    placeholder=\"+30 123 456 7890\"\n                    title=\"Enter the traveler's phone number\"\n                    required\n                  />\n                </div>\n              </div>\n            )}\n            \n            {/* Billing Address - Only for first traveler */}\n            {index === 0 && (\n              <>\n                <hr style={{ margin: '20px 0', border: 'none', borderTop: '1px solid #e0e0e0' }} />\n                <h4>Billing Address</h4>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"street\">Street Address</label>\n                    <input\n                      type=\"text\"\n                      id=\"street\"\n                      value={formData.billingAddress.street}\n                      onChange={(e) => handleBillingAddressChange('street', e.target.value)}\n                      placeholder=\"Enter street address\"\n                      title=\"Enter your billing street address\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"postalCode\">Postal Code</label>\n                    <input\n                      type=\"text\"\n                      id=\"postalCode\"\n                      value={formData.billingAddress.postalCode}\n                      onChange={(e) => handleBillingAddressChange('postalCode', e.target.value)}\n                      placeholder=\"Enter postal code\"\n                      title=\"Enter your billing postal code\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"city\">City</label>\n                    <input\n                      type=\"text\"\n                      id=\"city\"\n                      value={formData.billingAddress.city}\n                      onChange={(e) => handleBillingAddressChange('city', e.target.value)}\n                      placeholder=\"Enter city\"\n                      title=\"Enter your billing city\"\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"country\">Country</label>\n                    <input\n                      type=\"text\"\n                      id=\"country\"\n                      value={formData.billingAddress.country}\n                      onChange={(e) => handleBillingAddressChange('country', e.target.value)}\n                      placeholder=\"Enter country\"\n                      title=\"Enter your billing country\"\n                      required\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        ))}\n        </div>\n      </div>\n      \n      {/* Payment Method - Separate Background */}\n      <div className=\"payment-method-group\">\n        <div className=\"payment-section\">\n        <div className=\"payment-methods\">\n          <h3>Payment Method</h3>\n          <div className=\"payment-method-info\">\n            <p>We accept all major credit and debit cards for secure payment processing.</p>\n          </div>\n        </div>\n\n        <div className=\"card-details\">\n          <h3>Card Details</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"cardNumber\">Card Number</label>\n            <input\n              type=\"text\"\n              id=\"cardNumber\"\n              value={formData.cardNumber}\n              onChange={(e) => handleInputChange('cardNumber', e.target.value)}\n              placeholder=\"1234 5678 9012 3456\"\n              title=\"Enter your 16-digit card number\"\n              required\n            />\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"expiryDate\">Expiry Date</label>\n              <input\n                type=\"text\"\n                id=\"expiryDate\"\n                value={formData.expiryDate}\n                onChange={(e) => handleInputChange('expiryDate', e.target.value)}\n                placeholder=\"mm / yyyy\"\n                title=\"Enter card expiry date in mm / yyyy format\"\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"cvv\">CVV</label>\n              <input\n                type=\"text\"\n                id=\"cvv\"\n                value={formData.cvv}\n                onChange={(e) => handleInputChange('cvv', e.target.value)}\n                placeholder=\"123\"\n                title=\"Enter the 3-digit CVV code from the back of your card\"\n                required\n              />\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      \n      <div className=\"payment-summary\">\n        <div className=\"summary-item\">\n          <strong>Total Amount: €{calculateTotalPrice().toFixed(2)}</strong>\n        </div>\n      </div>\n      \n      <div className=\"terms-section\">\n        <label className=\"checkbox-option\">\n          <input \n            type=\"checkbox\" \n            required \n            checked={termsAccepted}\n            onChange={(e) => handleTermsAcceptance(e.target.checked)}\n          />\n          <span>I have read and accept the <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); setShowPrivacyPolicy(true); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            Privacy Policy\n          </button>, <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); setShowTermsAndConditions(true); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            Terms and Conditions\n          </button> and <button \n            className=\"link-button\" \n            onClick={(e) => { e.preventDefault(); fetchGeneralConditions(); }}\n            style={{ background: 'none', border: 'none', color: '#0077b6', textDecoration: 'underline', cursor: 'pointer', padding: 0 }}\n          >\n            General conditions\n          </button>.</span>\n        </label>\n        <label className=\"checkbox-option\">\n          <input \n            type=\"checkbox\" \n            required\n            checked={marketingEmailsAccepted}\n            onChange={(e) => setMarketingEmailsAccepted(e.target.checked)}\n          />\n          <span>I would like to receive marketing emails about travel insurance offers</span>\n        </label>\n      </div>\n    </div>\n  );\n\n  const renderPhase8 = () => (\n    <div className=\"wizard-phase\">\n      <h2>🎉 Congratulations!</h2>\n      <p>Your travel insurance has been successfully purchased.</p>\n      \n      <div className=\"success-message\">\n        <div className=\"policy-number\">\n          <strong>Policy Number:</strong> {policyNumber ? policyNumber : 'Processing...'}\n        </div>\n        <div className=\"confirmation-email\">\n          <strong>A confirmation email has been sent to {formData.travelers[0]?.email}</strong>\n        </div>\n      </div>\n      \n      <div className=\"documents-section\">\n        <h3>Your Documents</h3>\n        <p style={{ fontSize: '14px', color: '#666', marginBottom: '15px' }}>\n          Click on any document to open it in a new tab\n        </p>\n        <div className=\"document-links\">\n          {/* Summary of Cover from SavePolicyDetails */}\n          {policyDocuments.summaryOfCover ? (\n            <a \n              href={policyDocuments.summaryOfCover} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Summary of Cover in new tab\"\n              title=\"View Summary of Cover from Terracotta\"\n            >\n              📄 Summary of Cover\n            </a>\n          ) : formData.selectedQuote?.SI ? (\n            <a \n              href={formData.selectedQuote.SI} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Summary of Cover in new tab\"\n              title=\"View Summary of Cover (from quote)\"\n            >\n              📄 Summary of Cover (from quote)\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              📄 Summary of Cover (Not Available)\n            </div>\n          )}\n\n          {/* Policy Wording from SavePolicyDetails */}\n          {policyDocuments.policyWording ? (\n            <a \n              href={policyDocuments.policyWording} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Policy Wording in new tab\"\n              title=\"View Policy Wording from Terracotta\"\n            >\n              📋 Policy Wording\n            </a>\n          ) : formData.selectedQuote?.PW ? (\n            <a \n              href={formData.selectedQuote.PW} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Policy Wording in new tab\"\n              title=\"View Policy Wording (from quote)\"\n            >\n              📋 Policy Wording (from quote)\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              📋 Policy Wording (Not Available)\n            </div>\n          )}\n\n          {/* Certificate from SavePolicyDetails */}\n          {policyDocuments.certificate ? (\n            <a \n              href={policyDocuments.certificate} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Certificate in new tab\"\n              title=\"View Certificate from Terracotta\"\n            >\n              🆔 Certificate\n            </a>\n          ) : (\n            <div className=\"document-link disabled\" style={{ opacity: 0.5, cursor: 'not-allowed' }}>\n              🆔 Certificate (Pending - may be emailed separately)\n            </div>\n          )}\n\n          {/* Key Facts from SavePolicyDetails */}\n          {policyDocuments.keyFacts && (\n            <a \n              href={policyDocuments.keyFacts} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open Key Facts in new tab\"\n              title=\"View Key Facts from Terracotta\"\n            >\n              📋 Key Facts\n            </a>\n          )}\n\n          {/* IPID from SavePolicyDetails */}\n          {policyDocuments.ipid && (\n            <a \n              href={policyDocuments.ipid} \n              className=\"document-link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Open IPID in new tab\"\n              title=\"View Insurance Product Information Document\"\n            >\n              📄 IPID\n            </a>\n          )}\n\n          {/* Generated Policy PDF */}\n          <button \n            onClick={downloadPolicyPDF} \n            className=\"document-link download-btn\"\n            aria-label=\"Download your policy summary as a PDF document\"\n            title=\"Download a PDF copy of your travel insurance policy summary\"\n            type=\"button\"\n          >\n            📄 Download Your Policy Summary (PDF)\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"next-steps\">\n        <h3>What's Next?</h3>\n        <ul>\n          <li>Save your policy documents in a safe place</li>\n          <li>Keep the emergency contact numbers with you while traveling</li>\n          <li>Download our mobile app for easy access to your policy</li>\n          <li>Contact us anytime at +30 6974907500 for assistance</li>\n        </ul>\n      </div>\n    </div>\n  );\n\n  const renderPhaseContent = () => {\n    switch (currentPhase) {\n      case 1:\n        return renderPhase1(); // Trip Details\n      case 2:\n        return renderPhase2(); // Quotes\n      case 3:\n        return renderPhase3(); // Add-ons\n      case 4:\n        return renderPhase4(); // Review\n      case 5:\n        return renderPhase7(); // Payment\n      case 6:\n        return renderPhase8(); // Documents\n      default:\n        return renderPhase1();\n    }\n  };\n\n  return (\n    <div className=\"quote-page\">\n      <style>\n        {`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n      <div className=\"container\">\n        <div className=\"wizard-header\">\n          <h1>Travel Insurance Quote Wizard</h1>\n            <div className=\"wizard-progress\">\n              {[1, 2, 3, 4, 5, 6].map(phase => (\n                <div key={phase} className={`progress-step ${currentPhase >= phase ? 'active' : ''} ${currentPhase === phase ? 'current' : ''}`}>\n                  <div className=\"step-number\">{phase}</div>\n                  <div className=\"step-label\">\n                    {phase === 1 && 'Details'}\n                    {phase === 2 && 'Quotes'}\n                    {phase === 3 && 'Add-ons'}\n                    {phase === 4 && 'Review'}\n                    {phase === 5 && 'Payment'}\n                    {phase === 6 && 'Documents'}\n                  </div>\n                </div>\n              ))}\n            </div>\n        </div>\n\n        <div className=\"wizard-content\">\n          {renderPhaseContent()}\n        </div>\n\n        <div className=\"wizard-navigation\">\n          {currentPhase > 1 && currentPhase < 6 && (\n            <button \n              className=\"btn btn-secondary\" \n              onClick={prevPhase}\n              aria-label=\"Go to previous step\"\n              title=\"Go back to the previous step\"\n              type=\"button\"\n            >\n              Previous\n            </button>\n          )}\n          \n          {currentPhase < 5 && (\n            <button \n              className=\"btn btn-primary\" \n              onClick={nextPhase}\n              disabled={!isPhaseValid(currentPhase)}\n              aria-label={currentPhase === 4 ? 'Proceed to payment step' : 'Go to next step'}\n              title={currentPhase === 4 ? 'Continue to payment details' : 'Continue to next step'}\n              type=\"button\"\n            >\n              {currentPhase === 4 ? 'Proceed to Payment' : 'Next'}\n            </button>\n          )}\n          \n          {currentPhase === 5 && (\n            <>\n              <button \n                className=\"btn btn-primary\" \n                onClick={processPayment}\n                disabled={!isPhaseValid(currentPhase) || isProcessing}\n                aria-label={isProcessing ? 'Processing payment, please wait' : `Pay €${calculateTotalPrice().toFixed(2)} for your travel insurance`}\n                title={isProcessing ? 'Payment is being processed, please wait' : `Complete payment of €${calculateTotalPrice().toFixed(2)}`}\n                type=\"button\"\n                style={{\n                  opacity: (!isPhaseValid(currentPhase) || isProcessing) ? 0.5 : 1,\n                  cursor: (!isPhaseValid(currentPhase) || isProcessing) ? 'not-allowed' : 'pointer'\n                }}\n              >\n                {isProcessing ? 'Processing Payment...' : `Pay €${calculateTotalPrice().toFixed(2)}`}\n              </button>\n              \n            </>\n          )}\n          \n          {currentPhase === 6 && (\n            <button \n              className=\"btn btn-primary\" \n              onClick={() => window.location.href = '/'}\n              aria-label=\"Return to homepage\"\n              title=\"Go back to the main homepage\"\n              type=\"button\"\n            >\n              Return to Homepage\n            </button>\n          )}\n        </div>\n      </div>\n      \n      {/* Help Popup for Destination Categories */}\n      {showHelpPopup && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowHelpPopup(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Destination Categories & Countries</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowHelpPopup(false)}\n                aria-label=\"Close help popup\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              {isLoadingCountries ? (\n                <div className=\"loading-message\">Loading countries...</div>\n              ) : (\n                <div className=\"categories-container\">\n                  {Object.entries(countriesByCategory).map(([category, countries]) => (\n                    <div key={category} className=\"category-section\">\n                      <h4 className=\"category-title\">{category}</h4>\n                      <div className=\"countries-grid\">\n                        {countries.map((country) => (\n                          <span key={country} className=\"country-item\">\n                            {country}\n                          </span>\n                        ))}\n                      </div>\n                      <div className=\"category-count\">\n                        {countries.length} countries\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Privacy Policy Popup */}\n      {showPrivacyPolicy && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowPrivacyPolicy(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Privacy Policy</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowPrivacyPolicy(false)}\n                aria-label=\"Close privacy policy\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Sample Privacy Policy</h4>\n                <p>This is a sample Privacy Policy. The actual content will be added later.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>1. Information We Collect</h5>\n                <p>We collect information that you provide directly to us, including personal information such as your name, email address, date of birth, and travel details.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>2. How We Use Your Information</h5>\n                <p>We use the information we collect to provide, maintain, and improve our services, including processing your insurance quotes and policies.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>3. Data Security</h5>\n                <p>We implement appropriate technical and organizational measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>4. Your Rights</h5>\n                <p>You have the right to access, correct, or delete your personal information. You may also object to or restrict certain processing of your data.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>5. Contact Us</h5>\n                <p>If you have any questions about this Privacy Policy, please contact us at privacy@example.com</p>\n                \n                <p style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\n                  Last updated: {new Date().toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Terms and Conditions Popup */}\n      {showTermsAndConditions && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowTermsAndConditions(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>Terms and Conditions</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowTermsAndConditions(false)}\n                aria-label=\"Close terms and conditions\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Sample Terms and Conditions</h4>\n                <p>This is a sample Terms and Conditions document. The actual content will be added later.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>1. Acceptance of Terms</h5>\n                <p>By purchasing travel insurance from us, you agree to be bound by these Terms and Conditions. Please read them carefully before proceeding with your purchase.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>2. Insurance Coverage</h5>\n                <p>The insurance coverage is subject to the terms, conditions, and exclusions set forth in the policy documents. Coverage begins on the start date specified in your policy.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>3. Premium Payment</h5>\n                <p>The insurance premium must be paid in full before coverage begins. All payments are processed securely through our payment gateway.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>4. Claims Process</h5>\n                <p>In the event of a claim, you must notify us as soon as reasonably possible and provide all required documentation to support your claim.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>5. Cancellation Policy</h5>\n                <p>You may cancel your policy within the cooling-off period specified in your policy documents for a full refund, provided no claims have been made.</p>\n                \n                <h5 style={{ marginTop: '20px' }}>6. Governing Law</h5>\n                <p>These Terms and Conditions are governed by and construed in accordance with applicable insurance regulations.</p>\n                \n                <p style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\n                  Last updated: {new Date().toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* General Conditions Popup - Shows Screening Questions Response */}\n      {showGeneralConditions && (\n        <div className=\"help-popup-overlay\" onClick={() => setShowGeneralConditions(false)}>\n          <div className=\"help-popup\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"help-popup-header\">\n              <h3>General Conditions</h3>\n              <button \n                className=\"help-popup-close\" \n                onClick={() => setShowGeneralConditions(false)}\n                aria-label=\"Close general conditions\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"help-popup-content\">\n              <div style={{ padding: '20px', lineHeight: '1.6' }}>\n                <h4>Screening Questions & General Conditions</h4>\n                <p style={{ marginBottom: '20px', color: '#666' }}>\n                  These are the general conditions and screening questions for your selected policy.\n                </p>\n                \n                {generalConditionsData.length === 0 ? (\n                  <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>\n                    <p>No general conditions available for this policy.</p>\n                  </div>\n                ) : (\n                  <div className=\"screening-questions\">\n                    {generalConditionsData.map((question, index) => {\n                      const decodedQuestion = decodeQuestionText(question.question);\n                      const decodedNoMessage = question.noMessage ? decodeQuestionText(question.noMessage) : '';\n                      \n                      // Filter out specific unwanted text from the No message\n                      const filteredNoMessage = decodedNoMessage.replace(\n                        /Yes\\/No \\(If No cannot proceed with purchase\\)\\.\\s*If No:\\s*You must confirm that you have read and accepted the following to purchase this insurance by selecting Yes\\.\\s*If you are unable to agree with any of the following statements, then you are unable to continue with the purchase of this insurance\\.\\s*/gi,\n                        ''\n                      ).trim();\n                      \n                      return (\n                        <div key={question.questionNumber} style={{ \n                          marginBottom: '25px',\n                          padding: '15px',\n                          background: '#f9f9f9',\n                          borderRadius: '8px',\n                          border: '1px solid #e0e0e0'\n                        }}>\n                          <div style={{ \n                            whiteSpace: 'pre-wrap',\n                            lineHeight: '1.6',\n                            marginBottom: '10px'\n                          }}>\n                            {decodedQuestion}\n                          </div>\n                          \n                          {question.yesMessage && (\n                            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n                              <strong style={{ color: '#d9534f' }}>If Yes:</strong>\n                              <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px', color: '#555' }}>\n                                {decodeQuestionText(question.yesMessage)}\n                              </p>\n                            </div>\n                          )}\n                          \n                          {filteredNoMessage && (\n                            <div style={{ marginTop: '10px', fontSize: '14px' }}>\n                              <strong style={{ color: '#5cb85c' }}>If No:</strong>\n                              <p style={{ whiteSpace: 'pre-wrap', marginTop: '5px', color: '#555' }}>\n                                {filteredNoMessage}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quote2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}